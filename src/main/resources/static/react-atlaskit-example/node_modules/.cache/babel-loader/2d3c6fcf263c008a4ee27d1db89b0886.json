{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport { gridSize } from '@atlaskit/theme/constants';\nimport { B100 } from '@atlaskit/theme/colors';\nvar baseStyles = {\n  itemBase: {\n    alignItems: 'center',\n    border: 0,\n    borderRadius: '50%',\n    color: 'inherit',\n    cursor: 'pointer',\n    display: 'flex',\n    fontSize: 'inherit',\n    justifyContent: 'center',\n    lineHeight: 1,\n    outline: 'none',\n    padding: 0,\n    position: 'relative',\n    // allow badge positioning\n    '&:focus': {\n      boxShadow: \"0 0 0 2px \".concat(B100)\n    }\n  },\n  badgeWrapper: {\n    pointerEvents: 'none',\n    position: 'absolute',\n    userSelect: 'none'\n  },\n  itemWrapper: {\n    display: 'flex'\n  }\n};\nvar sizeStyles = {\n  large: {\n    itemBase: {\n      height: \"\".concat(gridSize() * 5, \"px\"),\n      width: \"\".concat(gridSize() * 5, \"px\")\n    },\n    badgeWrapper: {\n      left: \"\".concat(gridSize() * 2, \"px\"),\n      top: 0\n    },\n    itemWrapper: {}\n  },\n  small: {\n    itemBase: {\n      height: \"\".concat(gridSize() * 4, \"px\"),\n      width: \"\".concat(gridSize() * 4, \"px\")\n    },\n    badgeWrapper: {\n      left: \"\".concat(gridSize() * 2.5, \"px\"),\n      top: \"-\".concat(gridSize() / 2, \"px\")\n    },\n    itemWrapper: {\n      padding: \"\".concat(gridSize() / 2, \"px\")\n    }\n  }\n};\nexport default (function (_ref) {\n  var product = _ref.product;\n  return function (_ref2) {\n    var isActive = _ref2.isActive,\n        isHover = _ref2.isHover,\n        isSelected = _ref2.isSelected,\n        _ref2$size = _ref2.size,\n        size = _ref2$size === void 0 ? 'large' : _ref2$size;\n    return {\n      itemBase: _objectSpread({}, baseStyles.itemBase, sizeStyles[size].itemBase, {\n        backgroundColor: function () {\n          if (isSelected) return product.background.static;\n          if (isActive) return product.background.interact;\n          if (isHover) return product.background.hint;\n          return product.background.default;\n        }(),\n        color: product.text.default\n      }),\n      badgeWrapper: _objectSpread({}, baseStyles.badgeWrapper, sizeStyles[size].badgeWrapper),\n      itemWrapper: _objectSpread({}, sizeStyles[size].itemWrapper)\n    };\n  };\n});","map":{"version":3,"sources":["/home/asirob/Code/atlasmicros/src/main/resources/static/react-atlaskit-example/node_modules/@atlaskit/navigation-next/dist/esm/components/presentational/GlobalItem/styles.js"],"names":["_objectSpread","gridSize","B100","baseStyles","itemBase","alignItems","border","borderRadius","color","cursor","display","fontSize","justifyContent","lineHeight","outline","padding","position","boxShadow","concat","badgeWrapper","pointerEvents","userSelect","itemWrapper","sizeStyles","large","height","width","left","top","small","_ref","product","_ref2","isActive","isHover","isSelected","_ref2$size","size","backgroundColor","background","static","interact","hint","default","text"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport { gridSize } from '@atlaskit/theme/constants';\nimport { B100 } from '@atlaskit/theme/colors';\nvar baseStyles = {\n  itemBase: {\n    alignItems: 'center',\n    border: 0,\n    borderRadius: '50%',\n    color: 'inherit',\n    cursor: 'pointer',\n    display: 'flex',\n    fontSize: 'inherit',\n    justifyContent: 'center',\n    lineHeight: 1,\n    outline: 'none',\n    padding: 0,\n    position: 'relative',\n    // allow badge positioning\n    '&:focus': {\n      boxShadow: \"0 0 0 2px \".concat(B100)\n    }\n  },\n  badgeWrapper: {\n    pointerEvents: 'none',\n    position: 'absolute',\n    userSelect: 'none'\n  },\n  itemWrapper: {\n    display: 'flex'\n  }\n};\nvar sizeStyles = {\n  large: {\n    itemBase: {\n      height: \"\".concat(gridSize() * 5, \"px\"),\n      width: \"\".concat(gridSize() * 5, \"px\")\n    },\n    badgeWrapper: {\n      left: \"\".concat(gridSize() * 2, \"px\"),\n      top: 0\n    },\n    itemWrapper: {}\n  },\n  small: {\n    itemBase: {\n      height: \"\".concat(gridSize() * 4, \"px\"),\n      width: \"\".concat(gridSize() * 4, \"px\")\n    },\n    badgeWrapper: {\n      left: \"\".concat(gridSize() * 2.5, \"px\"),\n      top: \"-\".concat(gridSize() / 2, \"px\")\n    },\n    itemWrapper: {\n      padding: \"\".concat(gridSize() / 2, \"px\")\n    }\n  }\n};\nexport default (function (_ref) {\n  var product = _ref.product;\n  return function (_ref2) {\n    var isActive = _ref2.isActive,\n        isHover = _ref2.isHover,\n        isSelected = _ref2.isSelected,\n        _ref2$size = _ref2.size,\n        size = _ref2$size === void 0 ? 'large' : _ref2$size;\n    return {\n      itemBase: _objectSpread({}, baseStyles.itemBase, sizeStyles[size].itemBase, {\n        backgroundColor: function () {\n          if (isSelected) return product.background.static;\n          if (isActive) return product.background.interact;\n          if (isHover) return product.background.hint;\n          return product.background.default;\n        }(),\n        color: product.text.default\n      }),\n      badgeWrapper: _objectSpread({}, baseStyles.badgeWrapper, sizeStyles[size].badgeWrapper),\n      itemWrapper: _objectSpread({}, sizeStyles[size].itemWrapper)\n    };\n  };\n});"]},"metadata":{},"sourceType":"module"}