{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport React from 'react';\nimport { layers } from '@atlaskit/theme/constants';\nimport Portal from '@atlaskit/portal';\nimport { ModalTransitionConsumer } from './ModalTransition';\nimport StackConsumer from './StackConsumer';\nimport Modal from './Modal';\n\nvar ModalWrapper =\n/** @class */\nfunction (_super) {\n  __extends(ModalWrapper, _super);\n\n  function ModalWrapper() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.onModalClosed = function (onExited) {\n      return function (e) {\n        if (onExited) {\n          onExited();\n        }\n\n        if (_this.props.onCloseComplete) {\n          _this.props.onCloseComplete(e);\n        }\n      };\n    };\n\n    return _this;\n  }\n\n  ModalWrapper.prototype.render = function () {\n    var _this = this;\n\n    return React.createElement(ModalTransitionConsumer, null, function (_a) {\n      var isOpen = _a.isOpen,\n          onExited = _a.onExited;\n      return React.createElement(Portal, {\n        zIndex: layers.modal()\n      }, React.createElement(StackConsumer, {\n        isOpen: isOpen\n      }, function (naturalStackIndex) {\n        return React.createElement(Modal, __assign({}, _this.props, {\n          isOpen: isOpen,\n          stackIndex: _this.props.stackIndex || naturalStackIndex,\n          onCloseComplete: _this.onModalClosed(onExited)\n        }), _this.props.children);\n      }));\n    });\n  };\n\n  ModalWrapper.defaultProps = {\n    autoFocus: true,\n    scrollBehavior: 'inside',\n    shouldCloseOnEscapePress: true,\n    shouldCloseOnOverlayClick: true,\n    isChromeless: false,\n    width: 'medium',\n    isHeadingMultiline: true,\n    onClose: function onClose() {}\n  };\n  return ModalWrapper;\n}(React.Component);\n\nexport default ModalWrapper;","map":{"version":3,"sources":["../../../src/components/ModalWrapper.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,MAAT,QAAuB,2BAAvB;AACA,OAAO,MAAP,MAAmB,kBAAnB;AACA,SAAS,uBAAT,QAAwC,mBAAxC;AACA,OAAO,aAAP,MAA0B,iBAA1B;AAIA,OAAO,KAAP,MAAkB,SAAlB;;AAqHA,IAAA,YAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA2B,EAAA,SAAA,CAAA,YAAA,EAAA,MAAA,CAAA;;AAA3B,WAAA,YAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AAYE,IAAA,KAAA,CAAA,aAAA,GAAgB,UAAC,QAAD,EAAqB;AAAK,aAAA,UAAC,CAAD,EAAe;AACvD,YAAI,QAAJ,EAAc;AACZ,UAAA,QAAQ;AACT;;AACD,YAAI,KAAI,CAAC,KAAL,CAAW,eAAf,EAAgC;AAC9B,UAAA,KAAI,CAAC,KAAL,CAAW,eAAX,CAA2B,CAA3B;AACD;AANuC,OAAA;AAOzC,KAPD;;;AA+BD;;AAtBC,EAAA,YAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACE,WACE,KAAA,CAAA,aAAA,CAAC,uBAAD,EAAwB,IAAxB,EACG,UAAC,EAAD,EAAqB;UAAlB,MAAA,GAAA,EAAA,CAAA,M;UAAQ,QAAA,GAAA,EAAA,CAAA,Q;AAAe,aACzB,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO;AAAC,QAAA,MAAM,EAAE,MAAM,CAAC,KAAP;AAAT,OAAP,EACE,KAAA,CAAA,aAAA,CAAC,aAAD,EAAc;AAAC,QAAA,MAAM,EAAE;AAAT,OAAd,EACG,UAAA,iBAAA,EAAiB;AAAI,eACpB,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM,QAAA,CAAA,EAAA,EACA,KAAI,CAAC,KADL,EACU;AACd,UAAA,MAAM,EAAE,MADM;AAEd,UAAA,UAAU,EAAE,KAAI,CAAC,KAAL,CAAW,UAAX,IAAyB,iBAFvB;AAGd,UAAA,eAAe,EAAE,KAAI,CAAC,aAAL,CAAmB,QAAnB;AAHH,SADV,CAAN,EAMG,KAAI,CAAC,KAAL,CAPiB,QACpB,CADoB;AASrB,OAVH,CADF,CADyB;AAe1B,KAhBH,CADF;AAoBD,GArBD;;AApBO,EAAA,YAAA,CAAA,YAAA,GAAe;AACpB,IAAA,SAAS,EAAE,IADS;AAEpB,IAAA,cAAc,EAAE,QAFI;AAGpB,IAAA,wBAAwB,EAAE,IAHN;AAIpB,IAAA,yBAAyB,EAAE,IAJP;AAKpB,IAAA,YAAY,EAAE,KALM;AAMpB,IAAA,KAAK,EAAE,QANa;AAOpB,IAAA,kBAAkB,EAAE,IAPA;AAQpB,IAAA,OAAO,EAAE,mBAAA,CAAQ;AARG,GAAf;AA0CT,SAAA,YAAA;AAAC,CA3CD,CAA2B,KAAK,CAAC,SAAjC,CAAA;;AA6CA,eAAe,YAAf","sourceRoot":"","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport React from 'react';\nimport { layers } from '@atlaskit/theme/constants';\nimport Portal from '@atlaskit/portal';\nimport { ModalTransitionConsumer } from './ModalTransition';\nimport StackConsumer from './StackConsumer';\nimport Modal from './Modal';\nvar ModalWrapper = /** @class */ (function (_super) {\n    __extends(ModalWrapper, _super);\n    function ModalWrapper() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.onModalClosed = function (onExited) { return function (e) {\n            if (onExited) {\n                onExited();\n            }\n            if (_this.props.onCloseComplete) {\n                _this.props.onCloseComplete(e);\n            }\n        }; };\n        return _this;\n    }\n    ModalWrapper.prototype.render = function () {\n        var _this = this;\n        return (React.createElement(ModalTransitionConsumer, null, function (_a) {\n            var isOpen = _a.isOpen, onExited = _a.onExited;\n            return (React.createElement(Portal, { zIndex: layers.modal() },\n                React.createElement(StackConsumer, { isOpen: isOpen }, function (naturalStackIndex) { return (React.createElement(Modal, __assign({}, _this.props, { isOpen: isOpen, stackIndex: _this.props.stackIndex || naturalStackIndex, onCloseComplete: _this.onModalClosed(onExited) }), _this.props.children)); })));\n        }));\n    };\n    ModalWrapper.defaultProps = {\n        autoFocus: true,\n        scrollBehavior: 'inside',\n        shouldCloseOnEscapePress: true,\n        shouldCloseOnOverlayClick: true,\n        isChromeless: false,\n        width: 'medium',\n        isHeadingMultiline: true,\n        onClose: function () { },\n    };\n    return ModalWrapper;\n}(React.Component));\nexport default ModalWrapper;\n//# sourceMappingURL=ModalWrapper.js.map"]},"metadata":{},"sourceType":"module"}