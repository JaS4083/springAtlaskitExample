{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\n/**\n * NOTE: 'GlobalNav' is the layout primitive, which will be wrapped by the more\n * opinionated 'GlobalNavigation' component.\n */\n\nimport React, { Component, Fragment } from 'react';\nimport { NavigationAnalyticsContext } from '@atlaskit/analytics-namespaced-context';\nimport { FirstPrimaryItemWrapper, PrimaryItemsList, SecondaryItemsList } from './primitives';\n\nvar GlobalNavigation = /*#__PURE__*/function (_Component) {\n  _inherits(GlobalNavigation, _Component);\n\n  function GlobalNavigation() {\n    _classCallCheck(this, GlobalNavigation);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GlobalNavigation).apply(this, arguments));\n  }\n\n  _createClass(GlobalNavigation, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          ItemComponent = _this$props.itemComponent,\n          primaryItems = _this$props.primaryItems,\n          secondaryItems = _this$props.secondaryItems,\n          theme = _this$props.theme;\n      var wrapperStyles = theme.mode.globalNav({\n        topOffset: theme.topOffset\n      });\n      return ___EmotionJSX(NavigationAnalyticsContext, {\n        data: {\n          attributes: {\n            navigationLayer: 'global'\n          },\n          componentName: 'globalNav'\n        }\n      }, ___EmotionJSX(\"div\", {\n        css: wrapperStyles\n      }, ___EmotionJSX(PrimaryItemsList, null, ___EmotionJSX(NavigationAnalyticsContext, {\n        data: {\n          attributes: {\n            navigationIconGrouping: 'primary'\n          }\n        }\n      }, ___EmotionJSX(Fragment, null, primaryItems.map(function (props, index) {\n        // Render the first item with a margin beneath it and a large icon\n        if (!index) {\n          var Icon = props.icon,\n              rest = _objectWithoutProperties(props, [\"icon\"]);\n\n          return ___EmotionJSX(FirstPrimaryItemWrapper, {\n            key: props.id\n          }, ___EmotionJSX(ItemComponent, _extends({}, rest, {\n            icon: function icon(provided) {\n              return ___EmotionJSX(Icon, _extends({}, provided, {\n                size: \"large\"\n              }));\n            },\n            size: \"large\",\n            index: index\n          })));\n        }\n\n        return ___EmotionJSX(ItemComponent, _extends({}, props, {\n          key: props.id,\n          size: \"small\",\n          index: index\n        }));\n      })))), ___EmotionJSX(SecondaryItemsList, null, ___EmotionJSX(NavigationAnalyticsContext, {\n        data: {\n          attributes: {\n            navigationIconGrouping: 'secondary'\n          }\n        }\n      }, ___EmotionJSX(Fragment, null, secondaryItems.map(function (props, index) {\n        return ___EmotionJSX(ItemComponent, _extends({}, props, {\n          key: props.id,\n          size: \"small\",\n          index: index\n        }));\n      }))))));\n    }\n  }]);\n\n  return GlobalNavigation;\n}(Component);\n\nexport { GlobalNavigation as default };","map":{"version":3,"sources":["/home/asirob/Code/atlasmicros/src/main/resources/static/react-atlaskit-example/node_modules/@atlaskit/navigation-next/dist/esm/components/presentational/GlobalNav/GlobalNavigation.js"],"names":["_extends","_objectWithoutProperties","_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_inherits","jsx","___EmotionJSX","React","Component","Fragment","NavigationAnalyticsContext","FirstPrimaryItemWrapper","PrimaryItemsList","SecondaryItemsList","GlobalNavigation","_Component","apply","arguments","key","value","render","_this$props","props","ItemComponent","itemComponent","primaryItems","secondaryItems","theme","wrapperStyles","mode","globalNav","topOffset","data","attributes","navigationLayer","componentName","css","navigationIconGrouping","map","index","Icon","icon","rest","id","provided","size","default"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\n\n/**\n * NOTE: 'GlobalNav' is the layout primitive, which will be wrapped by the more\n * opinionated 'GlobalNavigation' component.\n */\nimport React, { Component, Fragment } from 'react';\nimport { NavigationAnalyticsContext } from '@atlaskit/analytics-namespaced-context';\nimport { FirstPrimaryItemWrapper, PrimaryItemsList, SecondaryItemsList } from './primitives';\n\nvar GlobalNavigation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GlobalNavigation, _Component);\n\n  function GlobalNavigation() {\n    _classCallCheck(this, GlobalNavigation);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GlobalNavigation).apply(this, arguments));\n  }\n\n  _createClass(GlobalNavigation, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          ItemComponent = _this$props.itemComponent,\n          primaryItems = _this$props.primaryItems,\n          secondaryItems = _this$props.secondaryItems,\n          theme = _this$props.theme;\n      var wrapperStyles = theme.mode.globalNav({\n        topOffset: theme.topOffset\n      });\n      return ___EmotionJSX(NavigationAnalyticsContext, {\n        data: {\n          attributes: {\n            navigationLayer: 'global'\n          },\n          componentName: 'globalNav'\n        }\n      }, ___EmotionJSX(\"div\", {\n        css: wrapperStyles\n      }, ___EmotionJSX(PrimaryItemsList, null, ___EmotionJSX(NavigationAnalyticsContext, {\n        data: {\n          attributes: {\n            navigationIconGrouping: 'primary'\n          }\n        }\n      }, ___EmotionJSX(Fragment, null, primaryItems.map(function (props, index) {\n        // Render the first item with a margin beneath it and a large icon\n        if (!index) {\n          var Icon = props.icon,\n              rest = _objectWithoutProperties(props, [\"icon\"]);\n\n          return ___EmotionJSX(FirstPrimaryItemWrapper, {\n            key: props.id\n          }, ___EmotionJSX(ItemComponent, _extends({}, rest, {\n            icon: function icon(provided) {\n              return ___EmotionJSX(Icon, _extends({}, provided, {\n                size: \"large\"\n              }));\n            },\n            size: \"large\",\n            index: index\n          })));\n        }\n\n        return ___EmotionJSX(ItemComponent, _extends({}, props, {\n          key: props.id,\n          size: \"small\",\n          index: index\n        }));\n      })))), ___EmotionJSX(SecondaryItemsList, null, ___EmotionJSX(NavigationAnalyticsContext, {\n        data: {\n          attributes: {\n            navigationIconGrouping: 'secondary'\n          }\n        }\n      }, ___EmotionJSX(Fragment, null, secondaryItems.map(function (props, index) {\n        return ___EmotionJSX(ItemComponent, _extends({}, props, {\n          key: props.id,\n          size: \"small\",\n          index: index\n        }));\n      }))))));\n    }\n  }]);\n\n  return GlobalNavigation;\n}(Component);\n\nexport { GlobalNavigation as default };"]},"metadata":{},"sourceType":"module"}