{"ast":null,"code":"import _objectWithoutProperties from\"/home/asirob/Code/atlasmicros/src/main/resources/static/react-atlaskit-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import{Route,Redirect}from'react-router-dom';import{useSelector}from'react-redux';export var ProtectedRout=function ProtectedRout(_ref){var Component=_ref.component,rest=_objectWithoutProperties(_ref,[\"component\"]);var store=useSelector(function(state){return state;});return/*#__PURE__*/React.createElement(Route,Object.assign({},rest,{render:function render(props){console.log(\"store: \"+store);if(store.isLogged){return/*#__PURE__*/React.createElement(Component,props);}else{return/*#__PURE__*/React.createElement(Redirect,{to:{pathname:'/',state:{from:props.location}}});}}}));};","map":{"version":3,"sources":["/home/asirob/Code/atlasmicros/src/main/resources/static/react-atlaskit-example/src/common/ProtectedRout.js"],"names":["React","Route","Redirect","useSelector","ProtectedRout","Component","component","rest","store","state","props","console","log","isLogged","pathname","from","location"],"mappings":"yNAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,KAAR,CAAeC,QAAf,KAA8B,kBAA9B,CACA,OAAQC,WAAR,KAA2B,aAA3B,CAGA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAqC,IAAxBC,CAAAA,SAAwB,MAAnCC,SAAmC,CAAVC,IAAU,8CAC9D,GAAMC,CAAAA,KAAK,CAAGL,WAAW,CAAC,SAAAM,KAAK,QAAIA,CAAAA,KAAJ,EAAN,CAAzB,CAEA,mBACI,oBAAC,KAAD,kBAAWF,IAAX,EACO,MAAM,CAAE,gBAAAG,KAAK,CAAI,CACbC,OAAO,CAACC,GAAR,CAAY,UAAWJ,KAAvB,EACA,GAAGA,KAAK,CAACK,QAAT,CAAmB,CACf,mBAAO,oBAAC,SAAD,CAAeH,KAAf,CAAP,CACH,CAFD,IAEK,CACD,mBAAO,oBAAC,QAAD,EAAU,EAAE,CACf,CACII,QAAQ,CAAE,GADd,CAEIL,KAAK,CAAE,CACHM,IAAI,CAAEL,KAAK,CAACM,QADT,CAFX,CADG,EAAP,CAUH,CACJ,CAjBR,GADJ,CAqBH,CAxBM","sourcesContent":["import React from 'react'\nimport {Route, Redirect} from 'react-router-dom';\nimport {useSelector } from 'react-redux';\n\n\nexport const ProtectedRout = ({component: Component, ...rest}) => {\n    const store = useSelector(state => state);\n\n    return (\n        <Route {...rest}\n               render={props => {\n                   console.log(\"store: \"+ store);\n                   if(store.isLogged) {\n                       return <Component {...props} />;\n                   }else{\n                       return <Redirect to ={\n                           {\n                               pathname: '/',\n                               state: {\n                                   from: props.location\n                               }\n                           }\n                       }\n                       />\n\n                   }\n               }}\n        />\n    );\n};"]},"metadata":{},"sourceType":"module"}