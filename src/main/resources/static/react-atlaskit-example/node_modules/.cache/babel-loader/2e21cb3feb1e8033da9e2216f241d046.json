{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nvar w = \"production\" !== process.env.NODE_ENV ? function (a) {\n  return Object.freeze(a);\n} : function (a) {\n  return a;\n};\n\nfunction x(a, f) {\n  if (!a) {\n    \"undefined\" !== typeof console && console.warn(f);\n\n    try {\n      throw Error(f);\n    } catch (h) {}\n  }\n}\n\nfunction y(a) {\n  a.preventDefault();\n  a.returnValue = \"\";\n}\n\nfunction z() {\n  var a = [];\n  return {\n    get length() {\n      return a.length;\n    },\n\n    push: function (f) {\n      a.push(f);\n      return function () {\n        a = a.filter(function (a) {\n          return a !== f;\n        });\n      };\n    },\n    call: function (f) {\n      a.forEach(function (a) {\n        return a && a(f);\n      });\n    }\n  };\n}\n\nfunction A() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\nfunction C(a) {\n  var f = a.pathname,\n      h = a.search;\n  a = a.hash;\n  return (void 0 === f ? \"/\" : f) + (void 0 === h ? \"\" : h) + (void 0 === a ? \"\" : a);\n}\n\nfunction D(a) {\n  var f = {};\n\n  if (a) {\n    var h = a.indexOf(\"#\");\n    0 <= h && (f.hash = a.substr(h), a = a.substr(0, h));\n    h = a.indexOf(\"?\");\n    0 <= h && (f.search = a.substr(h), a = a.substr(0, h));\n    a && (f.pathname = a);\n  }\n\n  return f;\n}\n\nfunction createBrowserHistory(a) {\n  function f() {\n    var a = k.location,\n        e = g.state || {};\n    return [e.idx, w({\n      pathname: a.pathname,\n      search: a.search,\n      hash: a.hash,\n      state: e.usr || null,\n      key: e.key || \"default\"\n    })];\n  }\n\n  function h(a) {\n    return \"string\" === typeof a ? a : C(a);\n  }\n\n  function r(a, e) {\n    void 0 === e && (e = null);\n    return w(_extends({}, m, {}, \"string\" === typeof a ? D(a) : a, {\n      state: e,\n      key: A()\n    }));\n  }\n\n  function u(a) {\n    n = a;\n    a = f();\n    p = a[0];\n    m = a[1];\n    c.call({\n      action: n,\n      location: m\n    });\n  }\n\n  function v(a, e) {\n    function c() {\n      v(a, e);\n    }\n\n    var B = r(a, e);\n\n    if (!b.length || (b.call({\n      action: \"PUSH\",\n      location: B,\n      retry: c\n    }), !1)) {\n      var d = [{\n        usr: B.state,\n        key: B.key,\n        idx: p + 1\n      }, h(B)];\n      B = d[0];\n      d = d[1];\n\n      try {\n        g.pushState(B, null, d);\n      } catch (E) {\n        k.location.assign(d);\n      }\n\n      u(\"PUSH\");\n    }\n  }\n\n  function t(a, e) {\n    function c() {\n      t(a, e);\n    }\n\n    var d = r(a, e);\n    b.length && (b.call({\n      action: \"REPLACE\",\n      location: d,\n      retry: c\n    }), 1) || (d = [{\n      usr: d.state,\n      key: d.key,\n      idx: p\n    }, h(d)], g.replaceState(d[0], null, d[1]), u(\"REPLACE\"));\n  }\n\n  function l(a) {\n    g.go(a);\n  }\n\n  a = (void 0 === a ? {} : a).window;\n  var k = void 0 === a ? document.defaultView : a,\n      g = k.history,\n      q = null;\n  k.addEventListener(\"popstate\", function () {\n    if (q) b.call(q), q = null;else {\n      var a = f(),\n          e = a[0];\n      a = a[1];\n      if (b.length) {\n        if (null != e) {\n          var c = p - e;\n          c && (q = {\n            action: \"POP\",\n            location: a,\n            retry: function () {\n              l(-1 * c);\n            }\n          }, l(c));\n        } else \"production\" !== process.env.NODE_ENV ? x(!1, \"You are trying to block a POP navigation to a location that was not created by the history library. The block will fail silently in production, but in general you should do all navigation with the history library (instead of using window.history.pushState directly) to avoid this situation.\") : void 0;\n      } else u(\"POP\");\n    }\n  });\n  var n = \"POP\";\n  a = f();\n  var p = a[0],\n      m = a[1],\n      b = z(),\n      c = z();\n  null == p && (p = 0, g.replaceState(_extends({}, g.state, {\n    idx: p\n  }), null));\n  return {\n    get action() {\n      return n;\n    },\n\n    get location() {\n      return m;\n    },\n\n    createHref: h,\n    push: v,\n    replace: t,\n    go: l,\n    back: function () {\n      l(-1);\n    },\n    forward: function () {\n      l(1);\n    },\n    listen: function (a) {\n      return c.push(a);\n    },\n    block: function (a) {\n      var e = b.push(a);\n      1 === b.length && k.addEventListener(\"beforeunload\", y);\n      return function () {\n        e();\n        b.length || k.removeEventListener(\"beforeunload\", y);\n      };\n    }\n  };\n}\n\n;\n\nfunction createHashHistory(a) {\n  function f() {\n    var a = D(g.location.hash.substr(1)),\n        b = a.pathname,\n        c = a.search;\n    a = a.hash;\n    var d = q.state || {};\n    return [d.idx, w({\n      pathname: void 0 === b ? \"/\" : b,\n      search: void 0 === c ? \"\" : c,\n      hash: void 0 === a ? \"\" : a,\n      state: d.usr || null,\n      key: d.key || \"default\"\n    })];\n  }\n\n  function h() {\n    if (n) c.call(n), n = null;else {\n      var a = f(),\n          b = a[0];\n      a = a[1];\n      if (c.length) {\n        if (null != b) {\n          var d = m - b;\n          d && (n = {\n            action: \"POP\",\n            location: a,\n            retry: function () {\n              k(-1 * d);\n            }\n          }, k(d));\n        } else \"production\" !== process.env.NODE_ENV ? x(!1, \"You are trying to block a POP navigation to a location that was not created by the history library. The block will fail silently in production, but in general you should do all navigation with the history library (instead of using window.history.pushState directly) to avoid this situation.\") : void 0;\n      } else v(\"POP\");\n    }\n  }\n\n  function r(a) {\n    var b = document.querySelector(\"base\"),\n        e = \"\";\n    b && b.getAttribute(\"href\") && (b = g.location.href, e = b.indexOf(\"#\"), e = -1 === e ? b : b.slice(0, e));\n    return e + \"#\" + (\"string\" === typeof a ? a : C(a));\n  }\n\n  function u(a, c) {\n    void 0 === c && (c = null);\n    return w(_extends({}, b, {}, \"string\" === typeof a ? D(a) : a, {\n      state: c,\n      key: A()\n    }));\n  }\n\n  function v(a) {\n    p = a;\n    a = f();\n    m = a[0];\n    b = a[1];\n    d.call({\n      action: p,\n      location: b\n    });\n  }\n\n  function t(a, b) {\n    function d() {\n      t(a, b);\n    }\n\n    var e = u(a, b);\n    \"production\" !== process.env.NODE_ENV ? x(\"/\" === e.pathname.charAt(0), \"Relative pathnames are not supported in hash history.push(\" + JSON.stringify(a) + \")\") : void 0;\n\n    if (!c.length || (c.call({\n      action: \"PUSH\",\n      location: e,\n      retry: d\n    }), !1)) {\n      var f = [{\n        usr: e.state,\n        key: e.key,\n        idx: m + 1\n      }, r(e)];\n      e = f[0];\n      f = f[1];\n\n      try {\n        q.pushState(e, null, f);\n      } catch (F) {\n        g.location.assign(f);\n      }\n\n      v(\"PUSH\");\n    }\n  }\n\n  function l(a, b) {\n    function e() {\n      l(a, b);\n    }\n\n    var d = u(a, b);\n    \"production\" !== process.env.NODE_ENV ? x(\"/\" === d.pathname.charAt(0), \"Relative pathnames are not supported in hash history.replace(\" + JSON.stringify(a) + \")\") : void 0;\n    c.length && (c.call({\n      action: \"REPLACE\",\n      location: d,\n      retry: e\n    }), 1) || (d = [{\n      usr: d.state,\n      key: d.key,\n      idx: m\n    }, r(d)], q.replaceState(d[0], null, d[1]), v(\"REPLACE\"));\n  }\n\n  function k(a) {\n    q.go(a);\n  }\n\n  a = (void 0 === a ? {} : a).window;\n  var g = void 0 === a ? document.defaultView : a,\n      q = g.history,\n      n = null;\n  g.addEventListener(\"popstate\", h);\n  g.addEventListener(\"hashchange\", function () {\n    var a = f()[1];\n    C(a) !== C(b) && h();\n  });\n  var p = \"POP\";\n  a = f();\n  var m = a[0],\n      b = a[1],\n      c = z(),\n      d = z();\n  null == m && (m = 0, q.replaceState(_extends({}, q.state, {\n    idx: m\n  }), null));\n  return {\n    get action() {\n      return p;\n    },\n\n    get location() {\n      return b;\n    },\n\n    createHref: r,\n    push: t,\n    replace: l,\n    go: k,\n    back: function () {\n      k(-1);\n    },\n    forward: function () {\n      k(1);\n    },\n    listen: function (a) {\n      return d.push(a);\n    },\n    block: function (a) {\n      var b = c.push(a);\n      1 === c.length && g.addEventListener(\"beforeunload\", y);\n      return function () {\n        b();\n        c.length || g.removeEventListener(\"beforeunload\", y);\n      };\n    }\n  };\n}\n\n;\n\nfunction createMemoryHistory(a) {\n  function f(a, c) {\n    void 0 === c && (c = null);\n    return w(_extends({}, n, {}, \"string\" === typeof a ? D(a) : a, {\n      state: c,\n      key: A()\n    }));\n  }\n\n  function h(a, c, d) {\n    return !p.length || (p.call({\n      action: a,\n      location: c,\n      retry: d\n    }), !1);\n  }\n\n  function r(a, c) {\n    q = a;\n    n = c;\n    m.call({\n      action: q,\n      location: n\n    });\n  }\n\n  function u(a, c) {\n    var b = f(a, c);\n    \"production\" !== process.env.NODE_ENV ? x(\"/\" === n.pathname.charAt(0), \"Relative pathnames are not supported in memory history.push(\" + JSON.stringify(a) + \")\") : void 0;\n    h(\"PUSH\", b, function () {\n      u(a, c);\n    }) && (g += 1, k.splice(g, k.length, b), r(\"PUSH\", b));\n  }\n\n  function v(a, c) {\n    var b = f(a, c);\n    \"production\" !== process.env.NODE_ENV ? x(\"/\" === n.pathname.charAt(0), \"Relative pathnames are not supported in memory history.replace(\" + JSON.stringify(a) + \")\") : void 0;\n    h(\"REPLACE\", b, function () {\n      v(a, c);\n    }) && (k[g] = b, r(\"REPLACE\", b));\n  }\n\n  function t(a) {\n    var b = Math.min(Math.max(g + a, 0), k.length - 1),\n        d = k[b];\n    h(\"POP\", d, function () {\n      t(a);\n    }) && (g = b, r(\"POP\", d));\n  }\n\n  var l = void 0 === a ? {} : a;\n  a = l.initialEntries;\n  l = l.initialIndex;\n  l = void 0 === l ? 0 : l;\n  var k = (void 0 === a ? [\"/\"] : a).map(function (a) {\n    var b = w(_extends({\n      pathname: \"/\",\n      search: \"\",\n      hash: \"\",\n      state: null,\n      key: A()\n    }, \"string\" === typeof a ? D(a) : a));\n    \"production\" !== process.env.NODE_ENV ? x(\"/\" === b.pathname.charAt(0), \"Relative pathnames are not supported in createMemoryHistory({ initialEntries }) (invalid entry: \" + JSON.stringify(a) + \")\") : void 0;\n    return b;\n  }),\n      g = Math.min(Math.max(l, 0), k.length - 1),\n      q = \"POP\",\n      n = k[g],\n      p = z(),\n      m = z();\n  return {\n    get index() {\n      return g;\n    },\n\n    get action() {\n      return q;\n    },\n\n    get location() {\n      return n;\n    },\n\n    createHref: function (a) {\n      return \"string\" === typeof a ? a : C(a);\n    },\n    push: u,\n    replace: v,\n    go: t,\n    back: function () {\n      t(-1);\n    },\n    forward: function () {\n      t(1);\n    },\n    listen: function (a) {\n      return m.push(a);\n    },\n    block: function (a) {\n      return p.push(a);\n    }\n  };\n}\n\n;\nexport { createBrowserHistory, createHashHistory, createMemoryHistory, C as createPath, D as parsePath };","map":{"version":3,"sources":["../../packages/history/history.js"],"names":["PopAction","PushAction","ReplaceAction","BeforeUnloadEventType","HashChangeEventType","PopStateEventType","readOnly","Object","obj","warning","cond","console","message","createBrowserHistory","window","document","globalHistory","state","pathname","search","hash","key","blockedPopTx","blockers","nextIndex","nextLocation","getIndexAndLocation","n","index","action","location","retry","go","applyTx","createEvents","listeners","idx","getNextLocation","parsePath","to","usr","createHref","nextAction","push","historyState","url","replace","history","back","forward","listen","fn","block","unblock","createHashHistory","createPath","handlePop","base","href","hashIndex","createKey","JSON","createMemoryHistory","initialIndex","entries","initialEntries","lowerBound","allowTx","Math","promptBeforeUnload","event","length","handlers","call","arg","pieces","path","searchIndex"],"mappings":"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","sourcesContent":["const PopAction = 'POP';\nconst PushAction = 'PUSH';\nconst ReplaceAction = 'REPLACE';\n\nconst BeforeUnloadEventType = 'beforeunload';\nconst HashChangeEventType = 'hashchange';\nconst PopStateEventType = 'popstate';\n\nconst readOnly = __DEV__ ? obj => Object.freeze(obj) : obj => obj;\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== 'undefined') console.warn(message);\n\n    try {\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// BROWSER\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Browser history stores the location in regular URLs. This is the\n * standard for most web apps, but it requires some configuration on\n * the server to ensure you serve the same app at multiple URLs.\n */\nexport function createBrowserHistory({ window = document.defaultView } = {}) {\n  let globalHistory = window.history;\n\n  function getIndexAndLocation() {\n    let { pathname, search, hash } = window.location;\n    let state = globalHistory.state || {};\n    return [\n      state.idx,\n      readOnly({\n        pathname,\n        search,\n        hash,\n        state: state.usr || null,\n        key: state.key || 'default'\n      })\n    ];\n  }\n\n  let blockedPopTx = null;\n  function handlePop() {\n    if (blockedPopTx) {\n      blockers.call(blockedPopTx);\n      blockedPopTx = null;\n    } else {\n      let nextAction = PopAction;\n      let [nextIndex, nextLocation] = getIndexAndLocation();\n\n      if (blockers.length) {\n        if (nextIndex != null) {\n          let n = index - nextIndex;\n          if (n) {\n            // Revert the POP\n            blockedPopTx = {\n              action: nextAction,\n              location: nextLocation,\n              retry() {\n                go(n * -1);\n              }\n            };\n\n            go(n);\n          }\n        } else {\n          // Trying to POP to a location with no index. We did not create\n          // this location, so we can't effectively block the navigation.\n          warning(\n            false,\n            // TODO: Write up a doc that explains our blocking strategy in\n            // detail and link to it here so people can understand better\n            // what is going on and how to avoid it.\n            `You are trying to block a POP navigation to a location that was not ` +\n              `created by the history library. The block will fail silently in ` +\n              `production, but in general you should do all navigation with the ` +\n              `history library (instead of using window.history.pushState directly) ` +\n              `to avoid this situation.`\n          );\n        }\n      } else {\n        applyTx(nextAction);\n      }\n    }\n  }\n\n  window.addEventListener(PopStateEventType, handlePop);\n\n  let action = PopAction;\n  let [index, location] = getIndexAndLocation();\n  let blockers = createEvents();\n  let listeners = createEvents();\n\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, null);\n  }\n\n  function createHref(to) {\n    return typeof to === 'string' ? to : createPath(to);\n  }\n\n  function getNextLocation(to, state = null) {\n    return readOnly({\n      ...location,\n      ...(typeof to === 'string' ? parsePath(to) : to),\n      state,\n      key: createKey()\n    });\n  }\n\n  function getHistoryStateAndUrl(nextLocation, index) {\n    return [\n      {\n        usr: nextLocation.state,\n        key: nextLocation.key,\n        idx: index\n      },\n      createHref(nextLocation)\n    ];\n  }\n\n  function allowTx(action, location, retry) {\n    return (\n      !blockers.length || (blockers.call({ action, location, retry }), false)\n    );\n  }\n\n  function applyTx(nextAction) {\n    action = nextAction;\n    [index, location] = getIndexAndLocation();\n    listeners.call({ action, location });\n  }\n\n  function push(to, state) {\n    let nextAction = PushAction;\n    let nextLocation = getNextLocation(to, state);\n    function retry() {\n      push(to, state);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      let [historyState, url] = getHistoryStateAndUrl(nextLocation, index + 1);\n\n      // TODO: Support forced reloading\n      // try...catch because iOS limits us to 100 pushState calls :/\n      try {\n        globalHistory.pushState(historyState, null, url);\n      } catch (error) {\n        // They are going to lose state here, but there is no real\n        // way to warn them about it since the page will refresh...\n        window.location.assign(url);\n      }\n\n      applyTx(nextAction);\n    }\n  }\n\n  function replace(to, state) {\n    let nextAction = ReplaceAction;\n    let nextLocation = getNextLocation(to, state);\n    function retry() {\n      replace(to, state);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      let [historyState, url] = getHistoryStateAndUrl(nextLocation, index);\n\n      // TODO: Support forced reloading\n      globalHistory.replaceState(historyState, null, url);\n\n      applyTx(nextAction);\n    }\n  }\n\n  function go(n) {\n    globalHistory.go(n);\n  }\n\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return location;\n    },\n    createHref,\n    push,\n    replace,\n    go,\n    back() {\n      go(-1);\n    },\n    forward() {\n      go(1);\n    },\n    listen(fn) {\n      return listeners.push(fn);\n    },\n    block(fn) {\n      let unblock = blockers.push(fn);\n\n      if (blockers.length === 1) {\n        window.addEventListener(BeforeUnloadEventType, promptBeforeUnload);\n      }\n\n      return function() {\n        unblock();\n\n        // Remove the beforeunload listener so the document may\n        // still be salvageable in the pagehide event.\n        // See https://html.spec.whatwg.org/#unloading-documents\n        if (!blockers.length) {\n          window.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);\n        }\n      };\n    }\n  };\n\n  return history;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// HASH\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Hash history stores the location in window.location.hash. This makes\n * it ideal for situations where you don't want to send the location to\n * the server for some reason, either because you do cannot configure it\n * or the URL space is reserved for something else.\n */\nexport function createHashHistory({ window = document.defaultView } = {}) {\n  let globalHistory = window.history;\n\n  function getIndexAndLocation() {\n    let { pathname = '/', search = '', hash = '' } = parsePath(\n      window.location.hash.substr(1)\n    );\n    let state = globalHistory.state || {};\n    return [\n      state.idx,\n      readOnly({\n        pathname,\n        search,\n        hash,\n        state: state.usr || null,\n        key: state.key || 'default'\n      })\n    ];\n  }\n\n  let blockedPopTx = null;\n  function handlePop() {\n    if (blockedPopTx) {\n      blockers.call(blockedPopTx);\n      blockedPopTx = null;\n    } else {\n      let nextAction = PopAction;\n      let [nextIndex, nextLocation] = getIndexAndLocation();\n\n      if (blockers.length) {\n        if (nextIndex != null) {\n          let n = index - nextIndex;\n          if (n) {\n            // Revert the POP\n            blockedPopTx = {\n              action: nextAction,\n              location: nextLocation,\n              retry() {\n                go(n * -1);\n              }\n            };\n\n            go(n);\n          }\n        } else {\n          // Trying to POP to a location with no index. We did not create\n          // this location, so we can't effectively block the navigation.\n          warning(\n            false,\n            // TODO: Write up a doc that explains our blocking strategy in\n            // detail and link to it here so people can understand better\n            // what is going on and how to avoid it.\n            `You are trying to block a POP navigation to a location that was not ` +\n              `created by the history library. The block will fail silently in ` +\n              `production, but in general you should do all navigation with the ` +\n              `history library (instead of using window.history.pushState directly) ` +\n              `to avoid this situation.`\n          );\n        }\n      } else {\n        applyTx(nextAction);\n      }\n    }\n  }\n\n  window.addEventListener(PopStateEventType, handlePop);\n\n  // popstate does not fire on hashchange in IE 11 and old (trident) Edge\n  // https://developer.mozilla.org/de/docs/Web/API/Window/popstate_event\n  window.addEventListener(HashChangeEventType, event => {\n    let [, nextLocation] = getIndexAndLocation();\n\n    // Ignore extraneous hashchange events.\n    if (createPath(nextLocation) !== createPath(location)) {\n      handlePop();\n    }\n  });\n\n  let action = PopAction;\n  let [index, location] = getIndexAndLocation();\n  let blockers = createEvents();\n  let listeners = createEvents();\n\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, null);\n  }\n\n  function getBaseHref() {\n    let base = document.querySelector('base');\n    let href = '';\n\n    if (base && base.getAttribute('href')) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf('#');\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href;\n  }\n\n  function createHref(to) {\n    return getBaseHref() + '#' + (typeof to === 'string' ? to : createPath(to));\n  }\n\n  function getNextLocation(to, state = null) {\n    return readOnly({\n      ...location,\n      ...(typeof to === 'string' ? parsePath(to) : to),\n      state,\n      key: createKey()\n    });\n  }\n\n  function getHistoryStateAndUrl(nextLocation, index) {\n    return [\n      {\n        usr: nextLocation.state,\n        key: nextLocation.key,\n        idx: index\n      },\n      createHref(nextLocation)\n    ];\n  }\n\n  function allowTx(action, location, retry) {\n    return (\n      !blockers.length || (blockers.call({ action, location, retry }), false)\n    );\n  }\n\n  function applyTx(nextAction) {\n    action = nextAction;\n    [index, location] = getIndexAndLocation();\n    listeners.call({ action, location });\n  }\n\n  function push(to, state) {\n    let nextAction = PushAction;\n    let nextLocation = getNextLocation(to, state);\n    function retry() {\n      push(to, state);\n    }\n\n    warning(\n      nextLocation.pathname.charAt(0) === '/',\n      `Relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      let [historyState, url] = getHistoryStateAndUrl(nextLocation, index + 1);\n\n      // TODO: Support forced reloading\n      // try...catch because iOS limits us to 100 pushState calls :/\n      try {\n        globalHistory.pushState(historyState, null, url);\n      } catch (error) {\n        // They are going to lose state here, but there is no real\n        // way to warn them about it since the page will refresh...\n        window.location.assign(url);\n      }\n\n      applyTx(nextAction);\n    }\n  }\n\n  function replace(to, state) {\n    let nextAction = ReplaceAction;\n    let nextLocation = getNextLocation(to, state);\n    function retry() {\n      replace(to, state);\n    }\n\n    warning(\n      nextLocation.pathname.charAt(0) === '/',\n      `Relative pathnames are not supported in hash history.replace(${JSON.stringify(\n        to\n      )})`\n    );\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      let [historyState, url] = getHistoryStateAndUrl(nextLocation, index);\n\n      // TODO: Support forced reloading\n      globalHistory.replaceState(historyState, null, url);\n\n      applyTx(nextAction);\n    }\n  }\n\n  function go(n) {\n    globalHistory.go(n);\n  }\n\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return location;\n    },\n    createHref,\n    push,\n    replace,\n    go,\n    back() {\n      go(-1);\n    },\n    forward() {\n      go(1);\n    },\n    listen(fn) {\n      return listeners.push(fn);\n    },\n    block(fn) {\n      let unblock = blockers.push(fn);\n\n      if (blockers.length === 1) {\n        window.addEventListener(BeforeUnloadEventType, promptBeforeUnload);\n      }\n\n      return function() {\n        unblock();\n\n        // Remove the beforeunload listener so the document may\n        // still be salvageable in the pagehide event.\n        // See https://html.spec.whatwg.org/#unloading-documents\n        if (!blockers.length) {\n          window.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);\n        }\n      };\n    }\n  };\n\n  return history;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// MEMORY\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Memory history stores the current location in memory. It is designed\n * for use in stateful non-browser environments like headless tests (in\n * node.js) and React Native.\n */\nexport function createMemoryHistory({\n  initialEntries = ['/'],\n  initialIndex = 0\n} = {}) {\n  let entries = initialEntries.map(entry => {\n    let location = readOnly({\n      pathname: '/',\n      search: '',\n      hash: '',\n      state: null,\n      key: createKey(),\n      ...(typeof entry === 'string' ? parsePath(entry) : entry)\n    });\n\n    warning(\n      location.pathname.charAt(0) === '/',\n      `Relative pathnames are not supported in createMemoryHistory({ initialEntries }) (invalid entry: ${JSON.stringify(\n        entry\n      )})`\n    );\n\n    return location;\n  });\n  let index = clamp(initialIndex, 0, entries.length - 1);\n\n  let action = PopAction;\n  let location = entries[index];\n  let blockers = createEvents();\n  let listeners = createEvents();\n\n  function createHref(to) {\n    return typeof to === 'string' ? to : createPath(to);\n  }\n\n  function getNextLocation(to, state = null) {\n    return readOnly({\n      ...location,\n      ...(typeof to === 'string' ? parsePath(to) : to),\n      state,\n      key: createKey()\n    });\n  }\n\n  function allowTx(action, location, retry) {\n    return (\n      !blockers.length || (blockers.call({ action, location, retry }), false)\n    );\n  }\n\n  function applyTx(nextAction, nextLocation) {\n    action = nextAction;\n    location = nextLocation;\n    listeners.call({ action, location });\n  }\n\n  function push(to, state) {\n    let nextAction = PushAction;\n    let nextLocation = getNextLocation(to, state);\n    function retry() {\n      push(to, state);\n    }\n\n    warning(\n      location.pathname.charAt(0) === '/',\n      `Relative pathnames are not supported in memory history.push(${JSON.stringify(\n        to\n      )})`\n    );\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  function replace(to, state) {\n    let nextAction = ReplaceAction;\n    let nextLocation = getNextLocation(to, state);\n    function retry() {\n      replace(to, state);\n    }\n\n    warning(\n      location.pathname.charAt(0) === '/',\n      `Relative pathnames are not supported in memory history.replace(${JSON.stringify(\n        to\n      )})`\n    );\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      entries[index] = nextLocation;\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  function go(n) {\n    let nextIndex = clamp(index + n, 0, entries.length - 1);\n    let nextAction = PopAction;\n    let nextLocation = entries[nextIndex];\n    function retry() {\n      go(n);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      index = nextIndex;\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return location;\n    },\n    createHref,\n    push,\n    replace,\n    go,\n    back() {\n      go(-1);\n    },\n    forward() {\n      go(1);\n    },\n    listen(fn) {\n      return listeners.push(fn);\n    },\n    block(fn) {\n      return blockers.push(fn);\n    }\n  };\n\n  return history;\n}\n\nfunction clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// UTILS\n////////////////////////////////////////////////////////////////////////////////\n\nfunction promptBeforeUnload(event) {\n  // Cancel the event.\n  event.preventDefault();\n  // Chrome (and legacy IE) requires returnValue to be set.\n  event.returnValue = '';\n}\n\nfunction createEvents() {\n  let handlers = [];\n\n  return {\n    get length() {\n      return handlers.length;\n    },\n    push(fn) {\n      handlers.push(fn);\n      return function() {\n        handlers = handlers.filter(handler => handler !== fn);\n      };\n    },\n    call(arg) {\n      handlers.forEach(fn => fn && fn(arg));\n    }\n  };\n}\n\nfunction createKey() {\n  return Math.random()\n    .toString(36)\n    .substr(2, 8);\n}\n\nexport function createPath({ pathname = '/', search = '', hash = '' }) {\n  return pathname + search + hash;\n}\n\nexport function parsePath(path) {\n  let pieces = {};\n\n  if (path) {\n    let hashIndex = path.indexOf('#');\n    if (hashIndex >= 0) {\n      pieces.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf('?');\n    if (searchIndex >= 0) {\n      pieces.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      pieces.pathname = path;\n    }\n  }\n\n  return pieces;\n}\n"]},"metadata":{},"sourceType":"module"}