{"ast":null,"code":"import { __assign, __read, __rest, __spread } from \"tslib\";\nimport React, { useCallback } from 'react';\nimport Field from './Field';\n\nvar CheckboxField = function CheckboxField(props) {\n  var children = props.children,\n      _a = props.defaultIsChecked,\n      defaultIsChecked = _a === void 0 ? false : _a,\n      value = props.value,\n      rest = __rest(props, [\"children\", \"defaultIsChecked\", \"value\"]); // Maintains a memoised list of the default values\n\n\n  var defaultValue = useCallback(function (currentValue) {\n    if (currentValue === void 0) {\n      currentValue = [];\n    }\n\n    return defaultIsChecked && value !== undefined ? __spread(currentValue, [value]) : currentValue;\n  }, [value, defaultIsChecked]);\n  return value !== undefined ? React.createElement(Field, __assign({}, rest, {\n    defaultValue: defaultValue,\n    transform: function transform(event, currentValue) {\n      return event.currentTarget.checked && currentValue ? __spread(currentValue, [value]) : currentValue.filter(function (v) {\n        return v !== value;\n      });\n    }\n  }), function (_a) {\n    var _b = _a.fieldProps,\n        fieldValue = _b.value,\n        otherFieldProps = __rest(_b, [\"value\"]),\n        others = __rest(_a, [\"fieldProps\"]);\n\n    return children(__assign({\n      fieldProps: __assign(__assign({}, otherFieldProps), {\n        isChecked: !!fieldValue.find(function (v) {\n          return v === value;\n        }),\n        value: value\n      })\n    }, others));\n  }) : React.createElement(Field, __assign({}, rest, {\n    defaultValue: defaultIsChecked,\n    transform: function transform(event) {\n      return event.currentTarget.checked;\n    }\n  }), function (_a) {\n    var _b = _a.fieldProps,\n        fieldValue = _b.value,\n        otherFieldProps = __rest(_b, [\"value\"]),\n        others = __rest(_a, [\"fieldProps\"]);\n\n    return children(__assign({\n      fieldProps: __assign(__assign({}, otherFieldProps), {\n        isChecked: fieldValue,\n        value: value\n      })\n    }, others));\n  });\n};\n\nCheckboxField.defaultProps = {\n  defaultIsChecked: false\n};\nexport default CheckboxField;","map":{"version":3,"sources":["../../src/CheckboxField.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAP,IAA+B,WAA/B,QAAkD,OAAlD;AACA,OAAO,KAAP,MAAwC,SAAxC;;AA4BA,IAAM,aAAa,GAAsB,SAAnC,aAAmC,CAAA,KAAA,EAAK;AACpC,MAAA,QAAA,GAAA,KAAA,CAAA,QAAA;AAAA,MAAU,EAAA,GAAA,KAAA,CAAA,gBAAV;AAAA,MAAU,gBAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,GAAA,EAAV;AAAA,MAAoC,KAAA,GAAA,KAAA,CAAA,KAApC;AAAA,MAA2C,IAAA,GAAA,MAAA,CAAA,KAAA,EAAA,CAAA,UAAA,EAAA,kBAAA,EAAA,OAAA,CAAA,CAA3C,CADoC,CAG5C;;;AACA,MAAM,YAAY,GAAG,WAAW,CAC9B,UAAC,YAAD,EAA4B;AAA3B,QAAA,YAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,YAAA,GAAA,EAAA;AAA2B;;AAC1B,WAAA,gBAAgB,IAAI,KAAK,KAAK,SAA9B,GACG,QAAA,CAAK,YAAL,EAAiB,CAAE,KAAF,CAAjB,CADH,GAEI,YAFJ;AAEgB,GAJY,EAK9B,CAAC,KAAD,EAAQ,gBAAR,CAL8B,CAAhC;AAQA,SAAO,KAAK,KAAK,SAAV,GACL,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM,QAAA,CAAA,EAAA,EACA,IADA,EACI;AACR,IAAA,YAAY,EAAE,YADN;AAER,IAAA,SAAS,EAAE,mBAAC,KAAD,EAAQ,YAAR,EAA8B;AACvC,aAAA,KAAK,CAAC,aAAN,CAAoB,OAApB,IAA+B,YAA/B,GACG,QAAA,CAAK,YAAL,EAAiB,CAAE,KAAF,CAAjB,CADH,GAEI,YAAY,CAAC,MAAb,CAAoB,UAAA,CAAA,EAAC;AAAI,eAAA,CAAC,KAAD,KAAA;AAAW,OAApC,CAFJ;AAEyC;AALnC,GADJ,CAAN,EASG,UAAC,EAAD,EAAqE;QAAlE,EAAA,GAAA,EAAA,CAAA,U;QAAc,UAAA,GAAA,EAAA,CAAA,K;QAAmB,eAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,OAAA,CAAA,C;QAAsB,MAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,YAAA,CAAA,C;;AACzD,WAAA,QAAQ,CAAA,QAAA,CAAA;AACN,MAAA,UAAU,EAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACL,eADK,CAAA,EACU;AAClB,QAAA,SAAS,EAAE,CAAC,CAAC,UAAU,CAAC,IAAX,CAAgB,UAAC,CAAD,EAAU;AAAK,iBAAA,CAAC,KAAD,KAAA;AAAW,SAA1C,CADK;AAElB,QAAA,KAAK,EAAA;AAFa,OADV;AADJ,KAAA,EAMH,MANG,CAAA,CAAR;AAOE,GAjBN,CADK,GAsBL,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM,QAAA,CAAA,EAAA,EACA,IADA,EACI;AACR,IAAA,YAAY,EAAE,gBADN;AAER,IAAA,SAAS,EAAE,mBAAA,KAAA,EAAK;AAAI,aAAA,KAAK,CAAC,aAAN,CAAA,OAAA;AAA2B;AAFvC,GADJ,CAAN,EAKG,UAAC,EAAD,EAAqE;QAAlE,EAAA,GAAA,EAAA,CAAA,U;QAAc,UAAA,GAAA,EAAA,CAAA,K;QAAmB,eAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,OAAA,CAAA,C;QAAsB,MAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,YAAA,CAAA,C;;AACzD,WAAA,QAAQ,CAAA,QAAA,CAAA;AACN,MAAA,UAAU,EAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACL,eADK,CAAA,EACU;AAClB,QAAA,SAAS,EAAE,UADO;AAElB,QAAA,KAAK,EAAA;AAFa,OADV;AADJ,KAAA,EAMH,MANG,CAAA,CAAR;AAOE,GAbN,CAtBF;AAuCD,CAnDD;;AAqDA,aAAa,CAAC,YAAd,GAA6B;AAC3B,EAAA,gBAAgB,EAAE;AADS,CAA7B;AAIA,eAAe,aAAf","sourceRoot":"","sourcesContent":["import { __assign, __read, __rest, __spread } from \"tslib\";\nimport React, { useCallback } from 'react';\nimport Field from './Field';\nvar CheckboxField = function (props) {\n    var children = props.children, _a = props.defaultIsChecked, defaultIsChecked = _a === void 0 ? false : _a, value = props.value, rest = __rest(props, [\"children\", \"defaultIsChecked\", \"value\"]);\n    // Maintains a memoised list of the default values\n    var defaultValue = useCallback(function (currentValue) {\n        if (currentValue === void 0) { currentValue = []; }\n        return defaultIsChecked && value !== undefined\n            ? __spread(currentValue, [value]) : currentValue;\n    }, [value, defaultIsChecked]);\n    return value !== undefined ? (React.createElement(Field, __assign({}, rest, { defaultValue: defaultValue, transform: function (event, currentValue) {\n            return event.currentTarget.checked && currentValue\n                ? __spread(currentValue, [value]) : currentValue.filter(function (v) { return v !== value; });\n        } }), function (_a) {\n        var _b = _a.fieldProps, fieldValue = _b.value, otherFieldProps = __rest(_b, [\"value\"]), others = __rest(_a, [\"fieldProps\"]);\n        return children(__assign({ fieldProps: __assign(__assign({}, otherFieldProps), { isChecked: !!fieldValue.find(function (v) { return v === value; }), value: value }) }, others));\n    })) : (React.createElement(Field, __assign({}, rest, { defaultValue: defaultIsChecked, transform: function (event) { return event.currentTarget.checked; } }), function (_a) {\n        var _b = _a.fieldProps, fieldValue = _b.value, otherFieldProps = __rest(_b, [\"value\"]), others = __rest(_a, [\"fieldProps\"]);\n        return children(__assign({ fieldProps: __assign(__assign({}, otherFieldProps), { isChecked: fieldValue, value: value }) }, others));\n    }));\n};\nCheckboxField.defaultProps = {\n    defaultIsChecked: false,\n};\nexport default CheckboxField;\n//# sourceMappingURL=CheckboxField.js.map"]},"metadata":{},"sourceType":"module"}