{"ast":null,"code":"import { __extends } from \"tslib\";\n/** @jsx jsx */\n\nimport { jsx } from '@emotion/core';\nimport React from 'react';\nimport ErrorIcon from '@atlaskit/icon/glyph/error';\nimport WarningIcon from '@atlaskit/icon/glyph/warning';\nimport { Header, Title, TitleText, titleIconWrapperStyles } from '../styled/Content';\n\nvar TitleIcon = function (_a) {\n  var appearance = _a.appearance;\n  if (!appearance) return null;\n  var Icon = appearance === 'danger' ? ErrorIcon : WarningIcon;\n  return jsx(\"span\", {\n    css: titleIconWrapperStyles(appearance)\n  }, jsx(Icon, {\n    label: appearance + \" icon\"\n  }));\n};\n\nvar ModalHeader =\n/** @class */\nfunction (_super) {\n  __extends(ModalHeader, _super);\n\n  function ModalHeader() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ModalHeader.prototype.render = function () {\n    var _a = this.props,\n        appearance = _a.appearance,\n        component = _a.component,\n        heading = _a.heading,\n        onClose = _a.onClose,\n        showKeyline = _a.showKeyline,\n        isHeadingMultiline = _a.isHeadingMultiline;\n    var warning = 'You can provide `component` OR `heading`, not both.';\n    if (!component && !heading) return null;\n\n    if (component && heading) {\n      console.warn(warning); // eslint-disable-line no-console\n\n      return null;\n    }\n\n    if (component) {\n      return React.createElement(component, {\n        appearance: appearance,\n        onClose: onClose,\n        showKeyline: showKeyline,\n        isHeadingMultiline: isHeadingMultiline\n      });\n    }\n\n    return jsx(Header, {\n      showKeyline: showKeyline\n    }, jsx(Title, null, jsx(TitleIcon, {\n      appearance: appearance\n    }), jsx(TitleText, {\n      isHeadingMultiline: isHeadingMultiline\n    }, heading)));\n  };\n\n  ModalHeader.defaultProps = {\n    isHeadingMultiline: true\n  };\n  return ModalHeader;\n}(React.Component);\n\nexport default ModalHeader;","map":{"version":3,"sources":["../../../src/components/Header.tsx"],"names":[],"mappings":";AAAA;;AACA,SAAS,GAAT,QAAoB,eAApB;AAEA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,SAAP,MAAsB,4BAAtB;AACA,OAAO,WAAP,MAAwB,8BAAxB;AAGA,SACE,MADF,EAEE,KAFF,EAGE,SAHF,EAIE,sBAJF,QAKO,mBALP;;AAOA,IAAM,SAAS,GAAG,UAAC,EAAD,EAAsD;MAAnD,UAAA,GAAA,EAAA,CAAA,U;AACnB,MAAI,CAAC,UAAL,EAAiB,OAAO,IAAP;AAEjB,MAAM,IAAI,GAAG,UAAU,KAAK,QAAf,GAA0B,SAA1B,GAAsC,WAAnD;AAEA,SACE,GAAA,CAAA,MAAA,EAAA;AAAM,IAAA,GAAG,EAAE,sBAAsB,CAAC,UAAD;AAAjC,GAAA,EACE,GAAA,CAAC,IAAD,EAAK;AAAC,IAAA,KAAK,EAAK,UAAU,GAAA;AAArB,GAAL,CADF,CADF;AAKD,CAVD;;AAuCA,IAAA,WAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAyC,EAAA,SAAA,CAAA,WAAA,EAAA,MAAA,CAAA;;AAAzC,WAAA,WAAA,GAAA;;AAyCC;;AApCC,EAAA,WAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACQ,QAAA,EAAA,GAAA,KAAA,KAAA;AAAA,QACJ,UAAA,GAAA,EAAA,CAAA,UADI;AAAA,QAEJ,SAAA,GAAA,EAAA,CAAA,SAFI;AAAA,QAGJ,OAAA,GAAA,EAAA,CAAA,OAHI;AAAA,QAIJ,OAAA,GAAA,EAAA,CAAA,OAJI;AAAA,QAKJ,WAAA,GAAA,EAAA,CAAA,WALI;AAAA,QAMJ,kBAAA,GAAA,EAAA,CAAA,kBANI;AAQN,QAAM,OAAO,GAAG,qDAAhB;AAEA,QAAI,CAAC,SAAD,IAAc,CAAC,OAAnB,EAA4B,OAAO,IAAP;;AAC5B,QAAI,SAAS,IAAI,OAAjB,EAA0B;AACxB,MAAA,OAAO,CAAC,IAAR,CAAa,OAAb,EADwB,CACD;;AACvB,aAAO,IAAP;AACD;;AACD,QAAI,SAAJ,EAAe;AACb,aAAO,KAAK,CAAC,aAAN,CAAoB,SAApB,EAA+B;AACpC,QAAA,UAAU,EAAA,UAD0B;AAEpC,QAAA,OAAO,EAAA,OAF6B;AAGpC,QAAA,WAAW,EAAA,WAHyB;AAIpC,QAAA,kBAAkB,EAAA;AAJkB,OAA/B,CAAP;AAMD;;AAED,WACE,GAAA,CAAC,MAAD,EAAO;AAAC,MAAA,WAAW,EAAE;AAAd,KAAP,EACE,GAAA,CAAC,KAAD,EAAM,IAAN,EACE,GAAA,CAAC,SAAD,EAAU;AAAC,MAAA,UAAU,EAAE;AAAb,KAAV,CADF,EAEE,GAAA,CAAC,SAAD,EAAU;AAAC,MAAA,kBAAkB,EAAE;AAArB,KAAV,EACG,OADH,CAFF,CADF,CADF;AAUD,GAnCD;;AAJO,EAAA,WAAA,CAAA,YAAA,GAAe;AACpB,IAAA,kBAAkB,EAAE;AADA,GAAf;AAwCT,SAAA,WAAA;AAAC,CAzCD,CAAyC,KAAK,CAAC,SAA/C,CAAA;;eAAqB,W","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\n/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport React from 'react';\nimport ErrorIcon from '@atlaskit/icon/glyph/error';\nimport WarningIcon from '@atlaskit/icon/glyph/warning';\nimport { Header, Title, TitleText, titleIconWrapperStyles, } from '../styled/Content';\nvar TitleIcon = function (_a) {\n    var appearance = _a.appearance;\n    if (!appearance)\n        return null;\n    var Icon = appearance === 'danger' ? ErrorIcon : WarningIcon;\n    return (jsx(\"span\", { css: titleIconWrapperStyles(appearance) },\n        jsx(Icon, { label: appearance + \" icon\" })));\n};\nvar ModalHeader = /** @class */ (function (_super) {\n    __extends(ModalHeader, _super);\n    function ModalHeader() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ModalHeader.prototype.render = function () {\n        var _a = this.props, appearance = _a.appearance, component = _a.component, heading = _a.heading, onClose = _a.onClose, showKeyline = _a.showKeyline, isHeadingMultiline = _a.isHeadingMultiline;\n        var warning = 'You can provide `component` OR `heading`, not both.';\n        if (!component && !heading)\n            return null;\n        if (component && heading) {\n            console.warn(warning); // eslint-disable-line no-console\n            return null;\n        }\n        if (component) {\n            return React.createElement(component, {\n                appearance: appearance,\n                onClose: onClose,\n                showKeyline: showKeyline,\n                isHeadingMultiline: isHeadingMultiline,\n            });\n        }\n        return (jsx(Header, { showKeyline: showKeyline },\n            jsx(Title, null,\n                jsx(TitleIcon, { appearance: appearance }),\n                jsx(TitleText, { isHeadingMultiline: isHeadingMultiline }, heading))));\n    };\n    ModalHeader.defaultProps = {\n        isHeadingMultiline: true,\n    };\n    return ModalHeader;\n}(React.Component));\nexport default ModalHeader;\n//# sourceMappingURL=Header.js.map"]},"metadata":{},"sourceType":"module"}