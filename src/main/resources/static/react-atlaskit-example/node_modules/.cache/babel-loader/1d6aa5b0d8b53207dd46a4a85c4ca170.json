{"ast":null,"code":"import _objectSpread from\"/home/asirob/Code/atlasmicros/src/main/resources/static/react-atlaskit-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/asirob/Code/atlasmicros/src/main/resources/static/react-atlaskit-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import Select from'@atlaskit/select';import Button from\"@atlaskit/button\";import{subscribe}from\"../actions\";import{useDispatch}from'react-redux';import Modal,{ModalTransition}from\"@atlaskit/modal-dialog\";var SubscriptionSelect=function SubscriptionSelect(props){var values=[];var dispatch=useDispatch();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpen=_useState2[0],setState=_useState2[1];var open=function open(){setState(true);};var close=function close(){setState(false);dispatch(subscribe(values));};var actions=[{text:\"Subscription\",onClick:close}];var options=props.options;console.log(options);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Button,{onClick:open,appearance:\"primary\"},\"Check Subscriptions\"),/*#__PURE__*/React.createElement(ModalTransition,null,isOpen&&/*#__PURE__*/React.createElement(Modal,{actions:actions,onClose:close,heading:\"Subscription List\"},/*#__PURE__*/React.createElement(Select,{menuPortalTarget:document.body,styles:{menuPortal:function menuPortal(base){return _objectSpread({},base,{zIndex:9999});}},options:options,isMulti:true,placeholder:\"Choose you subscription\",onChange:function onChange(value){values=value;}}))));};export default SubscriptionSelect;","map":{"version":3,"sources":["/home/asirob/Code/atlasmicros/src/main/resources/static/react-atlaskit-example/src/components/SubscriptionSelect.js"],"names":["React","useState","Select","Button","subscribe","useDispatch","Modal","ModalTransition","SubscriptionSelect","props","values","dispatch","isOpen","setState","open","close","actions","text","onClick","options","console","log","document","body","menuPortal","base","zIndex","value"],"mappings":"yYAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CACA,OAAQC,SAAR,KAAwB,YAAxB,CACA,OAAQC,WAAR,KAA0B,aAA1B,CACA,MAAOC,CAAAA,KAAP,EAAeC,eAAf,KAAqC,wBAArC,CAGA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAW,CAClC,GAAIC,CAAAA,MAAM,CAAG,EAAb,CACA,GAAMC,CAAAA,QAAQ,CAAGN,WAAW,EAA5B,CAFkC,cAIZJ,QAAQ,CAAC,KAAD,CAJI,wCAI7BW,MAJ6B,eAItBC,QAJsB,eAMlC,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAO,CAACD,QAAQ,CAAC,IAAD,CAAR,CAAgB,CAArC,CACA,GAAME,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAO,CACjBF,QAAQ,CAAC,KAAD,CAAR,CACJF,QAAQ,CAACP,SAAS,CAACM,MAAD,CAAV,CAAR,CACC,CAHD,CAIA,GAAMM,CAAAA,OAAO,CAAG,CAAC,CAAEC,IAAI,CAAE,cAAR,CAAwBC,OAAO,CAAEH,KAAjC,CAAD,CAAhB,CAXkC,GAY3BI,CAAAA,OAZ2B,CAYhBV,KAZgB,CAY3BU,OAZ2B,CAalCC,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAGA,mBACI,qDACQ,oBAAC,MAAD,EAAQ,OAAO,CAAEL,IAAjB,CAAuB,UAAU,CAAC,SAAlC,wBADR,cAEQ,oBAAC,eAAD,MACKF,MAAM,eACH,oBAAC,KAAD,EAAO,OAAO,CAAEI,OAAhB,CAAyB,OAAO,CAAED,KAAlC,CAAyC,OAAO,CAAC,mBAAjD,eACI,oBAAC,MAAD,EACI,gBAAgB,CAAEO,QAAQ,CAACC,IAD/B,CAEI,MAAM,CAAE,CAAEC,UAAU,CAAE,oBAAAC,IAAI,0BAAUA,IAAV,EAAgBC,MAAM,CAAE,IAAxB,IAAlB,CAFZ,CAGI,OAAO,CAAEP,OAHb,CAII,OAAO,KAJX,CAKI,WAAW,CAAC,yBALhB,CAMI,QAAQ,CAAE,kBAACQ,KAAD,CAAW,CACjBjB,MAAM,CAAGiB,KAAT,CACH,CARL,EADJ,CAFR,CAFR,CADJ,CAqBH,CArCD,CAuCA,cAAenB,CAAAA,kBAAf","sourcesContent":["import React, {useState} from 'react';\nimport Select from '@atlaskit/select';\nimport Button from \"@atlaskit/button\";\nimport {subscribe} from \"../actions\";\nimport {useDispatch} from 'react-redux';\nimport Modal, {ModalTransition} from \"@atlaskit/modal-dialog\";\n\n\nconst SubscriptionSelect = (props) => {\n    let values = [];\n    const dispatch = useDispatch();\n\n    let [isOpen,setState]=useState(false);\n\n    const open = () =>  {setState(true);};\n    const close = () =>  {\n        setState(false);\n    dispatch(subscribe(values));\n    };\n    const actions = [{ text: \"Subscription\", onClick: close}];\n    const {options} = props;\n    console.log(options);\n\n\n    return (\n        <>\n                <Button onClick={open} appearance=\"primary\">Check Subscriptions</Button>\n                <ModalTransition>\n                    {isOpen && (\n                        <Modal actions={actions} onClose={close} heading=\"Subscription List\">\n                            <Select\n                                menuPortalTarget={document.body}\n                                styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\n                                options={options}\n                                isMulti\n                                placeholder=\"Choose you subscription\"\n                                onChange={(value) => {\n                                    values = value\n                                }}\n                            />\n                        </Modal>\n                    )}\n                </ModalTransition>\n            </>\n    );\n};\n\nexport default SubscriptionSelect;\n\n\n"]},"metadata":{},"sourceType":"module"}