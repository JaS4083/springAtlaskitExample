{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { createTheme } from '@atlaskit/theme/components';\nimport { gridSize } from '@atlaskit/theme/constants';\nimport { N40, DN50 } from '@atlaskit/theme/colors';\nvar gridSizeValue = gridSize();\nvar AVATAR_SIZES = {\n  xsmall: gridSizeValue * 2,\n  small: gridSizeValue * 3,\n  medium: gridSizeValue * 4,\n  large: gridSizeValue * 5,\n  xlarge: gridSizeValue * 12,\n  xxlarge: gridSizeValue * 16\n}; // border radius only applies to \"square\" avatars\n\nvar AVATAR_RADIUS = {\n  xsmall: 2,\n  small: 2,\n  medium: 3,\n  large: 3,\n  xlarge: 6,\n  xxlarge: 12\n};\nvar BORDER_WIDTH = {\n  xsmall: 2,\n  small: 2,\n  medium: 2,\n  large: 2,\n  xlarge: 2,\n  xxlarge: 2\n};\nvar ICON_SIZES = {\n  xsmall: 0,\n  small: 12,\n  medium: 14,\n  large: 15,\n  xlarge: 18,\n  xxlarge: 0\n};\nvar ICON_OFFSET = {\n  xsmall: 0,\n  small: 0,\n  medium: 0,\n  large: 1,\n  xlarge: 7,\n  xxlarge: 0\n};\nvar SQUARE_ICON_OFFSET = {\n  xsmall: 0,\n  small: 0,\n  medium: 0,\n  large: 0,\n  xlarge: 1,\n  xxlarge: 0\n};\n\nfunction getBackgroundColor(props) {\n  var backgroundColors = {\n    light: N40,\n    dark: DN50\n  };\n  return props.mode && props.isLoading ? backgroundColors[props.mode] : 'transparent';\n}\n\nfunction getBorderRadius(props) {\n  var borderWidth = props.includeBorderWidth ? BORDER_WIDTH[props.size] : 0;\n  var borderRadius = props.appearance === 'circle' ? '50%' : AVATAR_RADIUS[props.size] + borderWidth + \"px\";\n  return borderRadius;\n}\n\nfunction getDimensions(props) {\n  var borderWidth = props.includeBorderWidth ? BORDER_WIDTH[props.size] * 2 : 0;\n  var size = AVATAR_SIZES[props.size] + borderWidth;\n  var width = size + \"px\";\n  var height = width;\n  return {\n    height: height,\n    width: width\n  };\n}\n\nvar getPresenceLayout = function getPresenceLayout(props) {\n  var presencePosition = props.appearance === 'square' ? -(BORDER_WIDTH[props.size] * 2) : ICON_OFFSET[props.size];\n  var presenceSize = ICON_SIZES[props.size];\n  return {\n    bottom: presencePosition + \"px\",\n    height: presenceSize + \"px\",\n    right: presencePosition + \"px\",\n    width: presenceSize + \"px\"\n  };\n};\n\nvar getStatusLayout = function getStatusLayout(props) {\n  var statusPosition = props.appearance === 'square' ? SQUARE_ICON_OFFSET[props.size] : ICON_OFFSET[props.size];\n  var statusSize = ICON_SIZES[props.size];\n  return {\n    height: statusSize + \"px\",\n    right: statusPosition + \"px\",\n    top: statusPosition + \"px\",\n    width: statusSize + \"px\"\n  };\n};\n\nvar propsDefaults = {\n  appearance: 'circle',\n  includeBorderWidth: false,\n  isLoading: false,\n  mode: 'light',\n  presence: 'offline',\n  size: 'xsmall'\n};\nexport var Theme = createTheme(function (props) {\n  var propsWithDefaults = __assign(__assign({}, propsDefaults), props);\n\n  return {\n    backgroundColor: getBackgroundColor(propsWithDefaults),\n    borderRadius: getBorderRadius(propsWithDefaults),\n    dimensions: getDimensions(propsWithDefaults),\n    presence: getPresenceLayout(propsWithDefaults),\n    status: getStatusLayout(propsWithDefaults)\n  };\n});","map":{"version":3,"sources":["../../../src/theme/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign } from \"tslib\";\nimport { createTheme } from '@atlaskit/theme/components';\nimport { gridSize } from '@atlaskit/theme/constants';\nimport { N40, DN50 } from '@atlaskit/theme/colors';\nvar gridSizeValue = gridSize();\nvar AVATAR_SIZES = {\n    xsmall: gridSizeValue * 2,\n    small: gridSizeValue * 3,\n    medium: gridSizeValue * 4,\n    large: gridSizeValue * 5,\n    xlarge: gridSizeValue * 12,\n    xxlarge: gridSizeValue * 16,\n};\n// border radius only applies to \"square\" avatars\nvar AVATAR_RADIUS = {\n    xsmall: 2,\n    small: 2,\n    medium: 3,\n    large: 3,\n    xlarge: 6,\n    xxlarge: 12,\n};\nvar BORDER_WIDTH = {\n    xsmall: 2,\n    small: 2,\n    medium: 2,\n    large: 2,\n    xlarge: 2,\n    xxlarge: 2,\n};\nvar ICON_SIZES = {\n    xsmall: 0,\n    small: 12,\n    medium: 14,\n    large: 15,\n    xlarge: 18,\n    xxlarge: 0,\n};\nvar ICON_OFFSET = {\n    xsmall: 0,\n    small: 0,\n    medium: 0,\n    large: 1,\n    xlarge: 7,\n    xxlarge: 0,\n};\nvar SQUARE_ICON_OFFSET = {\n    xsmall: 0,\n    small: 0,\n    medium: 0,\n    large: 0,\n    xlarge: 1,\n    xxlarge: 0,\n};\nfunction getBackgroundColor(props) {\n    var backgroundColors = {\n        light: N40,\n        dark: DN50,\n    };\n    return props.mode && props.isLoading\n        ? backgroundColors[props.mode]\n        : 'transparent';\n}\nfunction getBorderRadius(props) {\n    var borderWidth = props.includeBorderWidth ? BORDER_WIDTH[props.size] : 0;\n    var borderRadius = props.appearance === 'circle'\n        ? '50%'\n        : AVATAR_RADIUS[props.size] + borderWidth + \"px\";\n    return borderRadius;\n}\nfunction getDimensions(props) {\n    var borderWidth = props.includeBorderWidth\n        ? BORDER_WIDTH[props.size] * 2\n        : 0;\n    var size = AVATAR_SIZES[props.size] + borderWidth;\n    var width = size + \"px\";\n    var height = width;\n    return { height: height, width: width };\n}\nvar getPresenceLayout = function (props) {\n    var presencePosition = props.appearance === 'square'\n        ? -(BORDER_WIDTH[props.size] * 2)\n        : ICON_OFFSET[props.size];\n    var presenceSize = ICON_SIZES[props.size];\n    return {\n        bottom: presencePosition + \"px\",\n        height: presenceSize + \"px\",\n        right: presencePosition + \"px\",\n        width: presenceSize + \"px\",\n    };\n};\nvar getStatusLayout = function (props) {\n    var statusPosition = props.appearance === 'square'\n        ? SQUARE_ICON_OFFSET[props.size]\n        : ICON_OFFSET[props.size];\n    var statusSize = ICON_SIZES[props.size];\n    return {\n        height: statusSize + \"px\",\n        right: statusPosition + \"px\",\n        top: statusPosition + \"px\",\n        width: statusSize + \"px\",\n    };\n};\nvar propsDefaults = {\n    appearance: 'circle',\n    includeBorderWidth: false,\n    isLoading: false,\n    mode: 'light',\n    presence: 'offline',\n    size: 'xsmall',\n};\nexport var Theme = createTheme(function (props) {\n    var propsWithDefaults = __assign(__assign({}, propsDefaults), props);\n    return {\n        backgroundColor: getBackgroundColor(propsWithDefaults),\n        borderRadius: getBorderRadius(propsWithDefaults),\n        dimensions: getDimensions(propsWithDefaults),\n        presence: getPresenceLayout(propsWithDefaults),\n        status: getStatusLayout(propsWithDefaults),\n    };\n});\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}