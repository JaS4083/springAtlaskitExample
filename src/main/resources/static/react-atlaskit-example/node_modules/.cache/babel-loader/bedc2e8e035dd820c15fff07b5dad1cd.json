{"ast":null,"code":"import { __makeTemplateObject } from \"tslib\";\nimport styled from 'styled-components';\nimport { spacing } from './vars';\n\nvar getColumnRatio = function getColumnRatio(props) {\n  if (props.medium === props.theme.columns) {\n    return '100%';\n  }\n\n  return \"99.9999% / \" + props.theme.columns + \" * \" + props.medium;\n};\n\nvar getColumnWidth = function getColumnWidth(props) {\n  return props.medium > 0 ? \"calc(\" + getColumnRatio(props) + \" - \" + spacing[props.theme.spacing] + \"px)\" : 'auto';\n};\n\nvar availableColumns = function availableColumns(props) {\n  return props.theme.columns;\n};\n\nvar specifiedColumns = function specifiedColumns(props) {\n  return props.medium ? props.medium : availableColumns(props);\n};\n\nvar columns = function columns(props) {\n  return Math.min(availableColumns(props), specifiedColumns(props));\n};\n\nvar gridSpacing = function gridSpacing(props) {\n  return spacing[props.theme.spacing];\n};\n\nvar getMaxWidthColumnRatio = function getMaxWidthColumnRatio(props) {\n  if (columns(props) >= availableColumns(props)) {\n    return '100%';\n  }\n\n  return \"99.9999% / \" + availableColumns(props) + \" * \" + columns(props);\n}; // Unable to use the flexbox shorthand rules because Styled Components doesn't\n// handle them correctly for IE11.\n// Also IE11 and Edge both have rounding issues for flexbox which is why a width of\n// 99.9999% is used. Using 100% here causes columns to wrap prematurely.\n\n\nvar GridColumn = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  flex-grow: 1;\\n  flex-shrink: 0;\\n  flex-basis: \", \";\\n  margin: 0 \", \"px;\\n  max-width: calc(\", \" - \", \"px);\\n  min-width: calc(99.9999% / \", \" - \", \"px);\\n  word-wrap: break-word;\\n\"], [\"\\n  flex-grow: 1;\\n  flex-shrink: 0;\\n  flex-basis: \", \";\\n  margin: 0 \", \"px;\\n  max-width: calc(\", \" - \", \"px);\\n  min-width: calc(99.9999% / \", \" - \", \"px);\\n  word-wrap: break-word;\\n\"])), getColumnWidth, function (props) {\n  return spacing[props.theme.spacing] / 2;\n}, getMaxWidthColumnRatio, gridSpacing, availableColumns, gridSpacing);\nexport default GridColumn;\nexport { getColumnWidth };\nvar templateObject_1;","map":{"version":3,"sources":["../../../src/internal/GridColumnElement.ts"],"names":[],"mappings":";AAAA,OAAO,MAAP,MAAmB,mBAAnB;AAEA,SAAS,OAAT,QAAwB,QAAxB;;AAQA,IAAM,cAAc,GAAG,SAAjB,cAAiB,CAAC,KAAD,EAAa;AAClC,MAAI,KAAK,CAAC,MAAN,KAAiB,KAAK,CAAC,KAAN,CAAY,OAAjC,EAA0C;AACxC,WAAO,MAAP;AACD;;AACD,SAAO,gBAAc,KAAK,CAAC,KAAN,CAAY,OAA1B,GAAiC,KAAjC,GAAuC,KAAK,CAAC,MAApD;AACD,CALD;;AAMA,IAAM,cAAc,GAAG,SAAjB,cAAiB,CAAC,KAAD,EAAW;AAChC,SAAA,KAAK,CAAC,MAAN,GAAe,CAAf,GACI,UAAQ,cAAc,CAAC,KAAD,CAAtB,GAA6B,KAA7B,GAAmC,OAAO,CAAC,KAAK,CAAC,KAAN,CAAY,OAAb,CAA1C,GAA+D,KADnE,GAEI,MAFJ;AAEU,CAHZ;;AAIA,IAAM,gBAAgB,GAAG,SAAnB,gBAAmB,CAAC,KAAD,EAAa;AAAK,SAAA,KAAK,CAAC,KAAN,CAAA,OAAA;AAAmB,CAA9D;;AACA,IAAM,gBAAgB,GAAG,SAAnB,gBAAmB,CAAC,KAAD,EAAa;AACpC,SAAA,KAAK,CAAC,MAAN,GAAe,KAAK,CAAC,MAArB,GAA8B,gBAAgB,CAAC,KAAD,CAA9C;AAAqD,CADvD;;AAEA,IAAM,OAAO,GAAG,SAAV,OAAU,CAAC,KAAD,EAAa;AAC3B,SAAA,IAAI,CAAC,GAAL,CAAS,gBAAgB,CAAC,KAAD,CAAzB,EAAkC,gBAAgB,CAAC,KAAD,CAAlD,CAAA;AAA0D,CAD5D;;AAEA,IAAM,WAAW,GAAG,SAAd,WAAc,CAAC,KAAD,EAAa;AAAK,SAAA,OAAO,CAAC,KAAK,CAAC,KAAN,CAAR,OAAO,CAAP;AAA4B,CAAlE;;AACA,IAAM,sBAAsB,GAAG,SAAzB,sBAAyB,CAAC,KAAD,EAAa;AAC1C,MAAI,OAAO,CAAC,KAAD,CAAP,IAAkB,gBAAgB,CAAC,KAAD,CAAtC,EAA+C;AAC7C,WAAO,MAAP;AACD;;AACD,SAAO,gBAAc,gBAAgB,CAAC,KAAD,CAA9B,GAAqC,KAArC,GAA2C,OAAO,CAAC,KAAD,CAAzD;AACD,CALD,C,CAOA;AACA;AACA;AACA;;;AACA,IAAM,UAAU,GAAG,MAAM,CAAC,GAAP,CAAU,gBAAA,KAAA,gBAAA,GAAA,oBAAA,CAAA,CAAA,sDAAA,EAAA,iBAAA,EAAA,yBAAA,EAAA,KAAA,EAAA,qCAAA,EAAA,KAAA,EAAA,kCAAA,CAAA,EAAA,CAAiB,sDAAjB,EAGC,iBAHD,EAI0B,yBAJ1B,EAKa,KALb,EAK8B,qCAL9B,EAMkB,KANlB,EAMmC,kCANnC,CAAA,CAAA,CAAV,EAGH,cAHG,EAIL,UAAA,KAAA,EAAK;AAAI,SAAA,OAAO,CAAC,KAAK,CAAC,KAAN,CAAY,OAAb,CAAP,GAAA,CAAA;AAAgC,CAJpC,EAKC,sBALD,EAK6B,WAL7B,EAMY,gBANZ,EAMkC,WANlC,CAAnB;AAUA,eAAe,UAAf;AACA,SAAS,cAAT","sourceRoot":"","sourcesContent":["import { __makeTemplateObject } from \"tslib\";\nimport styled from 'styled-components';\nimport { spacing } from './vars';\nvar getColumnRatio = function (props) {\n    if (props.medium === props.theme.columns) {\n        return '100%';\n    }\n    return \"99.9999% / \" + props.theme.columns + \" * \" + props.medium;\n};\nvar getColumnWidth = function (props) {\n    return props.medium > 0\n        ? \"calc(\" + getColumnRatio(props) + \" - \" + spacing[props.theme.spacing] + \"px)\"\n        : 'auto';\n};\nvar availableColumns = function (props) { return props.theme.columns; };\nvar specifiedColumns = function (props) {\n    return props.medium ? props.medium : availableColumns(props);\n};\nvar columns = function (props) {\n    return Math.min(availableColumns(props), specifiedColumns(props));\n};\nvar gridSpacing = function (props) { return spacing[props.theme.spacing]; };\nvar getMaxWidthColumnRatio = function (props) {\n    if (columns(props) >= availableColumns(props)) {\n        return '100%';\n    }\n    return \"99.9999% / \" + availableColumns(props) + \" * \" + columns(props);\n};\n// Unable to use the flexbox shorthand rules because Styled Components doesn't\n// handle them correctly for IE11.\n// Also IE11 and Edge both have rounding issues for flexbox which is why a width of\n// 99.9999% is used. Using 100% here causes columns to wrap prematurely.\nvar GridColumn = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  flex-grow: 1;\\n  flex-shrink: 0;\\n  flex-basis: \", \";\\n  margin: 0 \", \"px;\\n  max-width: calc(\", \" - \", \"px);\\n  min-width: calc(99.9999% / \", \" - \", \"px);\\n  word-wrap: break-word;\\n\"], [\"\\n  flex-grow: 1;\\n  flex-shrink: 0;\\n  flex-basis: \", \";\\n  margin: 0 \", \"px;\\n  max-width: calc(\", \" - \", \"px);\\n  min-width: calc(99.9999% / \", \" - \", \"px);\\n  word-wrap: break-word;\\n\"])), getColumnWidth, function (props) { return spacing[props.theme.spacing] / 2; }, getMaxWidthColumnRatio, gridSpacing, availableColumns, gridSpacing);\nexport default GridColumn;\nexport { getColumnWidth };\nvar templateObject_1;\n//# sourceMappingURL=GridColumnElement.js.map"]},"metadata":{},"sourceType":"module"}