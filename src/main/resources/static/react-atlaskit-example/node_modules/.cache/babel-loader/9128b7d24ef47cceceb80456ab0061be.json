{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport { gridSize as gridSizeFn } from '@atlaskit/theme/constants';\nimport { N200 } from '@atlaskit/theme/colors';\nvar gridSize = gridSizeFn();\nvar fontSize = 11;\nvar baseStyles = {\n  headingBase: {\n    alignItems: 'center',\n    display: 'flex',\n    flexShrink: 0,\n    fontSize: \"\".concat(fontSize, \"px\"),\n    fontWeight: 600,\n    lineHeight: gridSize * 2 / fontSize,\n    margin: \"\".concat(gridSize * 4, \"px 0 \").concat(gridSize, \"px\"),\n    padding: \"0 \".concat(gridSize * 1.5, \"px\"),\n    textTransform: 'uppercase'\n  },\n  textWrapper: {\n    flexGrow: 1,\n    overflowX: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    width: '100%'\n  },\n  afterWrapper: {\n    lineHeight: 1,\n    marginLeft: \"\".concat(gridSize / 2, \"px\")\n  }\n};\nexport default (function (_ref) {\n  var product = _ref.product;\n  return function () {\n    return {\n      container: _objectSpread({}, baseStyles, {\n        headingBase: _objectSpread({}, baseStyles.headingBase, {\n          color: N200\n        })\n      }),\n      product: _objectSpread({}, baseStyles, {\n        headingBase: _objectSpread({}, baseStyles.headingBase, {\n          color: product.text.subtle\n        })\n      })\n    };\n  };\n});","map":{"version":3,"sources":["/home/asirob/Code/atlasmicros/src/main/resources/static/react-atlaskit-example/node_modules/@atlaskit/navigation-next/dist/esm/components/presentational/GroupHeading/styles.js"],"names":["_objectSpread","gridSize","gridSizeFn","N200","fontSize","baseStyles","headingBase","alignItems","display","flexShrink","concat","fontWeight","lineHeight","margin","padding","textTransform","textWrapper","flexGrow","overflowX","textOverflow","whiteSpace","width","afterWrapper","marginLeft","_ref","product","container","color","text","subtle"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,qCAA1B;AACA,SAASC,QAAQ,IAAIC,UAArB,QAAuC,2BAAvC;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,IAAIF,QAAQ,GAAGC,UAAU,EAAzB;AACA,IAAIE,QAAQ,GAAG,EAAf;AACA,IAAIC,UAAU,GAAG;AACfC,EAAAA,WAAW,EAAE;AACXC,IAAAA,UAAU,EAAE,QADD;AAEXC,IAAAA,OAAO,EAAE,MAFE;AAGXC,IAAAA,UAAU,EAAE,CAHD;AAIXL,IAAAA,QAAQ,EAAE,GAAGM,MAAH,CAAUN,QAAV,EAAoB,IAApB,CAJC;AAKXO,IAAAA,UAAU,EAAE,GALD;AAMXC,IAAAA,UAAU,EAAEX,QAAQ,GAAG,CAAX,GAAeG,QANhB;AAOXS,IAAAA,MAAM,EAAE,GAAGH,MAAH,CAAUT,QAAQ,GAAG,CAArB,EAAwB,OAAxB,EAAiCS,MAAjC,CAAwCT,QAAxC,EAAkD,IAAlD,CAPG;AAQXa,IAAAA,OAAO,EAAE,KAAKJ,MAAL,CAAYT,QAAQ,GAAG,GAAvB,EAA4B,IAA5B,CARE;AASXc,IAAAA,aAAa,EAAE;AATJ,GADE;AAYfC,EAAAA,WAAW,EAAE;AACXC,IAAAA,QAAQ,EAAE,CADC;AAEXC,IAAAA,SAAS,EAAE,QAFA;AAGXC,IAAAA,YAAY,EAAE,UAHH;AAIXC,IAAAA,UAAU,EAAE,QAJD;AAKXC,IAAAA,KAAK,EAAE;AALI,GAZE;AAmBfC,EAAAA,YAAY,EAAE;AACZV,IAAAA,UAAU,EAAE,CADA;AAEZW,IAAAA,UAAU,EAAE,GAAGb,MAAH,CAAUT,QAAQ,GAAG,CAArB,EAAwB,IAAxB;AAFA;AAnBC,CAAjB;AAwBA,gBAAgB,UAAUuB,IAAV,EAAgB;AAC9B,MAAIC,OAAO,GAAGD,IAAI,CAACC,OAAnB;AACA,SAAO,YAAY;AACjB,WAAO;AACLC,MAAAA,SAAS,EAAE1B,aAAa,CAAC,EAAD,EAAKK,UAAL,EAAiB;AACvCC,QAAAA,WAAW,EAAEN,aAAa,CAAC,EAAD,EAAKK,UAAU,CAACC,WAAhB,EAA6B;AACrDqB,UAAAA,KAAK,EAAExB;AAD8C,SAA7B;AADa,OAAjB,CADnB;AAMLsB,MAAAA,OAAO,EAAEzB,aAAa,CAAC,EAAD,EAAKK,UAAL,EAAiB;AACrCC,QAAAA,WAAW,EAAEN,aAAa,CAAC,EAAD,EAAKK,UAAU,CAACC,WAAhB,EAA6B;AACrDqB,UAAAA,KAAK,EAAEF,OAAO,CAACG,IAAR,CAAaC;AADiC,SAA7B;AADW,OAAjB;AANjB,KAAP;AAYD,GAbD;AAcD,CAhBD","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport { gridSize as gridSizeFn } from '@atlaskit/theme/constants';\nimport { N200 } from '@atlaskit/theme/colors';\nvar gridSize = gridSizeFn();\nvar fontSize = 11;\nvar baseStyles = {\n  headingBase: {\n    alignItems: 'center',\n    display: 'flex',\n    flexShrink: 0,\n    fontSize: \"\".concat(fontSize, \"px\"),\n    fontWeight: 600,\n    lineHeight: gridSize * 2 / fontSize,\n    margin: \"\".concat(gridSize * 4, \"px 0 \").concat(gridSize, \"px\"),\n    padding: \"0 \".concat(gridSize * 1.5, \"px\"),\n    textTransform: 'uppercase'\n  },\n  textWrapper: {\n    flexGrow: 1,\n    overflowX: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    width: '100%'\n  },\n  afterWrapper: {\n    lineHeight: 1,\n    marginLeft: \"\".concat(gridSize / 2, \"px\")\n  }\n};\nexport default (function (_ref) {\n  var product = _ref.product;\n  return function () {\n    return {\n      container: _objectSpread({}, baseStyles, {\n        headingBase: _objectSpread({}, baseStyles.headingBase, {\n          color: N200\n        })\n      }),\n      product: _objectSpread({}, baseStyles, {\n        headingBase: _objectSpread({}, baseStyles.headingBase, {\n          color: product.text.subtle\n        })\n      })\n    };\n  };\n});"]},"metadata":{},"sourceType":"module"}