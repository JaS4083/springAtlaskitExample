{"ast":null,"code":"var _jsxFileName = \"/home/asirob/Code/atlasmicros/src/main/resources/static/react-atlaskit-example/src/common/ProtectedRout.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nexport const ProtectedRout = ({\n  component: Component,\n  ...rest\n}) => {\n  const store = useSelector(state => state);\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      console.log(\"store: \" + store);\n\n      if (store.isLogged) {\n        return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 31\n          }\n        }));\n      } else {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: {\n            pathname: '/',\n            state: {\n              from: props.location\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 31\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["/home/asirob/Code/atlasmicros/src/main/resources/static/react-atlaskit-example/src/common/ProtectedRout.js"],"names":["React","Route","Redirect","useSelector","ProtectedRout","component","Component","rest","store","state","props","console","log","isLogged","pathname","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;AACA,SAAQC,WAAR,QAA2B,aAA3B;AAGA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAD,KAAqC;AAC9D,QAAMC,KAAK,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAV,CAAzB;AAEA,sBACI,oBAAC,KAAD,oBAAWF,IAAX;AACO,IAAA,MAAM,EAAEG,KAAK,IAAI;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAWJ,KAAvB;;AACA,UAAGA,KAAK,CAACK,QAAT,EAAmB;AACf,4BAAO,oBAAC,SAAD,oBAAeH,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACH,OAFD,MAEK;AACD,4BAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EACf;AACII,YAAAA,QAAQ,EAAE,GADd;AAEIL,YAAAA,KAAK,EAAE;AACHM,cAAAA,IAAI,EAAEL,KAAK,CAACM;AADT;AAFX,WADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAUH;AACJ,KAjBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAqBH,CAxBM","sourcesContent":["import React from 'react'\nimport {Route, Redirect} from 'react-router-dom';\nimport {useSelector } from 'react-redux';\n\n\nexport const ProtectedRout = ({component: Component, ...rest}) => {\n    const store = useSelector(state => state);\n\n    return (\n        <Route {...rest}\n               render={props => {\n                   console.log(\"store: \"+ store);\n                   if(store.isLogged) {\n                       return <Component {...props} />;\n                   }else{\n                       return <Redirect to ={\n                           {\n                               pathname: '/',\n                               state: {\n                                   from: props.location\n                               }\n                           }\n                       }\n                       />\n\n                   }\n               }}\n        />\n    );\n};"]},"metadata":{},"sourceType":"module"}