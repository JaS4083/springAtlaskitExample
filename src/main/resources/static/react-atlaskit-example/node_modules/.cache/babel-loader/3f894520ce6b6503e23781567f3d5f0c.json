{"ast":null,"code":"import { __assign, __extends, __rest } from \"tslib\";\nimport GlobalTheme from '@atlaskit/theme/components';\nimport React from 'react';\nimport { withAnalyticsEvents, withAnalyticsContext, createAndFireEvent } from '@atlaskit/analytics-next';\nimport { name as packageName, version as packageVersion } from '../version.json';\nimport Input from './Input';\nimport { Theme } from '../theme';\n\nvar Textfield =\n/** @class */\nfunction (_super) {\n  __extends(Textfield, _super);\n\n  function Textfield() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      isFocused: false,\n      isHovered: false\n    };\n    _this.input = null;\n\n    _this.handleOnFocus = function (event) {\n      _this.setState({\n        isFocused: true\n      });\n\n      if (_this.props.onFocus) {\n        _this.props.onFocus(event);\n      }\n    };\n\n    _this.handleOnBlur = function (event) {\n      _this.setState({\n        isFocused: false\n      });\n\n      if (_this.props.onBlur) {\n        _this.props.onBlur(event);\n      }\n    };\n\n    _this.handleOnMouseDown = function (event) {\n      /** Running e.preventDefault() on the INPUT prevents double click behaviour */\n      // Sadly we needed this cast as the target type is being correctly set\n      var target = event.target;\n\n      if (target.tagName !== 'INPUT') {\n        event.preventDefault();\n      }\n\n      if (_this.input && !_this.props.isDisabled && document.activeElement !== _this.input) {\n        _this.input.focus();\n      }\n\n      if (_this.props.onMouseDown) {\n        _this.props.onMouseDown(event);\n      }\n    };\n\n    _this.onMouseEnter = function () {\n      if (!_this.props.isDisabled) {\n        _this.setState({\n          isHovered: true\n        });\n      }\n    };\n\n    _this.onMouseLeave = function () {\n      if (!_this.props.isDisabled) {\n        _this.setState({\n          isHovered: false\n        });\n      }\n    }; // we want to keep a copy of the ref as well as pass it along\n\n\n    _this.setInputRef = function (input) {\n      _this.input = input;\n      var forwardedRef = _this.props.forwardedRef;\n\n      if (!forwardedRef) {\n        return;\n      }\n\n      if (typeof forwardedRef === 'object') {\n        // This is a blunder on the part of @types/react\n        // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/31065\n        // .current should be assignable\n        // @ts-ignore\n        forwardedRef.current = input;\n      }\n\n      if (typeof forwardedRef === 'function') {\n        forwardedRef(input);\n      }\n    };\n\n    return _this;\n  }\n\n  Textfield.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.state,\n        isFocused = _a.isFocused,\n        isHovered = _a.isHovered;\n\n    var _b = this.props,\n        // Sadly need to pull these out.\n    // It is injected by the HOC and we don't want to pass it onto the HTML input\n    // @ts-ignore: not passed onto input\n    createAnalyticsEvent = _b.createAnalyticsEvent,\n        // @ts-ignore: not passed onto input\n    forwardedRef = _b.forwardedRef,\n        appearance = _b.appearance,\n        isCompact = _b.isCompact,\n        isDisabled = _b.isDisabled,\n        isInvalid = _b.isInvalid,\n        isRequired = _b.isRequired,\n        isReadOnly = _b.isReadOnly,\n        isMonospaced = _b.isMonospaced,\n        theme = _b.theme,\n        width = _b.width,\n        elemAfterInput = _b.elemAfterInput,\n        elemBeforeInput = _b.elemBeforeInput,\n        testId = _b.testId,\n        otherProps = __rest(_b, [\"createAnalyticsEvent\", \"forwardedRef\", \"appearance\", \"isCompact\", \"isDisabled\", \"isInvalid\", \"isRequired\", \"isReadOnly\", \"isMonospaced\", \"theme\", \"width\", \"elemAfterInput\", \"elemBeforeInput\", \"testId\"]);\n\n    return React.createElement(Theme.Provider, {\n      value: theme\n    }, React.createElement(GlobalTheme.Consumer, null, function (_a) {\n      var mode = _a.mode;\n      return React.createElement(Theme.Consumer, {\n        appearance: appearance,\n        mode: mode,\n        width: width,\n        isDisabled: isDisabled,\n        isCompact: isCompact,\n        isMonospaced: isMonospaced,\n        isFocused: isFocused,\n        isHovered: isHovered,\n        isInvalid: isInvalid\n      }, function (tokens) {\n        return React.createElement(Input\n        /* spreading before applying other props to prevent overwriting */\n        , __assign({}, otherProps, {\n          isDisabled: isDisabled,\n          isReadOnly: isReadOnly,\n          isRequired: isRequired,\n          theme: tokens,\n          onBlur: _this.handleOnBlur,\n          onFocus: _this.handleOnFocus,\n          onMouseEnter: _this.onMouseEnter,\n          onMouseLeave: _this.onMouseLeave,\n          onMouseDown: _this.handleOnMouseDown,\n          elemAfterInput: elemAfterInput,\n          elemBeforeInput: elemBeforeInput,\n          innerRef: _this.setInputRef,\n          testId: testId\n        }));\n      });\n    }));\n  };\n\n  Textfield.defaultProps = {\n    appearance: 'standard',\n    isCompact: false,\n    isMonospaced: false,\n    isInvalid: false,\n    isRequired: false,\n    isReadOnly: false,\n    isDisabled: false\n  };\n  return Textfield;\n}(React.Component);\n\nvar ForwardRefTextfield = React.forwardRef(function (props, ref) {\n  return React.createElement(Textfield, __assign({}, props, {\n    forwardedRef: ref\n  }));\n});\nexport { ForwardRefTextfield as TextFieldWithoutAnalytics };\nvar createAndFireEventOnAtlaskit = createAndFireEvent('atlaskit');\nexport default withAnalyticsContext({\n  componentName: 'textField',\n  packageName: packageName,\n  packageVersion: packageVersion\n})(withAnalyticsEvents({\n  onBlur: createAndFireEventOnAtlaskit({\n    action: 'blurred',\n    actionSubject: 'textField',\n    attributes: {\n      componentName: 'textField',\n      packageName: packageName,\n      packageVersion: packageVersion\n    }\n  }),\n  onFocus: createAndFireEventOnAtlaskit({\n    action: 'focused',\n    actionSubject: 'textField',\n    attributes: {\n      componentName: 'textField',\n      packageName: packageName,\n      packageVersion: packageVersion\n    }\n  })\n})(ForwardRefTextfield));","map":{"version":3,"sources":["../../../src/components/Textfield.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __extends, __rest } from \"tslib\";\nimport GlobalTheme from '@atlaskit/theme/components';\nimport React from 'react';\nimport { withAnalyticsEvents, withAnalyticsContext, createAndFireEvent, } from '@atlaskit/analytics-next';\nimport { name as packageName, version as packageVersion, } from '../version.json';\nimport Input from './Input';\nimport { Theme } from '../theme';\nvar Textfield = /** @class */ (function (_super) {\n    __extends(Textfield, _super);\n    function Textfield() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            isFocused: false,\n            isHovered: false,\n        };\n        _this.input = null;\n        _this.handleOnFocus = function (event) {\n            _this.setState({ isFocused: true });\n            if (_this.props.onFocus) {\n                _this.props.onFocus(event);\n            }\n        };\n        _this.handleOnBlur = function (event) {\n            _this.setState({ isFocused: false });\n            if (_this.props.onBlur) {\n                _this.props.onBlur(event);\n            }\n        };\n        _this.handleOnMouseDown = function (event) {\n            /** Running e.preventDefault() on the INPUT prevents double click behaviour */\n            // Sadly we needed this cast as the target type is being correctly set\n            var target = event.target;\n            if (target.tagName !== 'INPUT') {\n                event.preventDefault();\n            }\n            if (_this.input &&\n                !_this.props.isDisabled &&\n                document.activeElement !== _this.input) {\n                _this.input.focus();\n            }\n            if (_this.props.onMouseDown) {\n                _this.props.onMouseDown(event);\n            }\n        };\n        _this.onMouseEnter = function () {\n            if (!_this.props.isDisabled) {\n                _this.setState({ isHovered: true });\n            }\n        };\n        _this.onMouseLeave = function () {\n            if (!_this.props.isDisabled) {\n                _this.setState({ isHovered: false });\n            }\n        };\n        // we want to keep a copy of the ref as well as pass it along\n        _this.setInputRef = function (input) {\n            _this.input = input;\n            var forwardedRef = _this.props.forwardedRef;\n            if (!forwardedRef) {\n                return;\n            }\n            if (typeof forwardedRef === 'object') {\n                // This is a blunder on the part of @types/react\n                // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/31065\n                // .current should be assignable\n                // @ts-ignore\n                forwardedRef.current = input;\n            }\n            if (typeof forwardedRef === 'function') {\n                forwardedRef(input);\n            }\n        };\n        return _this;\n    }\n    Textfield.prototype.render = function () {\n        var _this = this;\n        var _a = this.state, isFocused = _a.isFocused, isHovered = _a.isHovered;\n        var _b = this.props, \n        // Sadly need to pull these out.\n        // It is injected by the HOC and we don't want to pass it onto the HTML input\n        // @ts-ignore: not passed onto input\n        createAnalyticsEvent = _b.createAnalyticsEvent, \n        // @ts-ignore: not passed onto input\n        forwardedRef = _b.forwardedRef, appearance = _b.appearance, isCompact = _b.isCompact, isDisabled = _b.isDisabled, isInvalid = _b.isInvalid, isRequired = _b.isRequired, isReadOnly = _b.isReadOnly, isMonospaced = _b.isMonospaced, theme = _b.theme, width = _b.width, elemAfterInput = _b.elemAfterInput, elemBeforeInput = _b.elemBeforeInput, testId = _b.testId, otherProps = __rest(_b, [\"createAnalyticsEvent\", \"forwardedRef\", \"appearance\", \"isCompact\", \"isDisabled\", \"isInvalid\", \"isRequired\", \"isReadOnly\", \"isMonospaced\", \"theme\", \"width\", \"elemAfterInput\", \"elemBeforeInput\", \"testId\"]);\n        return (React.createElement(Theme.Provider, { value: theme },\n            React.createElement(GlobalTheme.Consumer, null, function (_a) {\n                var mode = _a.mode;\n                return (React.createElement(Theme.Consumer, { appearance: appearance, mode: mode, width: width, isDisabled: isDisabled, isCompact: isCompact, isMonospaced: isMonospaced, isFocused: isFocused, isHovered: isHovered, isInvalid: isInvalid }, function (tokens) { return (React.createElement(Input\n                /* spreading before applying other props to prevent overwriting */\n                , __assign({}, otherProps, { isDisabled: isDisabled, isReadOnly: isReadOnly, isRequired: isRequired, theme: tokens, onBlur: _this.handleOnBlur, onFocus: _this.handleOnFocus, onMouseEnter: _this.onMouseEnter, onMouseLeave: _this.onMouseLeave, onMouseDown: _this.handleOnMouseDown, elemAfterInput: elemAfterInput, elemBeforeInput: elemBeforeInput, innerRef: _this.setInputRef, testId: testId }))); }));\n            })));\n    };\n    Textfield.defaultProps = {\n        appearance: 'standard',\n        isCompact: false,\n        isMonospaced: false,\n        isInvalid: false,\n        isRequired: false,\n        isReadOnly: false,\n        isDisabled: false,\n    };\n    return Textfield;\n}(React.Component));\nvar ForwardRefTextfield = React.forwardRef(function (props, ref) { return React.createElement(Textfield, __assign({}, props, { forwardedRef: ref })); });\nexport { ForwardRefTextfield as TextFieldWithoutAnalytics };\nvar createAndFireEventOnAtlaskit = createAndFireEvent('atlaskit');\nexport default withAnalyticsContext({\n    componentName: 'textField',\n    packageName: packageName,\n    packageVersion: packageVersion,\n})(withAnalyticsEvents({\n    onBlur: createAndFireEventOnAtlaskit({\n        action: 'blurred',\n        actionSubject: 'textField',\n        attributes: {\n            componentName: 'textField',\n            packageName: packageName,\n            packageVersion: packageVersion,\n        },\n    }),\n    onFocus: createAndFireEventOnAtlaskit({\n        action: 'focused',\n        actionSubject: 'textField',\n        attributes: {\n            componentName: 'textField',\n            packageName: packageName,\n            packageVersion: packageVersion,\n        },\n    }),\n})(ForwardRefTextfield));\n//# sourceMappingURL=Textfield.js.map"]},"metadata":{},"sourceType":"module"}