{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\nimport React, { useContext } from 'react';\nimport ArrowRightCircleIcon from '@atlaskit/icon/glyph/arrow-right-circle';\nimport Spinner from '@atlaskit/spinner';\nimport { withNavigationViewController } from '../../../view-controller';\nimport ConnectedItem from '../ConnectedItem';\nimport { ScrollProviderRef } from '../../presentational/ContentNavigation/primitives';\n\nvar After = function After(_ref) {\n  var afterGoTo = _ref.afterGoTo,\n      spinnerDelay = _ref.spinnerDelay,\n      incomingView = _ref.incomingView,\n      isActive = _ref.isActive,\n      isHover = _ref.isHover,\n      isFocused = _ref.isFocused;\n\n  if (incomingView && incomingView.id === afterGoTo) {\n    return ___EmotionJSX(Spinner, {\n      delay: spinnerDelay,\n      invertColor: true,\n      size: \"small\"\n    });\n  }\n\n  if (isActive || isHover || isFocused) {\n    return ___EmotionJSX(ArrowRightCircleIcon, {\n      primaryColor: \"currentColor\",\n      secondaryColor: \"inherit\"\n    });\n  }\n\n  return null;\n};\n\nvar GoToItem = function GoToItem(gotoItemProps) {\n  var scrollProviderRef = useContext(ScrollProviderRef);\n  var spinnerDelay = gotoItemProps.spinnerDelay || 200;\n\n  var handleClick = function handleClick( // eslint-disable-next-line no-undef\n  e) {\n    var goTo = gotoItemProps.goTo,\n        navigationViewController = gotoItemProps.navigationViewController;\n    e.preventDefault();\n\n    if (typeof goTo !== 'string') {\n      return;\n    } // Hijack focus only if the event is\n    // from a keyboard.\n\n\n    if (e.clientX === 0 && e.clientY === 0 && scrollProviderRef.current) {\n      scrollProviderRef.current.focus();\n    }\n\n    navigationViewController.setView(goTo);\n  };\n\n  var afterProp = gotoItemProps.after,\n      goTo = gotoItemProps.goTo,\n      navigationViewController = gotoItemProps.navigationViewController,\n      rest = _objectWithoutProperties(gotoItemProps, [\"after\", \"goTo\", \"navigationViewController\"]);\n\n  var after = typeof afterProp === 'undefined' ? After : afterProp;\n  var propsForAfterComp = {\n    afterGoTo: goTo || null,\n    spinnerDelay: spinnerDelay,\n    incomingView: navigationViewController.state.incomingView\n  };\n\n  var props = _objectSpread({}, rest, {\n    after: after\n  });\n\n  return ___EmotionJSX(ConnectedItem, _extends({\n    onClick: handleClick\n  }, props, propsForAfterComp));\n};\n\nexport { GoToItem as GoToItemBase };\nexport default withNavigationViewController(GoToItem);","map":{"version":3,"sources":["/home/asirob/Code/atlasmicros/src/main/resources/static/react-atlaskit-example/node_modules/@atlaskit/navigation-next/dist/esm/components/connected/GoToItem/index.js"],"names":["_extends","_objectSpread","_objectWithoutProperties","jsx","___EmotionJSX","React","useContext","ArrowRightCircleIcon","Spinner","withNavigationViewController","ConnectedItem","ScrollProviderRef","After","_ref","afterGoTo","spinnerDelay","incomingView","isActive","isHover","isFocused","id","delay","invertColor","size","primaryColor","secondaryColor","GoToItem","gotoItemProps","scrollProviderRef","handleClick","e","goTo","navigationViewController","preventDefault","clientX","clientY","current","focus","setView","afterProp","after","rest","propsForAfterComp","state","props","onClick","GoToItemBase"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\nimport React, { useContext } from 'react';\nimport ArrowRightCircleIcon from '@atlaskit/icon/glyph/arrow-right-circle';\nimport Spinner from '@atlaskit/spinner';\nimport { withNavigationViewController } from '../../../view-controller';\nimport ConnectedItem from '../ConnectedItem';\nimport { ScrollProviderRef } from '../../presentational/ContentNavigation/primitives';\n\nvar After = function After(_ref) {\n  var afterGoTo = _ref.afterGoTo,\n      spinnerDelay = _ref.spinnerDelay,\n      incomingView = _ref.incomingView,\n      isActive = _ref.isActive,\n      isHover = _ref.isHover,\n      isFocused = _ref.isFocused;\n\n  if (incomingView && incomingView.id === afterGoTo) {\n    return ___EmotionJSX(Spinner, {\n      delay: spinnerDelay,\n      invertColor: true,\n      size: \"small\"\n    });\n  }\n\n  if (isActive || isHover || isFocused) {\n    return ___EmotionJSX(ArrowRightCircleIcon, {\n      primaryColor: \"currentColor\",\n      secondaryColor: \"inherit\"\n    });\n  }\n\n  return null;\n};\n\nvar GoToItem = function GoToItem(gotoItemProps) {\n  var scrollProviderRef = useContext(ScrollProviderRef);\n  var spinnerDelay = gotoItemProps.spinnerDelay || 200;\n\n  var handleClick = function handleClick( // eslint-disable-next-line no-undef\n  e) {\n    var goTo = gotoItemProps.goTo,\n        navigationViewController = gotoItemProps.navigationViewController;\n    e.preventDefault();\n\n    if (typeof goTo !== 'string') {\n      return;\n    } // Hijack focus only if the event is\n    // from a keyboard.\n\n\n    if (e.clientX === 0 && e.clientY === 0 && scrollProviderRef.current) {\n      scrollProviderRef.current.focus();\n    }\n\n    navigationViewController.setView(goTo);\n  };\n\n  var afterProp = gotoItemProps.after,\n      goTo = gotoItemProps.goTo,\n      navigationViewController = gotoItemProps.navigationViewController,\n      rest = _objectWithoutProperties(gotoItemProps, [\"after\", \"goTo\", \"navigationViewController\"]);\n\n  var after = typeof afterProp === 'undefined' ? After : afterProp;\n  var propsForAfterComp = {\n    afterGoTo: goTo || null,\n    spinnerDelay: spinnerDelay,\n    incomingView: navigationViewController.state.incomingView\n  };\n\n  var props = _objectSpread({}, rest, {\n    after: after\n  });\n\n  return ___EmotionJSX(ConnectedItem, _extends({\n    onClick: handleClick\n  }, props, propsForAfterComp));\n};\n\nexport { GoToItem as GoToItemBase };\nexport default withNavigationViewController(GoToItem);"]},"metadata":{},"sourceType":"module"}