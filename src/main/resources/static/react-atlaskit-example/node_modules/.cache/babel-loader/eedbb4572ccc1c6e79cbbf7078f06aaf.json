{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { createTheme } from '@atlaskit/theme/components';\nimport { codeFontFamily, gridSize, fontSize } from '@atlaskit/theme/constants';\nimport * as componentTokens from './component-tokens';\nvar disabledRules = {\n  light: {\n    backgroundColor: componentTokens.defaultBackgroundColor.light,\n    backgroundColorFocus: componentTokens.disabledBackgroundColor.light,\n    backgroundColorHover: componentTokens.disabledBackgroundColor.light,\n    borderColor: componentTokens.defaultBorderColor.light,\n    borderColorFocus: componentTokens.defaultBorderColorFocus.light,\n    textColor: componentTokens.disabledTextColor.light\n  },\n  dark: {\n    backgroundColor: componentTokens.defaultBackgroundColor.dark,\n    backgroundColorFocus: componentTokens.disabledBackgroundColor.dark,\n    backgroundColorHover: componentTokens.disabledBackgroundColor.dark,\n    borderColor: componentTokens.defaultBorderColor.dark,\n    borderColorFocus: componentTokens.defaultBorderColorFocus.dark,\n    textColor: componentTokens.disabledTextColor.dark\n  }\n};\nvar invalidRules = {\n  light: {\n    backgroundColor: componentTokens.defaultBackgroundColor.light,\n    backgroundColorFocus: componentTokens.defaultBackgroundColorFocus.light,\n    backgroundColorHover: componentTokens.defaultBackgroundColorHover.light,\n    borderColor: componentTokens.invalidBorderColor.light,\n    borderColorFocus: componentTokens.defaultBorderColorFocus.light\n  },\n  dark: {\n    backgroundColor: componentTokens.defaultBackgroundColor.dark,\n    backgroundColorFocus: componentTokens.defaultBackgroundColorFocus.dark,\n    backgroundColorHover: componentTokens.defaultBackgroundColorHover.dark,\n    borderColor: componentTokens.invalidBorderColor.dark,\n    borderColorFocus: componentTokens.defaultBorderColorFocus.dark\n  }\n};\nvar backgroundColor = {\n  standard: componentTokens.defaultBackgroundColor,\n  subtle: componentTokens.transparent,\n  none: componentTokens.transparent\n};\nvar backgroundColorFocus = {\n  standard: componentTokens.defaultBackgroundColorFocus,\n  subtle: componentTokens.defaultBackgroundColorFocus,\n  none: componentTokens.transparent\n};\nvar backgroundColorHover = {\n  standard: componentTokens.defaultBackgroundColorHover,\n  subtle: componentTokens.defaultBackgroundColorHover,\n  none: componentTokens.transparent\n};\nvar borderColor = {\n  standard: componentTokens.defaultBorderColor,\n  subtle: componentTokens.transparent,\n  none: componentTokens.transparent\n};\nvar borderColorFocus = {\n  standard: componentTokens.defaultBorderColorFocus,\n  subtle: componentTokens.defaultBorderColorFocus,\n  none: componentTokens.transparent\n};\n\nvar getContainerBackgroundColor = function getContainerBackgroundColor(_a) {\n  var appearance = _a.appearance,\n      isFocused = _a.isFocused,\n      isHovered = _a.isHovered,\n      isDisabled = _a.isDisabled,\n      isInvalid = _a.isInvalid,\n      mode = _a.mode;\n\n  if (isDisabled) {\n    // switch on focus then switch on hover\n    if (isFocused) {\n      return {\n        backgroundColor: disabledRules[mode].backgroundColorFocus\n      };\n    }\n\n    if (isHovered) {\n      return {\n        backgroundColor: disabledRules[mode].backgroundColorHover\n      };\n    }\n\n    return {\n      backgroundColor: disabledRules[mode].backgroundColor\n    };\n  }\n\n  if (isInvalid) {\n    // switch on focus then switch on hover\n    if (isFocused) {\n      return {\n        backgroundColor: invalidRules[mode].backgroundColorFocus\n      };\n    }\n\n    if (isHovered) {\n      return {\n        backgroundColor: invalidRules[mode].backgroundColorHover\n      };\n    }\n\n    return {\n      backgroundColor: invalidRules[mode].backgroundColor\n    };\n  } // switch on appearance then focus then switch on hover\n\n\n  if (isFocused) {\n    return {\n      backgroundColor: backgroundColorFocus[appearance][mode]\n    };\n  }\n\n  if (isHovered) {\n    return {\n      backgroundColor: backgroundColorHover[appearance][mode]\n    };\n  }\n\n  return {\n    backgroundColor: backgroundColor[appearance][mode]\n  };\n};\n\nvar getContainerBorderColor = function getContainerBorderColor(_a) {\n  var appearance = _a.appearance,\n      isFocused = _a.isFocused,\n      isDisabled = _a.isDisabled,\n      isInvalid = _a.isInvalid,\n      mode = _a.mode;\n\n  if (isDisabled) {\n    // switch on focus then switch on hover\n    if (isFocused) {\n      return {\n        borderColor: disabledRules[mode].borderColorFocus\n      };\n    }\n\n    return {\n      borderColor: disabledRules[mode].borderColor\n    };\n  }\n\n  if (isInvalid) {\n    // switch on focus then switch on hover\n    if (isFocused) {\n      return {\n        borderColor: invalidRules[mode].borderColorFocus\n      };\n    }\n\n    return {\n      borderColor: invalidRules[mode].borderColor\n    };\n  } // switch on appearance then focus then switch on hover\n\n\n  if (isFocused) {\n    return {\n      borderColor: borderColorFocus[appearance][mode]\n    };\n  }\n\n  return {\n    borderColor: borderColor[appearance][mode]\n  };\n};\n\nvar getPlaceholderColor = function getPlaceholderColor(_a) {\n  var isDisabled = _a.isDisabled,\n      mode = _a.mode;\n  return isDisabled ? disabledRules[mode].textColor : componentTokens.placeholderTextColor[mode];\n}; // can't group these placeholder styles into one block because browsers drop\n// entire style blocks when any single selector fails to parse\n\n\nvar getPlaceholderStyle = function getPlaceholderStyle(props) {\n  return {\n    '&::-webkit-input-placeholder': {\n      /* WebKit, Blink, Edge */\n      color: getPlaceholderColor(props)\n    },\n    '&::-moz-placeholder': {\n      /* Mozilla Firefox 19+ */\n      color: getPlaceholderColor(props),\n      opacity: 1\n    },\n    '&::-ms-input-placeholder': {\n      /* Microsoft Edge */\n      color: getPlaceholderColor(props)\n    },\n    '&:-ms-input-placeholder': {\n      /* Internet Explorer 10-11 */\n      color: getPlaceholderColor(props)\n    }\n  };\n};\n\nvar getMaxWidth = function getMaxWidth(_a) {\n  var width = _a.width;\n  if (!width) return \"100%\";\n\n  switch (width) {\n    case 'xsmall':\n      return '80px';\n\n    case 'small':\n      return '160px';\n\n    case 'medium':\n      return '240px';\n\n    case 'large':\n      return '320px';\n\n    case 'xlarge':\n      return '480px';\n\n    default:\n      return width + \"px\";\n  }\n};\n\nexport var Theme = createTheme(function (props) {\n  return {\n    container: __assign(__assign(__assign({\n      alignItems: 'center'\n    }, getContainerBackgroundColor(props)), getContainerBorderColor(props)), {\n      borderRadius: '3px',\n      borderWidth: '2px',\n      borderStyle: props.appearance === 'none' ? 'none' : 'solid',\n      boxSizing: 'border-box',\n      color: props.isDisabled ? disabledRules[props.mode].textColor : componentTokens.textColor[props.mode],\n      cursor: props.isDisabled ? 'not-allowed' : 'text',\n      display: 'flex',\n      flex: '1 1 100%',\n      fontSize: fontSize() + \"px\",\n      justifyContent: 'space-between',\n      maxWidth: getMaxWidth(props),\n      overflow: 'hidden',\n      transition: \"background-color 0.2s ease-in-out, border-color 0.2s ease-in-out\",\n      wordWrap: 'break-word',\n      verticalAlign: 'top',\n      pointerEvents: 'auto'\n    }),\n    input: __assign({\n      backgroundColor: 'transparent',\n      border: 0,\n      boxSizing: 'border-box',\n      color: 'inherit',\n      cursor: 'inherit',\n      fontFamily: props.isMonospaced ? codeFontFamily() : 'inherit',\n      fontSize: fontSize() + \"px\",\n      minWidth: '0',\n      outline: 'none',\n      padding: (props.isCompact ? gridSize() / 2 : gridSize()) + \"px \" + (gridSize() - 2) + \"px\",\n      width: '100%',\n      height: (props.isCompact ? gridSize() * 3.5 : gridSize() * 4.5) / fontSize() + \"em\",\n      lineHeight: gridSize() * 2.5 / fontSize(),\n      '&[disabled]': {\n        // Safari puts on some difficult to remove styles, mainly for disabled inputs\n        // but we want full control so need to override them in all cases\n        WebkitTextFillColor: 'unset',\n        WebkitOpacity: 1\n      },\n      '&::-ms-clear': {\n        display: 'none'\n      },\n      '&:invalid': {\n        boxShadow: 'none'\n      }\n    }, getPlaceholderStyle(props))\n  };\n});\nexport var themeTokens = {\n  backgroundColor: backgroundColor,\n  backgroundColorFocus: backgroundColorFocus,\n  backgroundColorHover: backgroundColorHover,\n  borderColor: borderColor,\n  borderColorFocus: borderColorFocus,\n  placeholderTextColor: componentTokens.placeholderTextColor,\n  textColor: componentTokens.textColor,\n  invalidRules: invalidRules,\n  disabledRules: disabledRules\n};","map":{"version":3,"sources":["../../src/theme.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign } from \"tslib\";\nimport { createTheme } from '@atlaskit/theme/components';\nimport { codeFontFamily, gridSize, fontSize } from '@atlaskit/theme/constants';\nimport * as componentTokens from './component-tokens';\nvar disabledRules = {\n    light: {\n        backgroundColor: componentTokens.defaultBackgroundColor.light,\n        backgroundColorFocus: componentTokens.disabledBackgroundColor.light,\n        backgroundColorHover: componentTokens.disabledBackgroundColor.light,\n        borderColor: componentTokens.defaultBorderColor.light,\n        borderColorFocus: componentTokens.defaultBorderColorFocus.light,\n        textColor: componentTokens.disabledTextColor.light,\n    },\n    dark: {\n        backgroundColor: componentTokens.defaultBackgroundColor.dark,\n        backgroundColorFocus: componentTokens.disabledBackgroundColor.dark,\n        backgroundColorHover: componentTokens.disabledBackgroundColor.dark,\n        borderColor: componentTokens.defaultBorderColor.dark,\n        borderColorFocus: componentTokens.defaultBorderColorFocus.dark,\n        textColor: componentTokens.disabledTextColor.dark,\n    },\n};\nvar invalidRules = {\n    light: {\n        backgroundColor: componentTokens.defaultBackgroundColor.light,\n        backgroundColorFocus: componentTokens.defaultBackgroundColorFocus.light,\n        backgroundColorHover: componentTokens.defaultBackgroundColorHover.light,\n        borderColor: componentTokens.invalidBorderColor.light,\n        borderColorFocus: componentTokens.defaultBorderColorFocus.light,\n    },\n    dark: {\n        backgroundColor: componentTokens.defaultBackgroundColor.dark,\n        backgroundColorFocus: componentTokens.defaultBackgroundColorFocus.dark,\n        backgroundColorHover: componentTokens.defaultBackgroundColorHover.dark,\n        borderColor: componentTokens.invalidBorderColor.dark,\n        borderColorFocus: componentTokens.defaultBorderColorFocus.dark,\n    },\n};\nvar backgroundColor = {\n    standard: componentTokens.defaultBackgroundColor,\n    subtle: componentTokens.transparent,\n    none: componentTokens.transparent,\n};\nvar backgroundColorFocus = {\n    standard: componentTokens.defaultBackgroundColorFocus,\n    subtle: componentTokens.defaultBackgroundColorFocus,\n    none: componentTokens.transparent,\n};\nvar backgroundColorHover = {\n    standard: componentTokens.defaultBackgroundColorHover,\n    subtle: componentTokens.defaultBackgroundColorHover,\n    none: componentTokens.transparent,\n};\nvar borderColor = {\n    standard: componentTokens.defaultBorderColor,\n    subtle: componentTokens.transparent,\n    none: componentTokens.transparent,\n};\nvar borderColorFocus = {\n    standard: componentTokens.defaultBorderColorFocus,\n    subtle: componentTokens.defaultBorderColorFocus,\n    none: componentTokens.transparent,\n};\nvar getContainerBackgroundColor = function (_a) {\n    var appearance = _a.appearance, isFocused = _a.isFocused, isHovered = _a.isHovered, isDisabled = _a.isDisabled, isInvalid = _a.isInvalid, mode = _a.mode;\n    if (isDisabled) {\n        // switch on focus then switch on hover\n        if (isFocused) {\n            return {\n                backgroundColor: disabledRules[mode].backgroundColorFocus,\n            };\n        }\n        if (isHovered) {\n            return {\n                backgroundColor: disabledRules[mode].backgroundColorHover,\n            };\n        }\n        return {\n            backgroundColor: disabledRules[mode].backgroundColor,\n        };\n    }\n    if (isInvalid) {\n        // switch on focus then switch on hover\n        if (isFocused) {\n            return {\n                backgroundColor: invalidRules[mode].backgroundColorFocus,\n            };\n        }\n        if (isHovered) {\n            return {\n                backgroundColor: invalidRules[mode].backgroundColorHover,\n            };\n        }\n        return {\n            backgroundColor: invalidRules[mode].backgroundColor,\n        };\n    }\n    // switch on appearance then focus then switch on hover\n    if (isFocused) {\n        return {\n            backgroundColor: backgroundColorFocus[appearance][mode],\n        };\n    }\n    if (isHovered) {\n        return {\n            backgroundColor: backgroundColorHover[appearance][mode],\n        };\n    }\n    return {\n        backgroundColor: backgroundColor[appearance][mode],\n    };\n};\nvar getContainerBorderColor = function (_a) {\n    var appearance = _a.appearance, isFocused = _a.isFocused, isDisabled = _a.isDisabled, isInvalid = _a.isInvalid, mode = _a.mode;\n    if (isDisabled) {\n        // switch on focus then switch on hover\n        if (isFocused) {\n            return {\n                borderColor: disabledRules[mode].borderColorFocus,\n            };\n        }\n        return {\n            borderColor: disabledRules[mode].borderColor,\n        };\n    }\n    if (isInvalid) {\n        // switch on focus then switch on hover\n        if (isFocused) {\n            return {\n                borderColor: invalidRules[mode].borderColorFocus,\n            };\n        }\n        return {\n            borderColor: invalidRules[mode].borderColor,\n        };\n    }\n    // switch on appearance then focus then switch on hover\n    if (isFocused) {\n        return {\n            borderColor: borderColorFocus[appearance][mode],\n        };\n    }\n    return {\n        borderColor: borderColor[appearance][mode],\n    };\n};\nvar getPlaceholderColor = function (_a) {\n    var isDisabled = _a.isDisabled, mode = _a.mode;\n    return isDisabled\n        ? disabledRules[mode].textColor\n        : componentTokens.placeholderTextColor[mode];\n};\n// can't group these placeholder styles into one block because browsers drop\n// entire style blocks when any single selector fails to parse\nvar getPlaceholderStyle = function (props) { return ({\n    '&::-webkit-input-placeholder': {\n        /* WebKit, Blink, Edge */\n        color: getPlaceholderColor(props),\n    },\n    '&::-moz-placeholder': {\n        /* Mozilla Firefox 19+ */\n        color: getPlaceholderColor(props),\n        opacity: 1,\n    },\n    '&::-ms-input-placeholder': {\n        /* Microsoft Edge */\n        color: getPlaceholderColor(props),\n    },\n    '&:-ms-input-placeholder': {\n        /* Internet Explorer 10-11 */\n        color: getPlaceholderColor(props),\n    },\n}); };\nvar getMaxWidth = function (_a) {\n    var width = _a.width;\n    if (!width)\n        return \"100%\";\n    switch (width) {\n        case 'xsmall':\n            return '80px';\n        case 'small':\n            return '160px';\n        case 'medium':\n            return '240px';\n        case 'large':\n            return '320px';\n        case 'xlarge':\n            return '480px';\n        default:\n            return width + \"px\";\n    }\n};\nexport var Theme = createTheme(function (props) { return ({\n    container: __assign(__assign(__assign({ alignItems: 'center' }, getContainerBackgroundColor(props)), getContainerBorderColor(props)), { borderRadius: '3px', borderWidth: '2px', borderStyle: props.appearance === 'none' ? 'none' : 'solid', boxSizing: 'border-box', color: props.isDisabled\n            ? disabledRules[props.mode].textColor\n            : componentTokens.textColor[props.mode], cursor: props.isDisabled ? 'not-allowed' : 'text', display: 'flex', flex: '1 1 100%', fontSize: fontSize() + \"px\", justifyContent: 'space-between', maxWidth: getMaxWidth(props), overflow: 'hidden', transition: \"background-color 0.2s ease-in-out, border-color 0.2s ease-in-out\", wordWrap: 'break-word', verticalAlign: 'top', pointerEvents: 'auto' }),\n    input: __assign({ backgroundColor: 'transparent', border: 0, boxSizing: 'border-box', color: 'inherit', cursor: 'inherit', fontFamily: props.isMonospaced ? codeFontFamily() : 'inherit', fontSize: fontSize() + \"px\", minWidth: '0', outline: 'none', padding: (props.isCompact ? gridSize() / 2 : gridSize()) + \"px \" + (gridSize() -\n            2) + \"px\", width: '100%', height: (props.isCompact ? gridSize() * 3.5 : gridSize() * 4.5) /\n            fontSize() + \"em\", lineHeight: (gridSize() * 2.5) / fontSize(), '&[disabled]': {\n            // Safari puts on some difficult to remove styles, mainly for disabled inputs\n            // but we want full control so need to override them in all cases\n            WebkitTextFillColor: 'unset',\n            WebkitOpacity: 1,\n        }, '&::-ms-clear': {\n            display: 'none',\n        }, '&:invalid': {\n            boxShadow: 'none',\n        } }, getPlaceholderStyle(props)),\n}); });\nexport var themeTokens = {\n    backgroundColor: backgroundColor,\n    backgroundColorFocus: backgroundColorFocus,\n    backgroundColorHover: backgroundColorHover,\n    borderColor: borderColor,\n    borderColorFocus: borderColorFocus,\n    placeholderTextColor: componentTokens.placeholderTextColor,\n    textColor: componentTokens.textColor,\n    invalidRules: invalidRules,\n    disabledRules: disabledRules,\n};\n//# sourceMappingURL=theme.js.map"]},"metadata":{},"sourceType":"module"}