{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { Container } from 'unstated';\nvar defaultProps = {\n  isDebugEnabled: false\n};\n\nvar ViewController = /*#__PURE__*/function (_Container) {\n  _inherits(ViewController, _Container);\n\n  function ViewController() {\n    var _this;\n\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultProps,\n        _isDebugEnabled = _ref.isDebugEnabled;\n\n    _classCallCheck(this, ViewController);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ViewController).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      activeView: null,\n      incomingView: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"reducers\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"views\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"isDebugEnabled\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateViewController\", function (view, initialData) {\n      var id = view.id,\n          type = view.type,\n          getAnalyticsAttributes = view.getAnalyticsAttributes;\n      var reducers = _this.reducers[id] || [];\n      var data = reducers.reduce(function (d, reducer) {\n        return reducer(d);\n      }, initialData);\n      var analyticsAttributes = getAnalyticsAttributes ? getAnalyticsAttributes(data) : undefined;\n\n      _this.setState({\n        activeView: {\n          id: id,\n          type: type,\n          data: data,\n          analyticsAttributes: analyticsAttributes\n        },\n        incomingView: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addReducer\", function (viewId, reducer) {\n      var reducersForView = [].concat(_toConsumableArray(_this.reducers[viewId] || []), [reducer]);\n      _this.reducers = _objectSpread({}, _this.reducers, _defineProperty({}, viewId, reducersForView)); // If we're adding a reducer to the active view we'll want to force an\n      // update so that the reducer gets applied.\n\n      _this.updateActiveView(viewId);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeReducer\", function (viewId, reducer) {\n      var reducersForView = _this.reducers[viewId];\n\n      if (!reducersForView) {\n        return;\n      }\n\n      var newReducers = reducersForView.filter(function (r) {\n        return r !== reducer;\n      });\n      _this.reducers = _objectSpread({}, _this.reducers, _defineProperty({}, viewId, newReducers)); // If we're removing a reducer from the active view we'll want to force an\n      // update so that the data gets re-evaluated.\n\n      _this.updateActiveView(viewId);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addView\", function (view) {\n      var id = view.id;\n      _this.views = _objectSpread({}, _this.views, _defineProperty({}, id, view)); // We need to call setView again for the following cases:\n      // 1. The added view matches the active view (if it returns a Promise we\n      //    want to temporarily enter a loading state while it resolves).\n      // 2. The added view matches the expected incoming view and we want to\n      //    resolve it.\n\n      var _this$state = _this.state,\n          activeView = _this$state.activeView,\n          incomingView = _this$state.incomingView;\n\n      if (activeView && id === activeView.id || incomingView && id === incomingView.id) {\n        _this.setView(id);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeView\", function (viewId) {\n      delete _this.views[viewId];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setView\", function (viewId) {\n      var view = _this.views[viewId]; // The view has been added\n\n      if (view) {\n        var id = view.id,\n            type = view.type,\n            getItems = view.getItems;\n        var returnedItems = getItems(); // This view returned a Promise\n\n        if (returnedItems instanceof Promise) {\n          // Enter a temporary loading state\n          _this.setState({\n            incomingView: {\n              id: id,\n              type: type\n            }\n          }); // Wait for the Promise to resolve\n\n\n          returnedItems.then(function (data) {\n            _this._updateViewController(view, data);\n          });\n          return;\n        } // The view returned data\n\n\n        _this._updateViewController(view, returnedItems);\n\n        return;\n      } // The view has not been added yet. We enter an indefinite loading state\n      // until the view is added or another view is set.\n\n\n      _this.setState({\n        incomingView: {\n          id: viewId,\n          type: null\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateActiveView\", function (maybeViewId) {\n      var activeView = _this.state.activeView;\n\n      if (!activeView) {\n        return;\n      }\n\n      if (maybeViewId && maybeViewId === activeView.id) {\n        _this.setView(maybeViewId);\n\n        return;\n      }\n\n      if (!maybeViewId) {\n        _this.setView(activeView.id);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setIsDebugEnabled\", function (isDebugEnabled) {\n      _this.isDebugEnabled = isDebugEnabled;\n    });\n\n    if (typeof _isDebugEnabled !== 'undefined') {\n      _this.isDebugEnabled = _isDebugEnabled;\n    }\n\n    return _this;\n  }\n  /**\n   * Helper function for reducing a view's data and updating the state.\n   */\n\n\n  return ViewController;\n}(Container);\n\nexport { ViewController as default };","map":{"version":3,"sources":["/home/asirob/Code/atlasmicros/src/main/resources/static/react-atlaskit-example/node_modules/@atlaskit/navigation-next/dist/esm/view-controller/ViewController.js"],"names":["_objectSpread","_toConsumableArray","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_inherits","_defineProperty","Container","defaultProps","isDebugEnabled","ViewController","_Container","_this","_ref","arguments","length","undefined","_isDebugEnabled","call","activeView","incomingView","view","initialData","id","type","getAnalyticsAttributes","reducers","data","reduce","d","reducer","analyticsAttributes","setState","viewId","reducersForView","concat","updateActiveView","newReducers","filter","r","views","_this$state","state","setView","getItems","returnedItems","Promise","then","_updateViewController","maybeViewId","default"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,qCAA1B;AACA,OAAOC,kBAAP,MAA+B,0CAA/B;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,0BAAP,MAAuC,kDAAvC;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,sBAAP,MAAmC,8CAAnC;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,cAAc,EAAE;AADC,CAAnB;;AAIA,IAAIC,cAAc,GAClB,aACA,UAAUC,UAAV,EAAsB;AACpBN,EAAAA,SAAS,CAACK,cAAD,EAAiBC,UAAjB,CAAT;;AAEA,WAASD,cAAT,GAA0B;AACxB,QAAIE,KAAJ;;AAEA,QAAIC,IAAI,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoEN,YAA/E;AAAA,QACIS,eAAe,GAAGJ,IAAI,CAACJ,cAD3B;;AAGAR,IAAAA,eAAe,CAAC,IAAD,EAAOS,cAAP,CAAf;;AAEAE,IAAAA,KAAK,GAAGV,0BAA0B,CAAC,IAAD,EAAOC,eAAe,CAACO,cAAD,CAAf,CAAgCQ,IAAhC,CAAqC,IAArC,CAAP,CAAlC;;AAEAZ,IAAAA,eAAe,CAACF,sBAAsB,CAACQ,KAAD,CAAvB,EAAgC,OAAhC,EAAyC;AACtDO,MAAAA,UAAU,EAAE,IAD0C;AAEtDC,MAAAA,YAAY,EAAE;AAFwC,KAAzC,CAAf;;AAKAd,IAAAA,eAAe,CAACF,sBAAsB,CAACQ,KAAD,CAAvB,EAAgC,UAAhC,EAA4C,EAA5C,CAAf;;AAEAN,IAAAA,eAAe,CAACF,sBAAsB,CAACQ,KAAD,CAAvB,EAAgC,OAAhC,EAAyC,EAAzC,CAAf;;AAEAN,IAAAA,eAAe,CAACF,sBAAsB,CAACQ,KAAD,CAAvB,EAAgC,gBAAhC,EAAkD,KAAlD,CAAf;;AAEAN,IAAAA,eAAe,CAACF,sBAAsB,CAACQ,KAAD,CAAvB,EAAgC,uBAAhC,EAAyD,UAAUS,IAAV,EAAgBC,WAAhB,EAA6B;AACnG,UAAIC,EAAE,GAAGF,IAAI,CAACE,EAAd;AAAA,UACIC,IAAI,GAAGH,IAAI,CAACG,IADhB;AAAA,UAEIC,sBAAsB,GAAGJ,IAAI,CAACI,sBAFlC;AAGA,UAAIC,QAAQ,GAAGd,KAAK,CAACc,QAAN,CAAeH,EAAf,KAAsB,EAArC;AACA,UAAII,IAAI,GAAGD,QAAQ,CAACE,MAAT,CAAgB,UAAUC,CAAV,EAAaC,OAAb,EAAsB;AAC/C,eAAOA,OAAO,CAACD,CAAD,CAAd;AACD,OAFU,EAERP,WAFQ,CAAX;AAGA,UAAIS,mBAAmB,GAAGN,sBAAsB,GAAGA,sBAAsB,CAACE,IAAD,CAAzB,GAAkCX,SAAlF;;AAEAJ,MAAAA,KAAK,CAACoB,QAAN,CAAe;AACbb,QAAAA,UAAU,EAAE;AACVI,UAAAA,EAAE,EAAEA,EADM;AAEVC,UAAAA,IAAI,EAAEA,IAFI;AAGVG,UAAAA,IAAI,EAAEA,IAHI;AAIVI,UAAAA,mBAAmB,EAAEA;AAJX,SADC;AAObX,QAAAA,YAAY,EAAE;AAPD,OAAf;AASD,KAnBc,CAAf;;AAqBAd,IAAAA,eAAe,CAACF,sBAAsB,CAACQ,KAAD,CAAvB,EAAgC,YAAhC,EAA8C,UAAUqB,MAAV,EAAkBH,OAAlB,EAA2B;AACtF,UAAII,eAAe,GAAG,GAAGC,MAAH,CAAUnC,kBAAkB,CAACY,KAAK,CAACc,QAAN,CAAeO,MAAf,KAA0B,EAA3B,CAA5B,EAA4D,CAACH,OAAD,CAA5D,CAAtB;AACAlB,MAAAA,KAAK,CAACc,QAAN,GAAiB3B,aAAa,CAAC,EAAD,EAAKa,KAAK,CAACc,QAAX,EAAqBpB,eAAe,CAAC,EAAD,EAAK2B,MAAL,EAAaC,eAAb,CAApC,CAA9B,CAFsF,CAEY;AAClG;;AAEAtB,MAAAA,KAAK,CAACwB,gBAAN,CAAuBH,MAAvB;AACD,KANc,CAAf;;AAQA3B,IAAAA,eAAe,CAACF,sBAAsB,CAACQ,KAAD,CAAvB,EAAgC,eAAhC,EAAiD,UAAUqB,MAAV,EAAkBH,OAAlB,EAA2B;AACzF,UAAII,eAAe,GAAGtB,KAAK,CAACc,QAAN,CAAeO,MAAf,CAAtB;;AAEA,UAAI,CAACC,eAAL,EAAsB;AACpB;AACD;;AAED,UAAIG,WAAW,GAAGH,eAAe,CAACI,MAAhB,CAAuB,UAAUC,CAAV,EAAa;AACpD,eAAOA,CAAC,KAAKT,OAAb;AACD,OAFiB,CAAlB;AAGAlB,MAAAA,KAAK,CAACc,QAAN,GAAiB3B,aAAa,CAAC,EAAD,EAAKa,KAAK,CAACc,QAAX,EAAqBpB,eAAe,CAAC,EAAD,EAAK2B,MAAL,EAAaI,WAAb,CAApC,CAA9B,CAVyF,CAUK;AAC9F;;AAEAzB,MAAAA,KAAK,CAACwB,gBAAN,CAAuBH,MAAvB;AACD,KAdc,CAAf;;AAgBA3B,IAAAA,eAAe,CAACF,sBAAsB,CAACQ,KAAD,CAAvB,EAAgC,SAAhC,EAA2C,UAAUS,IAAV,EAAgB;AACxE,UAAIE,EAAE,GAAGF,IAAI,CAACE,EAAd;AACAX,MAAAA,KAAK,CAAC4B,KAAN,GAAczC,aAAa,CAAC,EAAD,EAAKa,KAAK,CAAC4B,KAAX,EAAkBlC,eAAe,CAAC,EAAD,EAAKiB,EAAL,EAASF,IAAT,CAAjC,CAA3B,CAFwE,CAEK;AAC7E;AACA;AACA;AACA;;AAEA,UAAIoB,WAAW,GAAG7B,KAAK,CAAC8B,KAAxB;AAAA,UACIvB,UAAU,GAAGsB,WAAW,CAACtB,UAD7B;AAAA,UAEIC,YAAY,GAAGqB,WAAW,CAACrB,YAF/B;;AAIA,UAAID,UAAU,IAAII,EAAE,KAAKJ,UAAU,CAACI,EAAhC,IAAsCH,YAAY,IAAIG,EAAE,KAAKH,YAAY,CAACG,EAA9E,EAAkF;AAChFX,QAAAA,KAAK,CAAC+B,OAAN,CAAcpB,EAAd;AACD;AACF,KAfc,CAAf;;AAiBAjB,IAAAA,eAAe,CAACF,sBAAsB,CAACQ,KAAD,CAAvB,EAAgC,YAAhC,EAA8C,UAAUqB,MAAV,EAAkB;AAC7E,aAAOrB,KAAK,CAAC4B,KAAN,CAAYP,MAAZ,CAAP;AACD,KAFc,CAAf;;AAIA3B,IAAAA,eAAe,CAACF,sBAAsB,CAACQ,KAAD,CAAvB,EAAgC,SAAhC,EAA2C,UAAUqB,MAAV,EAAkB;AAC1E,UAAIZ,IAAI,GAAGT,KAAK,CAAC4B,KAAN,CAAYP,MAAZ,CAAX,CAD0E,CAC1C;;AAEhC,UAAIZ,IAAJ,EAAU;AACR,YAAIE,EAAE,GAAGF,IAAI,CAACE,EAAd;AAAA,YACIC,IAAI,GAAGH,IAAI,CAACG,IADhB;AAAA,YAEIoB,QAAQ,GAAGvB,IAAI,CAACuB,QAFpB;AAGA,YAAIC,aAAa,GAAGD,QAAQ,EAA5B,CAJQ,CAIwB;;AAEhC,YAAIC,aAAa,YAAYC,OAA7B,EAAsC;AACpC;AACAlC,UAAAA,KAAK,CAACoB,QAAN,CAAe;AACbZ,YAAAA,YAAY,EAAE;AACZG,cAAAA,EAAE,EAAEA,EADQ;AAEZC,cAAAA,IAAI,EAAEA;AAFM;AADD,WAAf,EAFoC,CAOhC;;;AAGJqB,UAAAA,aAAa,CAACE,IAAd,CAAmB,UAAUpB,IAAV,EAAgB;AACjCf,YAAAA,KAAK,CAACoC,qBAAN,CAA4B3B,IAA5B,EAAkCM,IAAlC;AACD,WAFD;AAGA;AACD,SApBO,CAoBN;;;AAGFf,QAAAA,KAAK,CAACoC,qBAAN,CAA4B3B,IAA5B,EAAkCwB,aAAlC;;AAEA;AACD,OA7ByE,CA6BxE;AACF;;;AAGAjC,MAAAA,KAAK,CAACoB,QAAN,CAAe;AACbZ,QAAAA,YAAY,EAAE;AACZG,UAAAA,EAAE,EAAEU,MADQ;AAEZT,UAAAA,IAAI,EAAE;AAFM;AADD,OAAf;AAMD,KAvCc,CAAf;;AAyCAlB,IAAAA,eAAe,CAACF,sBAAsB,CAACQ,KAAD,CAAvB,EAAgC,kBAAhC,EAAoD,UAAUqC,WAAV,EAAuB;AACxF,UAAI9B,UAAU,GAAGP,KAAK,CAAC8B,KAAN,CAAYvB,UAA7B;;AAEA,UAAI,CAACA,UAAL,EAAiB;AACf;AACD;;AAED,UAAI8B,WAAW,IAAIA,WAAW,KAAK9B,UAAU,CAACI,EAA9C,EAAkD;AAChDX,QAAAA,KAAK,CAAC+B,OAAN,CAAcM,WAAd;;AAEA;AACD;;AAED,UAAI,CAACA,WAAL,EAAkB;AAChBrC,QAAAA,KAAK,CAAC+B,OAAN,CAAcxB,UAAU,CAACI,EAAzB;AACD;AACF,KAhBc,CAAf;;AAkBAjB,IAAAA,eAAe,CAACF,sBAAsB,CAACQ,KAAD,CAAvB,EAAgC,mBAAhC,EAAqD,UAAUH,cAAV,EAA0B;AAC5FG,MAAAA,KAAK,CAACH,cAAN,GAAuBA,cAAvB;AACD,KAFc,CAAf;;AAIA,QAAI,OAAOQ,eAAP,KAA2B,WAA/B,EAA4C;AAC1CL,MAAAA,KAAK,CAACH,cAAN,GAAuBQ,eAAvB;AACD;;AAED,WAAOL,KAAP;AACD;AACD;;;;;AAKA,SAAOF,cAAP;AACD,CArKD,CAqKEH,SArKF,CAFA;;AAyKA,SAASG,cAAc,IAAIwC,OAA3B","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { Container } from 'unstated';\nvar defaultProps = {\n  isDebugEnabled: false\n};\n\nvar ViewController =\n/*#__PURE__*/\nfunction (_Container) {\n  _inherits(ViewController, _Container);\n\n  function ViewController() {\n    var _this;\n\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultProps,\n        _isDebugEnabled = _ref.isDebugEnabled;\n\n    _classCallCheck(this, ViewController);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ViewController).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      activeView: null,\n      incomingView: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"reducers\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"views\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"isDebugEnabled\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateViewController\", function (view, initialData) {\n      var id = view.id,\n          type = view.type,\n          getAnalyticsAttributes = view.getAnalyticsAttributes;\n      var reducers = _this.reducers[id] || [];\n      var data = reducers.reduce(function (d, reducer) {\n        return reducer(d);\n      }, initialData);\n      var analyticsAttributes = getAnalyticsAttributes ? getAnalyticsAttributes(data) : undefined;\n\n      _this.setState({\n        activeView: {\n          id: id,\n          type: type,\n          data: data,\n          analyticsAttributes: analyticsAttributes\n        },\n        incomingView: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addReducer\", function (viewId, reducer) {\n      var reducersForView = [].concat(_toConsumableArray(_this.reducers[viewId] || []), [reducer]);\n      _this.reducers = _objectSpread({}, _this.reducers, _defineProperty({}, viewId, reducersForView)); // If we're adding a reducer to the active view we'll want to force an\n      // update so that the reducer gets applied.\n\n      _this.updateActiveView(viewId);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeReducer\", function (viewId, reducer) {\n      var reducersForView = _this.reducers[viewId];\n\n      if (!reducersForView) {\n        return;\n      }\n\n      var newReducers = reducersForView.filter(function (r) {\n        return r !== reducer;\n      });\n      _this.reducers = _objectSpread({}, _this.reducers, _defineProperty({}, viewId, newReducers)); // If we're removing a reducer from the active view we'll want to force an\n      // update so that the data gets re-evaluated.\n\n      _this.updateActiveView(viewId);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addView\", function (view) {\n      var id = view.id;\n      _this.views = _objectSpread({}, _this.views, _defineProperty({}, id, view)); // We need to call setView again for the following cases:\n      // 1. The added view matches the active view (if it returns a Promise we\n      //    want to temporarily enter a loading state while it resolves).\n      // 2. The added view matches the expected incoming view and we want to\n      //    resolve it.\n\n      var _this$state = _this.state,\n          activeView = _this$state.activeView,\n          incomingView = _this$state.incomingView;\n\n      if (activeView && id === activeView.id || incomingView && id === incomingView.id) {\n        _this.setView(id);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeView\", function (viewId) {\n      delete _this.views[viewId];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setView\", function (viewId) {\n      var view = _this.views[viewId]; // The view has been added\n\n      if (view) {\n        var id = view.id,\n            type = view.type,\n            getItems = view.getItems;\n        var returnedItems = getItems(); // This view returned a Promise\n\n        if (returnedItems instanceof Promise) {\n          // Enter a temporary loading state\n          _this.setState({\n            incomingView: {\n              id: id,\n              type: type\n            }\n          }); // Wait for the Promise to resolve\n\n\n          returnedItems.then(function (data) {\n            _this._updateViewController(view, data);\n          });\n          return;\n        } // The view returned data\n\n\n        _this._updateViewController(view, returnedItems);\n\n        return;\n      } // The view has not been added yet. We enter an indefinite loading state\n      // until the view is added or another view is set.\n\n\n      _this.setState({\n        incomingView: {\n          id: viewId,\n          type: null\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateActiveView\", function (maybeViewId) {\n      var activeView = _this.state.activeView;\n\n      if (!activeView) {\n        return;\n      }\n\n      if (maybeViewId && maybeViewId === activeView.id) {\n        _this.setView(maybeViewId);\n\n        return;\n      }\n\n      if (!maybeViewId) {\n        _this.setView(activeView.id);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setIsDebugEnabled\", function (isDebugEnabled) {\n      _this.isDebugEnabled = isDebugEnabled;\n    });\n\n    if (typeof _isDebugEnabled !== 'undefined') {\n      _this.isDebugEnabled = _isDebugEnabled;\n    }\n\n    return _this;\n  }\n  /**\n   * Helper function for reducing a view's data and updating the state.\n   */\n\n\n  return ViewController;\n}(Container);\n\nexport { ViewController as default };"]},"metadata":{},"sourceType":"module"}