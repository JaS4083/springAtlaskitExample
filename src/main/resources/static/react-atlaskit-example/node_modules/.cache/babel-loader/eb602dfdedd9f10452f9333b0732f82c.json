{"ast":null,"code":"import { __read, __spread } from \"tslib\";\nimport React, { createContext, useCallback, useEffect, useState, useRef } from 'react';\nimport { createForm } from 'final-form';\nimport createDecorator from 'final-form-focus';\nexport var FormContext = createContext(function () {\n  return function () {};\n});\nexport var IsDisabledContext = createContext(false);\n\nfunction Form(props) {\n  var formRef = useRef(null);\n  var onSubmitRef = useRef(props.onSubmit);\n  onSubmitRef.current = props.onSubmit;\n  var form = useState(function () {\n    var finalForm = createForm({\n      onSubmit: function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        return onSubmitRef.current.apply(onSubmitRef, __spread(args));\n      },\n      destroyOnUnregister: true,\n      initialValues: {},\n      mutators: {\n        setDefaultValue: function (_a, state) {\n          var _b = __read(_a, 2),\n              name = _b[0],\n              defaultValue = _b[1];\n\n          if (state.formState.initialValues) {\n            var initialValues = state.formState.initialValues;\n            var values = state.formState.values;\n            var value = name && typeof defaultValue === 'function' ? defaultValue(initialValues[name]) : defaultValue;\n            /* eslint-disable no-param-reassign */\n\n            initialValues[name] = value;\n            values[name] = value;\n            /* eslint-enable */\n          }\n        }\n      }\n    });\n    createDecorator(function () {\n      return formRef.current ? Array.from(formRef.current.querySelectorAll('input')) : [];\n    })(finalForm);\n    return finalForm;\n  })[0];\n\n  var _a = __read(useState({\n    dirty: false,\n    submitting: false\n  }), 2),\n      state = _a[0],\n      setState = _a[1];\n\n  useEffect(function () {\n    var unsubscribe = form.subscribe(function (_a) {\n      var dirty = _a.dirty,\n          submitting = _a.submitting;\n      setState({\n        dirty: dirty,\n        submitting: submitting\n      });\n    }, {\n      dirty: true,\n      submitting: true\n    });\n    return unsubscribe;\n  }, [form]);\n  var registerField = useCallback(function (name, defaultValue, subscriber, subscription, config) {\n    form.pauseValidation();\n    var unsubscribe = form.registerField(name, subscriber, subscription, config);\n    form.mutators.setDefaultValue(name, defaultValue);\n    form.resumeValidation();\n    return unsubscribe;\n  }, [form]);\n\n  var handleSubmit = function (e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    form.submit();\n  };\n\n  var handleReset = function (initialValues) {\n    form.reset(initialValues);\n  };\n\n  var handleKeyDown = function (e) {\n    if (e.key === 'Enter' && (e.ctrlKey || e.metaKey) && formRef.current) {\n      var submitButton = formRef.current.querySelector('button:not([type]), button[type=\"submit\"], input[type=\"submit\"]');\n      if (submitButton) submitButton.click();\n      e.preventDefault();\n    }\n  };\n\n  var _b = props.isDisabled,\n      isDisabled = _b === void 0 ? false : _b,\n      children = props.children;\n  var dirty = state.dirty,\n      submitting = state.submitting;\n  return React.createElement(FormContext.Provider, {\n    value: registerField\n  }, React.createElement(IsDisabledContext.Provider, {\n    value: isDisabled\n  }, children({\n    formProps: {\n      onSubmit: handleSubmit,\n      ref: formRef,\n      onKeyDown: handleKeyDown\n    },\n    dirty: dirty,\n    reset: handleReset,\n    submitting: submitting,\n    disabled: isDisabled,\n    getValues: function () {\n      return form.getState().values;\n    },\n    setFieldValue: form.change\n  })));\n}\n\nexport default Form;","map":{"version":3,"sources":["../../src/Form.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __read, __spread } from \"tslib\";\nimport React, { createContext, useCallback, useEffect, useState, useRef, } from 'react';\nimport { createForm, } from 'final-form';\nimport createDecorator from 'final-form-focus';\nexport var FormContext = createContext(function () {\n    return function () { };\n});\nexport var IsDisabledContext = createContext(false);\nfunction Form(props) {\n    var formRef = useRef(null);\n    var onSubmitRef = useRef(props.onSubmit);\n    onSubmitRef.current = props.onSubmit;\n    var form = useState(function () {\n        var finalForm = createForm({\n            onSubmit: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return onSubmitRef.current.apply(onSubmitRef, __spread(args));\n            },\n            destroyOnUnregister: true,\n            initialValues: {},\n            mutators: {\n                setDefaultValue: function (_a, state) {\n                    var _b = __read(_a, 2), name = _b[0], defaultValue = _b[1];\n                    if (state.formState.initialValues) {\n                        var initialValues = state.formState.initialValues;\n                        var values = state.formState.values;\n                        var value = name && typeof defaultValue === 'function'\n                            ? defaultValue(initialValues[name])\n                            : defaultValue;\n                        /* eslint-disable no-param-reassign */\n                        initialValues[name] = value;\n                        values[name] = value;\n                        /* eslint-enable */\n                    }\n                },\n            },\n        });\n        createDecorator(function () {\n            return formRef.current\n                ? Array.from(formRef.current.querySelectorAll('input'))\n                : [];\n        })(finalForm);\n        return finalForm;\n    })[0];\n    var _a = __read(useState({\n        dirty: false,\n        submitting: false,\n    }), 2), state = _a[0], setState = _a[1];\n    useEffect(function () {\n        var unsubscribe = form.subscribe(function (_a) {\n            var dirty = _a.dirty, submitting = _a.submitting;\n            setState({ dirty: dirty, submitting: submitting });\n        }, {\n            dirty: true,\n            submitting: true,\n        });\n        return unsubscribe;\n    }, [form]);\n    var registerField = useCallback(function (name, defaultValue, subscriber, subscription, config) {\n        form.pauseValidation();\n        var unsubscribe = form.registerField(name, subscriber, subscription, config);\n        form.mutators.setDefaultValue(name, defaultValue);\n        form.resumeValidation();\n        return unsubscribe;\n    }, [form]);\n    var handleSubmit = function (e) {\n        if (e) {\n            e.preventDefault();\n        }\n        form.submit();\n    };\n    var handleReset = function (initialValues) {\n        form.reset(initialValues);\n    };\n    var handleKeyDown = function (e) {\n        if (e.key === 'Enter' && (e.ctrlKey || e.metaKey) && formRef.current) {\n            var submitButton = formRef.current.querySelector('button:not([type]), button[type=\"submit\"], input[type=\"submit\"]');\n            if (submitButton)\n                submitButton.click();\n            e.preventDefault();\n        }\n    };\n    var _b = props.isDisabled, isDisabled = _b === void 0 ? false : _b, children = props.children;\n    var dirty = state.dirty, submitting = state.submitting;\n    return (React.createElement(FormContext.Provider, { value: registerField },\n        React.createElement(IsDisabledContext.Provider, { value: isDisabled }, children({\n            formProps: {\n                onSubmit: handleSubmit,\n                ref: formRef,\n                onKeyDown: handleKeyDown,\n            },\n            dirty: dirty,\n            reset: handleReset,\n            submitting: submitting,\n            disabled: isDisabled,\n            getValues: function () { return form.getState().values; },\n            setFieldValue: form.change,\n        }))));\n}\nexport default Form;\n//# sourceMappingURL=Form.js.map"]},"metadata":{},"sourceType":"module"}