{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { Component } from 'react';\n/**\n * This component blocks render unless any non-children props change via shallow comparison.\n *\n * Alternatively if `blockOnChange` is set, render will only be blocked when another non-children prop changes.\n * For example, if you know you do not want to re-render when a certain prop changes (use with care).\n */\n\nvar RenderBlocker = /*#__PURE__*/function (_Component) {\n  _inherits(RenderBlocker, _Component);\n\n  function RenderBlocker() {\n    _classCallCheck(this, RenderBlocker);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RenderBlocker).apply(this, arguments));\n  }\n\n  _createClass(RenderBlocker, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(prevProps) {\n      var _this$props = this.props,\n          blockOnChange = _this$props.blockOnChange,\n          children = _this$props.children,\n          props = _objectWithoutProperties(_this$props, [\"blockOnChange\", \"children\"]);\n\n      var propsChanged = Object.keys(props).some(function (propName) {\n        return props[propName] !== prevProps[propName];\n      });\n      return this.props.blockOnChange ? !propsChanged : propsChanged;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n\n  return RenderBlocker;\n}(Component);\n\n_defineProperty(RenderBlocker, \"defaultProps\", {\n  blockOnChange: false\n});\n\nexport { RenderBlocker as default };","map":{"version":3,"sources":["/home/asirob/Code/atlasmicros/src/main/resources/static/react-atlaskit-example/node_modules/@atlaskit/navigation-next/dist/esm/components/common/RenderBlocker.js"],"names":["_objectWithoutProperties","_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_inherits","_defineProperty","Component","RenderBlocker","_Component","apply","arguments","key","value","shouldComponentUpdate","prevProps","_this$props","props","blockOnChange","children","propsChanged","Object","keys","some","propName","render","default"],"mappings":"AAAA,OAAOA,wBAAP,MAAqC,gDAArC;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,OAAOC,0BAAP,MAAuC,kDAAvC;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA;;;;;;;AAOA,IAAIC,aAAa,GACjB,aACA,UAAUC,UAAV,EAAsB;AACpBJ,EAAAA,SAAS,CAACG,aAAD,EAAgBC,UAAhB,CAAT;;AAEA,WAASD,aAAT,GAAyB;AACvBP,IAAAA,eAAe,CAAC,IAAD,EAAOO,aAAP,CAAf;;AAEA,WAAOL,0BAA0B,CAAC,IAAD,EAAOC,eAAe,CAACI,aAAD,CAAf,CAA+BE,KAA/B,CAAqC,IAArC,EAA2CC,SAA3C,CAAP,CAAjC;AACD;;AAEDT,EAAAA,YAAY,CAACM,aAAD,EAAgB,CAAC;AAC3BI,IAAAA,GAAG,EAAE,uBADsB;AAE3BC,IAAAA,KAAK,EAAE,SAASC,qBAAT,CAA+BC,SAA/B,EAA0C;AAC/C,UAAIC,WAAW,GAAG,KAAKC,KAAvB;AAAA,UACIC,aAAa,GAAGF,WAAW,CAACE,aADhC;AAAA,UAEIC,QAAQ,GAAGH,WAAW,CAACG,QAF3B;AAAA,UAGIF,KAAK,GAAGjB,wBAAwB,CAACgB,WAAD,EAAc,CAAC,eAAD,EAAkB,UAAlB,CAAd,CAHpC;;AAKA,UAAII,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYL,KAAZ,EAAmBM,IAAnB,CAAwB,UAAUC,QAAV,EAAoB;AAC7D,eAAOP,KAAK,CAACO,QAAD,CAAL,KAAoBT,SAAS,CAACS,QAAD,CAApC;AACD,OAFkB,CAAnB;AAGA,aAAO,KAAKP,KAAL,CAAWC,aAAX,GAA2B,CAACE,YAA5B,GAA2CA,YAAlD;AACD;AAZ0B,GAAD,EAazB;AACDR,IAAAA,GAAG,EAAE,QADJ;AAEDC,IAAAA,KAAK,EAAE,SAASY,MAAT,GAAkB;AACvB,aAAO,KAAKR,KAAL,CAAWE,QAAlB;AACD;AAJA,GAbyB,CAAhB,CAAZ;;AAoBA,SAAOX,aAAP;AACD,CA9BD,CA8BED,SA9BF,CAFA;;AAkCAD,eAAe,CAACE,aAAD,EAAgB,cAAhB,EAAgC;AAC7CU,EAAAA,aAAa,EAAE;AAD8B,CAAhC,CAAf;;AAIA,SAASV,aAAa,IAAIkB,OAA1B","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { Component } from 'react';\n/**\n * This component blocks render unless any non-children props change via shallow comparison.\n *\n * Alternatively if `blockOnChange` is set, render will only be blocked when another non-children prop changes.\n * For example, if you know you do not want to re-render when a certain prop changes (use with care).\n */\n\nvar RenderBlocker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RenderBlocker, _Component);\n\n  function RenderBlocker() {\n    _classCallCheck(this, RenderBlocker);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RenderBlocker).apply(this, arguments));\n  }\n\n  _createClass(RenderBlocker, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(prevProps) {\n      var _this$props = this.props,\n          blockOnChange = _this$props.blockOnChange,\n          children = _this$props.children,\n          props = _objectWithoutProperties(_this$props, [\"blockOnChange\", \"children\"]);\n\n      var propsChanged = Object.keys(props).some(function (propName) {\n        return props[propName] !== prevProps[propName];\n      });\n      return this.props.blockOnChange ? !propsChanged : propsChanged;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n\n  return RenderBlocker;\n}(Component);\n\n_defineProperty(RenderBlocker, \"defaultProps\", {\n  blockOnChange: false\n});\n\nexport { RenderBlocker as default };"]},"metadata":{},"sourceType":"module"}