{"ast":null,"code":"/* eslint-disable react/require-default-props */\nimport { __assign, __extends } from \"tslib\";\nimport React from 'react';\nimport NodeResolver from 'react-node-resolver';\nimport flushable from 'flushable';\nimport { Popper } from '@atlaskit/popper';\nimport Portal from '@atlaskit/portal';\nimport { layers } from '@atlaskit/theme/constants';\nimport { withAnalyticsEvents, withAnalyticsContext, createAndFireEvent } from '@atlaskit/analytics-next';\nimport { name as packageName, version as packageVersion } from '../version.json';\nimport { Tooltip as StyledTooltip } from '../styled';\nimport Animation from './Animation';\nimport { hoveredPayload, unhoveredPayload } from './utils/analytics-payloads';\nvar SCROLL_OPTIONS = {\n  capture: true,\n  passive: true\n};\n\nfunction getMousePosition(mouseCoordinates) {\n  var safeMouse = mouseCoordinates || {\n    top: 0,\n    left: 0\n  };\n\n  var getBoundingClientRect = function getBoundingClientRect() {\n    return {\n      top: safeMouse.top,\n      left: safeMouse.left,\n      bottom: safeMouse.top,\n      right: safeMouse.left,\n      width: 0,\n      height: 0\n    };\n  };\n\n  return {\n    getBoundingClientRect: getBoundingClientRect,\n    clientWidth: 0,\n    clientHeight: 0\n  };\n}\n\nvar pendingHide;\n\nvar showTooltip = function showTooltip(fn, defaultDelay) {\n  var isHidePending = pendingHide && pendingHide.pending();\n\n  if (isHidePending) {\n    pendingHide.flush();\n  }\n\n  var pendingShow = flushable(function () {\n    return fn(isHidePending);\n  }, isHidePending ? 0 : defaultDelay);\n  return pendingShow.cancel;\n};\n\nvar hideTooltip = function hideTooltip(fn, defaultDelay) {\n  pendingHide = flushable(function (flushed) {\n    return fn(flushed);\n  }, defaultDelay);\n  return pendingHide.cancel;\n};\n\nvar Tooltip =\n/** @class */\nfunction (_super) {\n  __extends(Tooltip, _super);\n\n  function Tooltip() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.wrapperRef = null;\n    _this.targetRef = null;\n\n    _this.cancelPendingSetState = function () {};\n\n    _this.userInteraction = 'mouse';\n    _this.state = {\n      immediatelyHide: false,\n      immediatelyShow: false,\n      isVisible: false,\n      renderTooltip: false\n    };\n\n    _this.handleWindowScroll = function () {\n      if (_this.state.isVisible) {\n        _this.cancelPendingSetState();\n\n        _this.setState({\n          isVisible: false,\n          immediatelyHide: true\n        });\n      }\n    };\n\n    _this.handleMouseClick = function () {\n      if (_this.props.hideTooltipOnClick) {\n        _this.cancelPendingSetState();\n\n        _this.setState({\n          isVisible: false,\n          immediatelyHide: true\n        });\n      }\n    };\n\n    _this.handleMouseDown = function () {\n      if (_this.props.hideTooltipOnMouseDown) {\n        _this.cancelPendingSetState();\n\n        _this.setState({\n          isVisible: false,\n          immediatelyHide: true\n        });\n      }\n    };\n\n    _this.handleMouseOver = function (e) {\n      if (e.target === _this.wrapperRef) {\n        return;\n      }\n\n      _this.userInteraction = 'mouse'; // In the case where a tooltip is newly rendered but immediately becomes hovered,\n      // we need to set the coordinates in the mouseOver event.\n\n      if (!_this.fakeMouseElement) {\n        _this.fakeMouseElement = getMousePosition({\n          left: e.clientX,\n          top: e.clientY\n        });\n      }\n\n      _this.handleShowTooltip();\n    };\n\n    _this.handleFocus = function () {\n      _this.userInteraction = 'keyboard'; // We need to fake the mouse dimensions even on focus because the code path currently assumes\n      // fake mouse element needs to exist before showing the tooltip.\n\n      if (!_this.fakeMouseElement) {\n        _this.fakeMouseElement = getMousePosition({\n          left: 0,\n          top: 0\n        });\n      }\n\n      _this.handleShowTooltip();\n    };\n\n    _this.handleShowTooltip = function () {\n      _this.cancelPendingSetState();\n\n      if (Boolean(_this.props.content) && !_this.state.isVisible) {\n        _this.cancelPendingSetState = showTooltip(function (immediatelyShow) {\n          _this.setState({\n            isVisible: true,\n            renderTooltip: true,\n            immediatelyShow: immediatelyShow\n          });\n        }, _this.props.delay || 0);\n      }\n    };\n\n    _this.handleHideTooltip = function (e) {\n      if (e.target === _this.wrapperRef) {\n        return;\n      }\n\n      _this.cancelPendingSetState();\n\n      if (_this.state.isVisible) {\n        _this.cancelPendingSetState = hideTooltip(function (immediatelyHide) {\n          _this.setState({\n            isVisible: false,\n            immediatelyHide: immediatelyHide\n          });\n        }, _this.props.delay || 0);\n      }\n    }; // Update mouse coordinates, used when position is 'mouse'.\n    // We are not debouncing/throttling this function because we aren't causing any\n    // re-renders or performaing any intensive calculations, we're just updating a value.\n    // React also doesn't play nice debounced DOM event handlers because they pool their\n    // SyntheticEvent objects. Need to use event.persist as a workaround - https://stackoverflow.com/a/24679479/893630\n\n\n    _this.handleMouseMove = function (event) {\n      if (!_this.state.renderTooltip) {\n        _this.fakeMouseElement = getMousePosition({\n          left: event.clientX,\n          top: event.clientY\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  Tooltip.prototype.componentWillUnmount = function () {\n    this.cancelPendingSetState();\n    this.removeScrollListener();\n  };\n\n  Tooltip.prototype.componentDidUpdate = function (_prevProps, prevState) {\n    if (!prevState.isVisible && this.state.isVisible) {\n      if (this.props.onShow) this.props.onShow();\n      window.addEventListener('scroll', this.handleWindowScroll, SCROLL_OPTIONS);\n    } else if (prevState.isVisible && !this.state.isVisible) {\n      if (this.props.onHide) this.props.onHide();\n      this.removeScrollListener();\n    }\n  };\n\n  Tooltip.prototype.removeScrollListener = function () {\n    window.removeEventListener('scroll', this.handleWindowScroll, SCROLL_OPTIONS);\n  };\n\n  Tooltip.prototype.shouldPositionTooltipNearMouse = function () {\n    var position = this.props.position;\n    return position === 'mouse' && this.userInteraction === 'mouse';\n  };\n\n  Tooltip.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        children = _a.children,\n        position = _a.position,\n        mousePosition = _a.mousePosition,\n        content = _a.content,\n        truncate = _a.truncate,\n        TooltipContainer = _a.component,\n        TargetContainer = _a.tag,\n        testId = _a.testId;\n    var _b = this.state,\n        isVisible = _b.isVisible,\n        renderTooltip = _b.renderTooltip,\n        immediatelyShow = _b.immediatelyShow,\n        immediatelyHide = _b.immediatelyHide;\n    var tooltipPosition = position === 'mouse' ? mousePosition : position;\n    return (\n      /* eslint-disable jsx-a11y/mouse-events-have-key-events */\n      React.createElement(React.Fragment, null, TargetContainer && React.createElement(TargetContainer, {\n        onClick: this.handleMouseClick,\n        onMouseOver: this.handleMouseOver,\n        onMouseOut: this.handleHideTooltip,\n        onMouseMove: this.handleMouseMove,\n        onMouseDown: this.handleMouseDown,\n        onFocus: this.handleFocus,\n        onBlur: this.handleHideTooltip,\n        ref: function ref(wrapperRef) {\n          _this.wrapperRef = wrapperRef;\n        }\n      }, React.createElement(NodeResolver, {\n        innerRef: function innerRef(ref) {\n          _this.targetRef = ref;\n        }\n      }, React.Children.only(children))), renderTooltip && this.targetRef && this.fakeMouseElement ? React.createElement(Portal, {\n        zIndex: layers.tooltip()\n      }, React.createElement(Popper, {\n        placement: tooltipPosition,\n        referenceElement: // https://github.com/FezVrasta/react-popper#usage-without-a-reference-htmlelement\n        // We are using a popper technique to pass in a faked element when we use mouse.\n        this.shouldPositionTooltipNearMouse() ? this.fakeMouseElement : this.targetRef\n      }, function (_a) {\n        var ref = _a.ref,\n            style = _a.style;\n        return TooltipContainer && React.createElement(Animation, {\n          immediatelyShow: immediatelyShow,\n          immediatelyHide: immediatelyHide,\n          onExited: function onExited() {\n            return _this.setState({\n              renderTooltip: false\n            });\n          },\n          in: isVisible\n        }, function (getAnimationStyles) {\n          return React.createElement(TooltipContainer // innerRef can't be null so shortcircuit to undefined if it is.\n          , {\n            // innerRef can't be null so shortcircuit to undefined if it is.\n            innerRef: ref || undefined,\n            className: \"Tooltip\",\n            style: __assign(__assign({}, getAnimationStyles()), style),\n            truncate: truncate || false,\n            \"data-placement\": tooltipPosition,\n            \"data-testid\": testId\n          }, content);\n        });\n      })) : null)\n      /* eslint-enable */\n\n    );\n  };\n\n  Tooltip.defaultProps = {\n    component: StyledTooltip,\n    delay: 300,\n    mousePosition: 'bottom',\n    position: 'bottom',\n    tag: 'div'\n  };\n  return Tooltip;\n}(React.Component);\n\nexport { Tooltip as TooltipWithoutAnalytics };\nvar createAndFireEventOnAtlaskit = createAndFireEvent('atlaskit');\nexport default withAnalyticsContext({\n  componentName: 'tooltip',\n  packageName: packageName,\n  packageVersion: packageVersion\n})(withAnalyticsEvents({\n  onHide: unhoveredPayload,\n  onShow: createAndFireEventOnAtlaskit(__assign({}, hoveredPayload))\n})(Tooltip));","map":{"version":3,"sources":["../../../src/components/Tooltip.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/* eslint-disable react/require-default-props */\nimport { __assign, __extends } from \"tslib\";\nimport React from 'react';\nimport NodeResolver from 'react-node-resolver';\nimport flushable from 'flushable';\nimport { Popper } from '@atlaskit/popper';\nimport Portal from '@atlaskit/portal';\nimport { layers } from '@atlaskit/theme/constants';\nimport { withAnalyticsEvents, withAnalyticsContext, createAndFireEvent, } from '@atlaskit/analytics-next';\nimport { name as packageName, version as packageVersion, } from '../version.json';\nimport { Tooltip as StyledTooltip } from '../styled';\nimport Animation from './Animation';\nimport { hoveredPayload, unhoveredPayload } from './utils/analytics-payloads';\nvar SCROLL_OPTIONS = { capture: true, passive: true };\nfunction getMousePosition(mouseCoordinates) {\n    var safeMouse = mouseCoordinates || { top: 0, left: 0 };\n    var getBoundingClientRect = function () {\n        return {\n            top: safeMouse.top,\n            left: safeMouse.left,\n            bottom: safeMouse.top,\n            right: safeMouse.left,\n            width: 0,\n            height: 0,\n        };\n    };\n    return {\n        getBoundingClientRect: getBoundingClientRect,\n        clientWidth: 0,\n        clientHeight: 0,\n    };\n}\nvar pendingHide;\nvar showTooltip = function (fn, defaultDelay) {\n    var isHidePending = pendingHide && pendingHide.pending();\n    if (isHidePending) {\n        pendingHide.flush();\n    }\n    var pendingShow = flushable(function () { return fn(isHidePending); }, isHidePending ? 0 : defaultDelay);\n    return pendingShow.cancel;\n};\nvar hideTooltip = function (fn, defaultDelay) {\n    pendingHide = flushable(function (flushed) { return fn(flushed); }, defaultDelay);\n    return pendingHide.cancel;\n};\nvar Tooltip = /** @class */ (function (_super) {\n    __extends(Tooltip, _super);\n    function Tooltip() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.wrapperRef = null;\n        _this.targetRef = null;\n        _this.cancelPendingSetState = function () { };\n        _this.userInteraction = 'mouse';\n        _this.state = {\n            immediatelyHide: false,\n            immediatelyShow: false,\n            isVisible: false,\n            renderTooltip: false,\n        };\n        _this.handleWindowScroll = function () {\n            if (_this.state.isVisible) {\n                _this.cancelPendingSetState();\n                _this.setState({ isVisible: false, immediatelyHide: true });\n            }\n        };\n        _this.handleMouseClick = function () {\n            if (_this.props.hideTooltipOnClick) {\n                _this.cancelPendingSetState();\n                _this.setState({ isVisible: false, immediatelyHide: true });\n            }\n        };\n        _this.handleMouseDown = function () {\n            if (_this.props.hideTooltipOnMouseDown) {\n                _this.cancelPendingSetState();\n                _this.setState({ isVisible: false, immediatelyHide: true });\n            }\n        };\n        _this.handleMouseOver = function (e) {\n            if (e.target === _this.wrapperRef) {\n                return;\n            }\n            _this.userInteraction = 'mouse';\n            // In the case where a tooltip is newly rendered but immediately becomes hovered,\n            // we need to set the coordinates in the mouseOver event.\n            if (!_this.fakeMouseElement) {\n                _this.fakeMouseElement = getMousePosition({\n                    left: e.clientX,\n                    top: e.clientY,\n                });\n            }\n            _this.handleShowTooltip();\n        };\n        _this.handleFocus = function () {\n            _this.userInteraction = 'keyboard';\n            // We need to fake the mouse dimensions even on focus because the code path currently assumes\n            // fake mouse element needs to exist before showing the tooltip.\n            if (!_this.fakeMouseElement) {\n                _this.fakeMouseElement = getMousePosition({\n                    left: 0,\n                    top: 0,\n                });\n            }\n            _this.handleShowTooltip();\n        };\n        _this.handleShowTooltip = function () {\n            _this.cancelPendingSetState();\n            if (Boolean(_this.props.content) && !_this.state.isVisible) {\n                _this.cancelPendingSetState = showTooltip(function (immediatelyShow) {\n                    _this.setState({\n                        isVisible: true,\n                        renderTooltip: true,\n                        immediatelyShow: immediatelyShow,\n                    });\n                }, _this.props.delay || 0);\n            }\n        };\n        _this.handleHideTooltip = function (e) {\n            if (e.target === _this.wrapperRef) {\n                return;\n            }\n            _this.cancelPendingSetState();\n            if (_this.state.isVisible) {\n                _this.cancelPendingSetState = hideTooltip(function (immediatelyHide) {\n                    _this.setState({ isVisible: false, immediatelyHide: immediatelyHide });\n                }, _this.props.delay || 0);\n            }\n        };\n        // Update mouse coordinates, used when position is 'mouse'.\n        // We are not debouncing/throttling this function because we aren't causing any\n        // re-renders or performaing any intensive calculations, we're just updating a value.\n        // React also doesn't play nice debounced DOM event handlers because they pool their\n        // SyntheticEvent objects. Need to use event.persist as a workaround - https://stackoverflow.com/a/24679479/893630\n        _this.handleMouseMove = function (event) {\n            if (!_this.state.renderTooltip) {\n                _this.fakeMouseElement = getMousePosition({\n                    left: event.clientX,\n                    top: event.clientY,\n                });\n            }\n        };\n        return _this;\n    }\n    Tooltip.prototype.componentWillUnmount = function () {\n        this.cancelPendingSetState();\n        this.removeScrollListener();\n    };\n    Tooltip.prototype.componentDidUpdate = function (_prevProps, prevState) {\n        if (!prevState.isVisible && this.state.isVisible) {\n            if (this.props.onShow)\n                this.props.onShow();\n            window.addEventListener('scroll', this.handleWindowScroll, SCROLL_OPTIONS);\n        }\n        else if (prevState.isVisible && !this.state.isVisible) {\n            if (this.props.onHide)\n                this.props.onHide();\n            this.removeScrollListener();\n        }\n    };\n    Tooltip.prototype.removeScrollListener = function () {\n        window.removeEventListener('scroll', this.handleWindowScroll, SCROLL_OPTIONS);\n    };\n    Tooltip.prototype.shouldPositionTooltipNearMouse = function () {\n        var position = this.props.position;\n        return position === 'mouse' && this.userInteraction === 'mouse';\n    };\n    Tooltip.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, children = _a.children, position = _a.position, mousePosition = _a.mousePosition, content = _a.content, truncate = _a.truncate, TooltipContainer = _a.component, TargetContainer = _a.tag, testId = _a.testId;\n        var _b = this.state, isVisible = _b.isVisible, renderTooltip = _b.renderTooltip, immediatelyShow = _b.immediatelyShow, immediatelyHide = _b.immediatelyHide;\n        var tooltipPosition = position === 'mouse' ? mousePosition : position;\n        return (\n        /* eslint-disable jsx-a11y/mouse-events-have-key-events */\n        React.createElement(React.Fragment, null,\n            TargetContainer && (React.createElement(TargetContainer, { onClick: this.handleMouseClick, onMouseOver: this.handleMouseOver, onMouseOut: this.handleHideTooltip, onMouseMove: this.handleMouseMove, onMouseDown: this.handleMouseDown, onFocus: this.handleFocus, onBlur: this.handleHideTooltip, ref: function (wrapperRef) {\n                    _this.wrapperRef = wrapperRef;\n                } },\n                React.createElement(NodeResolver, { innerRef: function (ref) {\n                        _this.targetRef = ref;\n                    } }, React.Children.only(children)))),\n            renderTooltip && this.targetRef && this.fakeMouseElement ? (React.createElement(Portal, { zIndex: layers.tooltip() },\n                React.createElement(Popper, { placement: tooltipPosition, referenceElement: \n                    // https://github.com/FezVrasta/react-popper#usage-without-a-reference-htmlelement\n                    // We are using a popper technique to pass in a faked element when we use mouse.\n                    (this.shouldPositionTooltipNearMouse()\n                        ? this.fakeMouseElement\n                        : this.targetRef) }, function (_a) {\n                    var ref = _a.ref, style = _a.style;\n                    return TooltipContainer && (React.createElement(Animation, { immediatelyShow: immediatelyShow, immediatelyHide: immediatelyHide, onExited: function () { return _this.setState({ renderTooltip: false }); }, in: isVisible }, function (getAnimationStyles) { return (React.createElement(TooltipContainer\n                    // innerRef can't be null so shortcircuit to undefined if it is.\n                    , { \n                        // innerRef can't be null so shortcircuit to undefined if it is.\n                        innerRef: ref || undefined, className: \"Tooltip\", style: __assign(__assign({}, getAnimationStyles()), style), truncate: truncate || false, \"data-placement\": tooltipPosition, \"data-testid\": testId }, content)); }));\n                }))) : null)\n        /* eslint-enable */\n        );\n    };\n    Tooltip.defaultProps = {\n        component: StyledTooltip,\n        delay: 300,\n        mousePosition: 'bottom',\n        position: 'bottom',\n        tag: 'div',\n    };\n    return Tooltip;\n}(React.Component));\nexport { Tooltip as TooltipWithoutAnalytics };\nvar createAndFireEventOnAtlaskit = createAndFireEvent('atlaskit');\nexport default withAnalyticsContext({\n    componentName: 'tooltip',\n    packageName: packageName,\n    packageVersion: packageVersion,\n})(withAnalyticsEvents({\n    onHide: unhoveredPayload,\n    onShow: createAndFireEventOnAtlaskit(__assign({}, hoveredPayload)),\n})(Tooltip));\n//# sourceMappingURL=Tooltip.js.map"]},"metadata":{},"sourceType":"module"}