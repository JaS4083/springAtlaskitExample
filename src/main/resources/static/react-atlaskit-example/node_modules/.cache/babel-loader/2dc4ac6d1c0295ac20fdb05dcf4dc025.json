{"ast":null,"code":"import _classCallCheck from\"/home/asirob/Code/atlasmicros/src/main/resources/static/react-atlaskit-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/asirob/Code/atlasmicros/src/main/resources/static/react-atlaskit-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/home/asirob/Code/atlasmicros/src/main/resources/static/react-atlaskit-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/home/asirob/Code/atlasmicros/src/main/resources/static/react-atlaskit-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import Button from'@atlaskit/button';import Modal,{ModalTransition}from'@atlaskit/modal-dialog';import Lorem from'react-lorem-component';var ExampleBasic=/*#__PURE__*/function(_React$PureComponent){_inherits(ExampleBasic,_React$PureComponent);var _super=_createSuper(ExampleBasic);function ExampleBasic(){var _this;_classCallCheck(this,ExampleBasic);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={isOpen:false};_this.open=function(){return _this.setState({isOpen:true});};_this.close=function(){return _this.setState({isOpen:false});};_this.secondaryAction=function(_ref){var target=_ref.target;return console.log(target.innerText);};return _this;}_createClass(ExampleBasic,[{key:\"render\",value:function render(){var isOpen=this.state.isOpen;var actions=[{text:'Close',onClick:this.close},{text:'Secondary Action',onClick:this.secondaryAction}];return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Button,{onClick:this.open,appearance:\"primary\"},\"Open Modal\"),/*#__PURE__*/React.createElement(ModalTransition,null,isOpen&&/*#__PURE__*/React.createElement(Modal,{actions:actions,onClose:this.close,heading:\"Modal Title\"},/*#__PURE__*/React.createElement(Lorem,{count:2}))));}}]);return ExampleBasic;}(React.PureComponent);export{ExampleBasic as default};","map":{"version":3,"sources":["/home/asirob/Code/atlasmicros/src/main/resources/static/react-atlaskit-example/src/components/SettingsModal.js"],"names":["React","Button","Modal","ModalTransition","Lorem","ExampleBasic","state","isOpen","open","setState","close","secondaryAction","target","console","log","innerText","actions","text","onClick","PureComponent"],"mappings":"owBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,eAAhB,KAAuC,wBAAvC,CACA,MAAOC,CAAAA,KAAP,KAAkB,uBAAlB,C,GAKqBC,CAAAA,Y,uWACjBC,K,CAAe,CAAEC,MAAM,CAAE,KAAV,C,OAEfC,I,CAAO,iBAAM,OAAKC,QAAL,CAAc,CAAEF,MAAM,CAAE,IAAV,CAAd,CAAN,E,OAEPG,K,CAAQ,iBAAM,OAAKD,QAAL,CAAc,CAAEF,MAAM,CAAE,KAAV,CAAd,CAAN,E,OAERI,e,CAAkB,kBAAGC,CAAAA,MAAH,MAAGA,MAAH,OAAqBC,CAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,SAAnB,CAArB,E,+EAET,IACGR,CAAAA,MADH,CACc,KAAKD,KADnB,CACGC,MADH,CAEL,GAAMS,CAAAA,OAAO,CAAG,CACZ,CAAEC,IAAI,CAAE,OAAR,CAAiBC,OAAO,CAAE,KAAKR,KAA/B,CADY,CAEZ,CAAEO,IAAI,CAAE,kBAAR,CAA4BC,OAAO,CAAE,KAAKP,eAA1C,CAFY,CAAhB,CAKA,mBACI,4CACI,oBAAC,MAAD,EAAQ,OAAO,CAAE,KAAKH,IAAtB,CAA4B,UAAU,CAAC,SAAvC,eADJ,cAGI,oBAAC,eAAD,MACKD,MAAM,eACH,oBAAC,KAAD,EAAO,OAAO,CAAES,OAAhB,CAAyB,OAAO,CAAE,KAAKN,KAAvC,CAA8C,OAAO,CAAC,aAAtD,eACI,oBAAC,KAAD,EAAO,KAAK,CAAE,CAAd,EADJ,CAFR,CAHJ,CADJ,CAaH,C,0BA7BqCV,KAAK,CAACmB,a,SAA3Bd,Y","sourcesContent":["import React from 'react';\nimport Button from '@atlaskit/button';\nimport Modal, { ModalTransition } from '@atlaskit/modal-dialog';\nimport Lorem from 'react-lorem-component';\n\ninterface State {\n    isOpen: boolean;\n}\nexport default class ExampleBasic extends React.PureComponent<{}, State> {\n    state: State = { isOpen: false };\n\n    open = () => this.setState({ isOpen: true });\n\n    close = () => this.setState({ isOpen: false });\n\n    secondaryAction = ({ target }: any) => console.log(target.innerText);\n\n    render() {\n        const { isOpen } = this.state;\n        const actions = [\n            { text: 'Close', onClick: this.close },\n            { text: 'Secondary Action', onClick: this.secondaryAction },\n        ];\n\n        return (\n            <div>\n                <Button onClick={this.open} appearance=\"primary\" >Open Modal</Button>\n\n                <ModalTransition>\n                    {isOpen && (\n                        <Modal actions={actions} onClose={this.close} heading=\"Modal Title\">\n                            <Lorem count={2} />\n                        </Modal>\n                    )}\n                </ModalTransition>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}