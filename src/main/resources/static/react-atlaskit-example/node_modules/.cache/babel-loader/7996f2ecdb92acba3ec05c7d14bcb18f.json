{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\nimport React from 'react';\nimport { withTheme as WithEmotionTheme } from 'emotion-theming';\nimport { light } from './modes';\n\nvar withTheme = function withTheme(defaultTheme) {\n  return function (WrappedComponent) {\n    var WithTheme = WithEmotionTheme(function (props) {\n      var ctxTheme = props.theme,\n          rest = _objectWithoutProperties(props, [\"theme\"]);\n\n      var theme = Object.keys(ctxTheme).length > 0 ? ctxTheme : defaultTheme;\n      return ___EmotionJSX(WrappedComponent, _extends({\n        theme: theme\n      }, rest));\n    });\n    WithTheme.displayName = \"WithTheme(\".concat(WrappedComponent.displayName || WrappedComponent.name || 'Component', \")\");\n    return WithTheme;\n  };\n};\n\nvar defaultContentTheme = {\n  mode: light,\n  context: 'container'\n};\nvar defaultGlobalTheme = {\n  mode: light\n};\nexport var withContentTheme = function withContentTheme(WrappedComponent) {\n  return withTheme(defaultContentTheme)(WrappedComponent);\n};\nexport var withGlobalTheme = function withGlobalTheme(WrappedComponent) {\n  return withTheme(defaultGlobalTheme)(WrappedComponent);\n};\nexport default withTheme;","map":{"version":3,"sources":["/home/asirob/Code/atlasmicros/src/main/resources/static/react-atlaskit-example/node_modules/@atlaskit/navigation-next/dist/esm/theme/withTheme.js"],"names":["_extends","_objectWithoutProperties","jsx","___EmotionJSX","React","withTheme","WithEmotionTheme","light","defaultTheme","WrappedComponent","WithTheme","props","ctxTheme","theme","rest","Object","keys","length","displayName","concat","name","defaultContentTheme","mode","context","defaultGlobalTheme","withContentTheme","withGlobalTheme"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,wBAAP,MAAqC,gDAArC;AACA,SAASC,GAAG,IAAIC,aAAhB,QAAqC,eAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAS,IAAIC,gBAAtB,QAA8C,iBAA9C;AACA,SAASC,KAAT,QAAsB,SAAtB;;AAEA,IAAIF,SAAS,GAAG,SAASA,SAAT,CAAmBG,YAAnB,EAAiC;AAC/C,SAAO,UAAUC,gBAAV,EAA4B;AACjC,QAAIC,SAAS,GAAGJ,gBAAgB,CAAC,UAAUK,KAAV,EAAiB;AAChD,UAAIC,QAAQ,GAAGD,KAAK,CAACE,KAArB;AAAA,UACIC,IAAI,GAAGb,wBAAwB,CAACU,KAAD,EAAQ,CAAC,OAAD,CAAR,CADnC;;AAGA,UAAIE,KAAK,GAAGE,MAAM,CAACC,IAAP,CAAYJ,QAAZ,EAAsBK,MAAtB,GAA+B,CAA/B,GAAmCL,QAAnC,GAA8CJ,YAA1D;AACA,aAAOL,aAAa,CAACM,gBAAD,EAAmBT,QAAQ,CAAC;AAC9Ca,QAAAA,KAAK,EAAEA;AADuC,OAAD,EAE5CC,IAF4C,CAA3B,CAApB;AAGD,KAR+B,CAAhC;AASAJ,IAAAA,SAAS,CAACQ,WAAV,GAAwB,aAAaC,MAAb,CAAoBV,gBAAgB,CAACS,WAAjB,IAAgCT,gBAAgB,CAACW,IAAjD,IAAyD,WAA7E,EAA0F,GAA1F,CAAxB;AACA,WAAOV,SAAP;AACD,GAZD;AAaD,CAdD;;AAgBA,IAAIW,mBAAmB,GAAG;AACxBC,EAAAA,IAAI,EAAEf,KADkB;AAExBgB,EAAAA,OAAO,EAAE;AAFe,CAA1B;AAIA,IAAIC,kBAAkB,GAAG;AACvBF,EAAAA,IAAI,EAAEf;AADiB,CAAzB;AAGA,OAAO,IAAIkB,gBAAgB,GAAG,SAASA,gBAAT,CAA0BhB,gBAA1B,EAA4C;AACxE,SAAOJ,SAAS,CAACgB,mBAAD,CAAT,CAA+BZ,gBAA/B,CAAP;AACD,CAFM;AAGP,OAAO,IAAIiB,eAAe,GAAG,SAASA,eAAT,CAAyBjB,gBAAzB,EAA2C;AACtE,SAAOJ,SAAS,CAACmB,kBAAD,CAAT,CAA8Bf,gBAA9B,CAAP;AACD,CAFM;AAGP,eAAeJ,SAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\nimport React from 'react';\nimport { withTheme as WithEmotionTheme } from 'emotion-theming';\nimport { light } from './modes';\n\nvar withTheme = function withTheme(defaultTheme) {\n  return function (WrappedComponent) {\n    var WithTheme = WithEmotionTheme(function (props) {\n      var ctxTheme = props.theme,\n          rest = _objectWithoutProperties(props, [\"theme\"]);\n\n      var theme = Object.keys(ctxTheme).length > 0 ? ctxTheme : defaultTheme;\n      return ___EmotionJSX(WrappedComponent, _extends({\n        theme: theme\n      }, rest));\n    });\n    WithTheme.displayName = \"WithTheme(\".concat(WrappedComponent.displayName || WrappedComponent.name || 'Component', \")\");\n    return WithTheme;\n  };\n};\n\nvar defaultContentTheme = {\n  mode: light,\n  context: 'container'\n};\nvar defaultGlobalTheme = {\n  mode: light\n};\nexport var withContentTheme = function withContentTheme(WrappedComponent) {\n  return withTheme(defaultContentTheme)(WrappedComponent);\n};\nexport var withGlobalTheme = function withGlobalTheme(WrappedComponent) {\n  return withTheme(defaultGlobalTheme)(WrappedComponent);\n};\nexport default withTheme;"]},"metadata":{},"sourceType":"module"}