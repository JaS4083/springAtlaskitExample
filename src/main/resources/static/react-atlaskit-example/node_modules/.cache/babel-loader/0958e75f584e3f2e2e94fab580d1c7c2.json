{"ast":null,"code":"import { __assign } from \"tslib\";\n\nvar getAppearanceProps = function getAppearanceProps(props) {\n  return {\n    appearance: props.appearance,\n    backgroundColor: props.backgroundColor,\n    borderColor: props.borderColor,\n    groupAppearance: props.groupAppearance,\n    isActive: props.isActive,\n    isDisabled: props.isDisabled,\n    isFocus: props.isFocus,\n    isHover: props.isHover,\n    isInteractive: props.isInteractive,\n    isSelected: props.isSelected,\n    size: props.size,\n    stackIndex: props.stackIndex\n  };\n};\n\nvar getInteractionProps = function getInteractionProps(props) {\n  return {\n    onBlur: props.onBlur,\n    onClick: props.onClick,\n    onFocus: props.onFocus,\n    onKeyDown: props.onKeyDown,\n    onKeyUp: props.onKeyUp,\n    onMouseDown: props.onMouseDown,\n    onMouseEnter: props.onMouseEnter,\n    onMouseLeave: props.onMouseLeave,\n    onMouseUp: props.onMouseUp,\n    tabIndex: props.tabIndex\n  };\n};\n\nvar getLinkElementProps = function getLinkElementProps(props) {\n  var href = props.href,\n      target = props.target; // handle security issue for consumer\n  // https://mathiasbynens.github.io/rel-noopener\n\n  var rel = target === '_blank' ? 'noopener noreferrer' : null;\n  return {\n    href: href,\n    rel: rel,\n    target: target\n  };\n};\n\nvar getButtonElementProps = function getButtonElementProps(props) {\n  var id = props.id,\n      isDisabled = props.isDisabled;\n  return {\n    id: id,\n    interface: 'button',\n    disabled: isDisabled\n  };\n};\n\nexport default function getProps(component) {\n  var props = component.props;\n\n  var defaultProps = __assign(__assign({}, getAppearanceProps(props)), getInteractionProps(props));\n\n  if (props.component) {\n    return __assign(__assign({}, defaultProps), props);\n  }\n\n  if (props.href) {\n    if (props.isDisabled) {\n      return defaultProps;\n    }\n\n    return __assign(__assign({}, defaultProps), getLinkElementProps(props));\n  }\n\n  if (props.onClick) {\n    return __assign(__assign({}, defaultProps), getButtonElementProps(props));\n  }\n\n  return defaultProps;\n}","map":{"version":3,"sources":["../../../src/helpers/getProps.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign } from \"tslib\";\nvar getAppearanceProps = function (props) { return ({\n    appearance: props.appearance,\n    backgroundColor: props.backgroundColor,\n    borderColor: props.borderColor,\n    groupAppearance: props.groupAppearance,\n    isActive: props.isActive,\n    isDisabled: props.isDisabled,\n    isFocus: props.isFocus,\n    isHover: props.isHover,\n    isInteractive: props.isInteractive,\n    isSelected: props.isSelected,\n    size: props.size,\n    stackIndex: props.stackIndex,\n}); };\nvar getInteractionProps = function (props) { return ({\n    onBlur: props.onBlur,\n    onClick: props.onClick,\n    onFocus: props.onFocus,\n    onKeyDown: props.onKeyDown,\n    onKeyUp: props.onKeyUp,\n    onMouseDown: props.onMouseDown,\n    onMouseEnter: props.onMouseEnter,\n    onMouseLeave: props.onMouseLeave,\n    onMouseUp: props.onMouseUp,\n    tabIndex: props.tabIndex,\n}); };\nvar getLinkElementProps = function (props) {\n    var href = props.href, target = props.target;\n    // handle security issue for consumer\n    // https://mathiasbynens.github.io/rel-noopener\n    var rel = target === '_blank' ? 'noopener noreferrer' : null;\n    return { href: href, rel: rel, target: target };\n};\nvar getButtonElementProps = function (props) {\n    var id = props.id, isDisabled = props.isDisabled;\n    return { id: id, interface: 'button', disabled: isDisabled };\n};\nexport default function getProps(component) {\n    var props = component.props;\n    var defaultProps = __assign(__assign({}, getAppearanceProps(props)), getInteractionProps(props));\n    if (props.component) {\n        return __assign(__assign({}, defaultProps), props);\n    }\n    if (props.href) {\n        if (props.isDisabled) {\n            return defaultProps;\n        }\n        return __assign(__assign({}, defaultProps), getLinkElementProps(props));\n    }\n    if (props.onClick) {\n        return __assign(__assign({}, defaultProps), getButtonElementProps(props));\n    }\n    return defaultProps;\n}\n//# sourceMappingURL=getProps.js.map"]},"metadata":{},"sourceType":"module"}