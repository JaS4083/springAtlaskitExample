{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\nimport React, { Component, Fragment } from 'react';\nimport deepEqual from 'react-fast-compare';\nimport Transition from 'react-transition-group/Transition';\nimport { NavigationAnalyticsContext } from '@atlaskit/analytics-namespaced-context';\nimport { transitionDurationMs } from '../../../common/constants';\nimport { ContainerNavigation, ProductNavigation } from './primitives';\n\nvar ToggleContent = function ToggleContent(_ref) {\n  var isVisible = _ref.isVisible,\n      EXPERIMENTAL_HIDE_NAV_VISUALLY_ON_COLLAPSE = _ref.experimental_hideNavVisuallyOnCollapse,\n      rest = _objectWithoutProperties(_ref, [\"isVisible\", \"experimental_hideNavVisuallyOnCollapse\"]); // If FF is false, retain the old behaviour of\n  // un-mounting navigation components on collapse\n\n\n  if (!EXPERIMENTAL_HIDE_NAV_VISUALLY_ON_COLLAPSE && !isVisible) {\n    return null;\n  }\n\n  return ___EmotionJSX(Fragment, rest);\n};\n\nvar productNavigationAnalytics = {\n  attributes: {\n    navigationLayer: 'product'\n  }\n};\nvar containerNavigationAnalytics = {\n  attributes: {\n    navigationLayer: 'container'\n  }\n};\n\nvar ContentNavigation = /*#__PURE__*/function (_Component) {\n  _inherits(ContentNavigation, _Component);\n\n  function ContentNavigation() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ContentNavigation);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ContentNavigation)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      cachedContainer: null\n    });\n\n    return _this;\n  }\n\n  _createClass(ContentNavigation, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.isMounted = true;\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var props = this.props;\n      return !deepEqual(props, nextProps);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          container = _this$props.container,\n          isVisible = _this$props.isVisible,\n          Product = _this$props.product,\n          EXPERIMENTAL_HIDE_NAV_VISUALLY_ON_COLLAPSE = _this$props.experimental_hideNavVisuallyOnCollapse;\n      var CachedContainer = this.state.cachedContainer;\n      var shouldRenderContainer = Boolean(container);\n      var ContainerComponent = CachedContainer || Fragment;\n      return ___EmotionJSX(Fragment, null, ___EmotionJSX(ProductNavigation, {\n        isVisible: isVisible\n      }, ___EmotionJSX(ToggleContent, {\n        experimental_hideNavVisuallyOnCollapse: EXPERIMENTAL_HIDE_NAV_VISUALLY_ON_COLLAPSE,\n        isVisible: isVisible\n      }, ___EmotionJSX(NavigationAnalyticsContext, {\n        data: productNavigationAnalytics\n      }, ___EmotionJSX(Product, null)))), ___EmotionJSX(Transition, {\n        in: shouldRenderContainer,\n        timeout: this.isMounted ? transitionDurationMs : 0,\n        mountOnEnter: true,\n        unmountOnExit: true\n      }, function (state) {\n        return ___EmotionJSX(ContainerNavigation, {\n          isEntering: state === 'entering',\n          isExiting: state === 'exiting',\n          isVisible: isVisible\n        }, ___EmotionJSX(ToggleContent, {\n          experimental_hideNavVisuallyOnCollapse: EXPERIMENTAL_HIDE_NAV_VISUALLY_ON_COLLAPSE,\n          isVisible: isVisible\n        }, ___EmotionJSX(NavigationAnalyticsContext, {\n          data: containerNavigationAnalytics\n        }, ___EmotionJSX(ContainerComponent, null))));\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(_ref2, state) {\n      var container = _ref2.container;\n\n      if (container && container !== state.cachedContainer) {\n        // We cache the most recent container component in state so that we can\n        // render it while the container layer is transitioning out, which is\n        // triggered by setting the container prop to null.\n        return _objectSpread({}, state, {\n          cachedContainer: container\n        });\n      }\n\n      return null;\n    }\n  }]);\n\n  return ContentNavigation;\n}(Component);\n\nexport { ContentNavigation as default };","map":{"version":3,"sources":["/home/asirob/Code/atlasmicros/src/main/resources/static/react-atlaskit-example/node_modules/@atlaskit/navigation-next/dist/esm/components/presentational/ContentNavigation/index.js"],"names":["_objectSpread","_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_inherits","_defineProperty","_objectWithoutProperties","jsx","___EmotionJSX","React","Component","Fragment","deepEqual","Transition","NavigationAnalyticsContext","transitionDurationMs","ContainerNavigation","ProductNavigation","ToggleContent","_ref","isVisible","EXPERIMENTAL_HIDE_NAV_VISUALLY_ON_COLLAPSE","experimental_hideNavVisuallyOnCollapse","rest","productNavigationAnalytics","attributes","navigationLayer","containerNavigationAnalytics","ContentNavigation","_Component","_getPrototypeOf2","_this","_len","arguments","length","args","Array","_key","call","apply","concat","cachedContainer","key","value","componentDidMount","isMounted","shouldComponentUpdate","nextProps","props","render","_this$props","container","Product","product","CachedContainer","state","shouldRenderContainer","Boolean","ContainerComponent","data","in","timeout","mountOnEnter","unmountOnExit","isEntering","isExiting","getDerivedStateFromProps","_ref2","default"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\nimport React, { Component, Fragment } from 'react';\nimport deepEqual from 'react-fast-compare';\nimport Transition from 'react-transition-group/Transition';\nimport { NavigationAnalyticsContext } from '@atlaskit/analytics-namespaced-context';\nimport { transitionDurationMs } from '../../../common/constants';\nimport { ContainerNavigation, ProductNavigation } from './primitives';\n\nvar ToggleContent = function ToggleContent(_ref) {\n  var isVisible = _ref.isVisible,\n      EXPERIMENTAL_HIDE_NAV_VISUALLY_ON_COLLAPSE = _ref.experimental_hideNavVisuallyOnCollapse,\n      rest = _objectWithoutProperties(_ref, [\"isVisible\", \"experimental_hideNavVisuallyOnCollapse\"]);\n\n  // If FF is false, retain the old behaviour of\n  // un-mounting navigation components on collapse\n  if (!EXPERIMENTAL_HIDE_NAV_VISUALLY_ON_COLLAPSE && !isVisible) {\n    return null;\n  }\n\n  return ___EmotionJSX(Fragment, rest);\n};\n\nvar productNavigationAnalytics = {\n  attributes: {\n    navigationLayer: 'product'\n  }\n};\nvar containerNavigationAnalytics = {\n  attributes: {\n    navigationLayer: 'container'\n  }\n};\n\nvar ContentNavigation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContentNavigation, _Component);\n\n  function ContentNavigation() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ContentNavigation);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ContentNavigation)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      cachedContainer: null\n    });\n\n    return _this;\n  }\n\n  _createClass(ContentNavigation, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.isMounted = true;\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var props = this.props;\n      return !deepEqual(props, nextProps);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          container = _this$props.container,\n          isVisible = _this$props.isVisible,\n          Product = _this$props.product,\n          EXPERIMENTAL_HIDE_NAV_VISUALLY_ON_COLLAPSE = _this$props.experimental_hideNavVisuallyOnCollapse;\n      var CachedContainer = this.state.cachedContainer;\n      var shouldRenderContainer = Boolean(container);\n      var ContainerComponent = CachedContainer || Fragment;\n      return ___EmotionJSX(Fragment, null, ___EmotionJSX(ProductNavigation, {\n        isVisible: isVisible\n      }, ___EmotionJSX(ToggleContent, {\n        experimental_hideNavVisuallyOnCollapse: EXPERIMENTAL_HIDE_NAV_VISUALLY_ON_COLLAPSE,\n        isVisible: isVisible\n      }, ___EmotionJSX(NavigationAnalyticsContext, {\n        data: productNavigationAnalytics\n      }, ___EmotionJSX(Product, null)))), ___EmotionJSX(Transition, {\n        in: shouldRenderContainer,\n        timeout: this.isMounted ? transitionDurationMs : 0,\n        mountOnEnter: true,\n        unmountOnExit: true\n      }, function (state) {\n        return ___EmotionJSX(ContainerNavigation, {\n          isEntering: state === 'entering',\n          isExiting: state === 'exiting',\n          isVisible: isVisible\n        }, ___EmotionJSX(ToggleContent, {\n          experimental_hideNavVisuallyOnCollapse: EXPERIMENTAL_HIDE_NAV_VISUALLY_ON_COLLAPSE,\n          isVisible: isVisible\n        }, ___EmotionJSX(NavigationAnalyticsContext, {\n          data: containerNavigationAnalytics\n        }, ___EmotionJSX(ContainerComponent, null))));\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(_ref2, state) {\n      var container = _ref2.container;\n\n      if (container && container !== state.cachedContainer) {\n        // We cache the most recent container component in state so that we can\n        // render it while the container layer is transitioning out, which is\n        // triggered by setting the container prop to null.\n        return _objectSpread({}, state, {\n          cachedContainer: container\n        });\n      }\n\n      return null;\n    }\n  }]);\n\n  return ContentNavigation;\n}(Component);\n\nexport { ContentNavigation as default };"]},"metadata":{},"sourceType":"module"}