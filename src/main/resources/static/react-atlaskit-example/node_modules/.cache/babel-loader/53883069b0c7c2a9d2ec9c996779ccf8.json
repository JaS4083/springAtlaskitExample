{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport { gridSize as gridSizeFn } from '@atlaskit/theme/constants';\nimport { N40 } from '@atlaskit/theme/colors';\nvar gridSize = gridSizeFn(); // These are the styles which are consistent regardless of theme\n\nvar baseStyles = {\n  wrapper: {\n    alignItems: 'center',\n    display: 'flex',\n    height: \"\".concat(gridSize * 5, \"px\"),\n    paddingLeft: \"\".concat(gridSize * 1.5, \"px\"),\n    paddingRight: \"\".concat(gridSize * 1.5, \"px\"),\n    opacity: 0.5\n  },\n  before: {\n    backgroundColor: 'red',\n    borderRadius: '50%',\n    flexShrink: 0,\n    height: \"\".concat(gridSize * 3, \"px\"),\n    marginRight: \"\".concat(gridSize * 2, \"px\"),\n    width: \"\".concat(gridSize * 3, \"px\")\n  },\n  content: {\n    borderRadius: \"\".concat(gridSize / 2, \"px\"),\n    flexGrow: 1,\n    height: \"\".concat(gridSize * 2.5, \"px\")\n  }\n}; // Light theme\n\nexport default (function (_ref) {\n  var product = _ref.product;\n  return function () {\n    return {\n      container: {\n        wrapper: baseStyles.wrapper,\n        before: _objectSpread({}, baseStyles.before, {\n          backgroundColor: N40\n        }),\n        content: _objectSpread({}, baseStyles.content, {\n          backgroundColor: N40\n        })\n      },\n      product: {\n        wrapper: baseStyles.wrapper,\n        before: _objectSpread({}, baseStyles.before, {\n          backgroundColor: product.background.static\n        }),\n        content: _objectSpread({}, baseStyles.content, {\n          backgroundColor: product.background.static\n        })\n      }\n    };\n  };\n});","map":{"version":3,"sources":["/home/asirob/Code/atlasmicros/src/main/resources/static/react-atlaskit-example/node_modules/@atlaskit/navigation-next/dist/esm/components/presentational/SkeletonItem/styles.js"],"names":["_objectSpread","gridSize","gridSizeFn","N40","baseStyles","wrapper","alignItems","display","height","concat","paddingLeft","paddingRight","opacity","before","backgroundColor","borderRadius","flexShrink","marginRight","width","content","flexGrow","_ref","product","container","background","static"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,qCAA1B;AACA,SAASC,QAAQ,IAAIC,UAArB,QAAuC,2BAAvC;AACA,SAASC,GAAT,QAAoB,wBAApB;AACA,IAAIF,QAAQ,GAAGC,UAAU,EAAzB,C,CAA6B;;AAE7B,IAAIE,UAAU,GAAG;AACfC,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAE,QADL;AAEPC,IAAAA,OAAO,EAAE,MAFF;AAGPC,IAAAA,MAAM,EAAE,GAAGC,MAAH,CAAUR,QAAQ,GAAG,CAArB,EAAwB,IAAxB,CAHD;AAIPS,IAAAA,WAAW,EAAE,GAAGD,MAAH,CAAUR,QAAQ,GAAG,GAArB,EAA0B,IAA1B,CAJN;AAKPU,IAAAA,YAAY,EAAE,GAAGF,MAAH,CAAUR,QAAQ,GAAG,GAArB,EAA0B,IAA1B,CALP;AAMPW,IAAAA,OAAO,EAAE;AANF,GADM;AASfC,EAAAA,MAAM,EAAE;AACNC,IAAAA,eAAe,EAAE,KADX;AAENC,IAAAA,YAAY,EAAE,KAFR;AAGNC,IAAAA,UAAU,EAAE,CAHN;AAINR,IAAAA,MAAM,EAAE,GAAGC,MAAH,CAAUR,QAAQ,GAAG,CAArB,EAAwB,IAAxB,CAJF;AAKNgB,IAAAA,WAAW,EAAE,GAAGR,MAAH,CAAUR,QAAQ,GAAG,CAArB,EAAwB,IAAxB,CALP;AAMNiB,IAAAA,KAAK,EAAE,GAAGT,MAAH,CAAUR,QAAQ,GAAG,CAArB,EAAwB,IAAxB;AAND,GATO;AAiBfkB,EAAAA,OAAO,EAAE;AACPJ,IAAAA,YAAY,EAAE,GAAGN,MAAH,CAAUR,QAAQ,GAAG,CAArB,EAAwB,IAAxB,CADP;AAEPmB,IAAAA,QAAQ,EAAE,CAFH;AAGPZ,IAAAA,MAAM,EAAE,GAAGC,MAAH,CAAUR,QAAQ,GAAG,GAArB,EAA0B,IAA1B;AAHD;AAjBM,CAAjB,C,CAsBG;;AAEH,gBAAgB,UAAUoB,IAAV,EAAgB;AAC9B,MAAIC,OAAO,GAAGD,IAAI,CAACC,OAAnB;AACA,SAAO,YAAY;AACjB,WAAO;AACLC,MAAAA,SAAS,EAAE;AACTlB,QAAAA,OAAO,EAAED,UAAU,CAACC,OADX;AAETQ,QAAAA,MAAM,EAAEb,aAAa,CAAC,EAAD,EAAKI,UAAU,CAACS,MAAhB,EAAwB;AAC3CC,UAAAA,eAAe,EAAEX;AAD0B,SAAxB,CAFZ;AAKTgB,QAAAA,OAAO,EAAEnB,aAAa,CAAC,EAAD,EAAKI,UAAU,CAACe,OAAhB,EAAyB;AAC7CL,UAAAA,eAAe,EAAEX;AAD4B,SAAzB;AALb,OADN;AAULmB,MAAAA,OAAO,EAAE;AACPjB,QAAAA,OAAO,EAAED,UAAU,CAACC,OADb;AAEPQ,QAAAA,MAAM,EAAEb,aAAa,CAAC,EAAD,EAAKI,UAAU,CAACS,MAAhB,EAAwB;AAC3CC,UAAAA,eAAe,EAAEQ,OAAO,CAACE,UAAR,CAAmBC;AADO,SAAxB,CAFd;AAKPN,QAAAA,OAAO,EAAEnB,aAAa,CAAC,EAAD,EAAKI,UAAU,CAACe,OAAhB,EAAyB;AAC7CL,UAAAA,eAAe,EAAEQ,OAAO,CAACE,UAAR,CAAmBC;AADS,SAAzB;AALf;AAVJ,KAAP;AAoBD,GArBD;AAsBD,CAxBD","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport { gridSize as gridSizeFn } from '@atlaskit/theme/constants';\nimport { N40 } from '@atlaskit/theme/colors';\nvar gridSize = gridSizeFn(); // These are the styles which are consistent regardless of theme\n\nvar baseStyles = {\n  wrapper: {\n    alignItems: 'center',\n    display: 'flex',\n    height: \"\".concat(gridSize * 5, \"px\"),\n    paddingLeft: \"\".concat(gridSize * 1.5, \"px\"),\n    paddingRight: \"\".concat(gridSize * 1.5, \"px\"),\n    opacity: 0.5\n  },\n  before: {\n    backgroundColor: 'red',\n    borderRadius: '50%',\n    flexShrink: 0,\n    height: \"\".concat(gridSize * 3, \"px\"),\n    marginRight: \"\".concat(gridSize * 2, \"px\"),\n    width: \"\".concat(gridSize * 3, \"px\")\n  },\n  content: {\n    borderRadius: \"\".concat(gridSize / 2, \"px\"),\n    flexGrow: 1,\n    height: \"\".concat(gridSize * 2.5, \"px\")\n  }\n}; // Light theme\n\nexport default (function (_ref) {\n  var product = _ref.product;\n  return function () {\n    return {\n      container: {\n        wrapper: baseStyles.wrapper,\n        before: _objectSpread({}, baseStyles.before, {\n          backgroundColor: N40\n        }),\n        content: _objectSpread({}, baseStyles.content, {\n          backgroundColor: N40\n        })\n      },\n      product: {\n        wrapper: baseStyles.wrapper,\n        before: _objectSpread({}, baseStyles.before, {\n          backgroundColor: product.background.static\n        }),\n        content: _objectSpread({}, baseStyles.content, {\n          backgroundColor: product.background.static\n        })\n      }\n    };\n  };\n});"]},"metadata":{},"sourceType":"module"}