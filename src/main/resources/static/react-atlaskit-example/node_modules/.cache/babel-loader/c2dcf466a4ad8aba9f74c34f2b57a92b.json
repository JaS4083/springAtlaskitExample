{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport React from 'react';\nimport memoizeOne from 'memoize-one';\nimport { Popper as ReactPopper } from 'react-popper';\nexport { Manager, Reference } from 'react-popper';\nvar FlipBehavior = {\n  auto: [],\n  top: ['top', 'bottom', 'top'],\n  right: ['right', 'left', 'right'],\n  bottom: ['bottom', 'top', 'bottom'],\n  left: ['left', 'right', 'left']\n};\n\nvar getFlipBehavior = function getFlipBehavior(side) {\n  return FlipBehavior[side];\n};\n\nvar Popper =\n/** @class */\nfunction (_super) {\n  __extends(Popper, _super);\n\n  function Popper() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.getModifiers = memoizeOne(function (placement) {\n      var flipBehavior = getFlipBehavior(placement.split('-')[0]);\n      var modifiers = {\n        flip: {\n          enabled: true,\n          behavior: flipBehavior,\n          boundariesElement: 'viewport'\n        },\n        hide: {\n          enabled: true\n        },\n        offset: {\n          enabled: true,\n          offset: _this.props.offset\n        },\n        preventOverflow: {\n          enabled: true,\n          escapeWithReference: false,\n          boundariesElement: 'window'\n        }\n      };\n\n      if (_this.props.modifiers) {\n        return __assign(__assign({}, modifiers), _this.props.modifiers);\n      }\n\n      return modifiers;\n    });\n    return _this;\n  }\n\n  Popper.prototype.render = function () {\n    var _a = this.props,\n        placement = _a.placement,\n        children = _a.children,\n        referenceElement = _a.referenceElement;\n    var modifiers = this.getModifiers(this.props.placement);\n    return React.createElement(ReactPopper, __assign({\n      positionFixed: true,\n      modifiers: modifiers,\n      placement: placement\n    }, referenceElement ? {\n      referenceElement: referenceElement\n    } : {}), children);\n  };\n\n  Popper.defaultProps = {\n    children: function children() {\n      return null;\n    },\n    offset: '0, 8px',\n    placement: 'bottom-start'\n  };\n  return Popper;\n}(React.Component);\n\nexport { Popper };","map":{"version":3,"sources":["../../src/Popper.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport React from 'react';\nimport memoizeOne from 'memoize-one';\nimport { Popper as ReactPopper, } from 'react-popper';\nexport { Manager, Reference } from 'react-popper';\nvar FlipBehavior = {\n    auto: [],\n    top: ['top', 'bottom', 'top'],\n    right: ['right', 'left', 'right'],\n    bottom: ['bottom', 'top', 'bottom'],\n    left: ['left', 'right', 'left'],\n};\nvar getFlipBehavior = function (side) { return FlipBehavior[side]; };\nvar Popper = /** @class */ (function (_super) {\n    __extends(Popper, _super);\n    function Popper() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.getModifiers = memoizeOne(function (placement) {\n            var flipBehavior = getFlipBehavior(placement.split('-')[0]);\n            var modifiers = {\n                flip: {\n                    enabled: true,\n                    behavior: flipBehavior,\n                    boundariesElement: 'viewport',\n                },\n                hide: {\n                    enabled: true,\n                },\n                offset: {\n                    enabled: true,\n                    offset: _this.props.offset,\n                },\n                preventOverflow: {\n                    enabled: true,\n                    escapeWithReference: false,\n                    boundariesElement: 'window',\n                },\n            };\n            if (_this.props.modifiers) {\n                return __assign(__assign({}, modifiers), _this.props.modifiers);\n            }\n            return modifiers;\n        });\n        return _this;\n    }\n    Popper.prototype.render = function () {\n        var _a = this.props, placement = _a.placement, children = _a.children, referenceElement = _a.referenceElement;\n        var modifiers = this.getModifiers(this.props.placement);\n        return (React.createElement(ReactPopper, __assign({ positionFixed: true, modifiers: modifiers, placement: placement }, (referenceElement ? { referenceElement: referenceElement } : {})), children));\n    };\n    Popper.defaultProps = {\n        children: function () { return null; },\n        offset: '0, 8px',\n        placement: 'bottom-start',\n    };\n    return Popper;\n}(React.Component));\nexport { Popper };\n//# sourceMappingURL=Popper.js.map"]},"metadata":{},"sourceType":"module"}