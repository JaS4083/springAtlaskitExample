{"ast":null,"code":"var _jsxFileName = \"/home/asirob/Code/atlasmicros/src/main/resources/static/react-atlaskit-example/src/components/SettingsModal.js\";\nimport React from 'react';\nimport Button from '@atlaskit/button';\nimport Modal, { ModalTransition } from '@atlaskit/modal-dialog';\nimport Lorem from 'react-lorem-component';\nexport default class ExampleBasic extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isOpen: false\n    };\n\n    this.open = () => this.setState({\n      isOpen: true\n    });\n\n    this.close = () => this.setState({\n      isOpen: false\n    });\n\n    this.secondaryAction = ({\n      target\n    }) => console.log(target.innerText);\n  }\n\n  render() {\n    const {\n      isOpen\n    } = this.state;\n    const actions = [{\n      text: 'Close',\n      onClick: this.close\n    }, {\n      text: 'Secondary Action',\n      onClick: this.secondaryAction\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.open,\n      appearance: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, \"Open Modal\"), /*#__PURE__*/React.createElement(ModalTransition, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, isOpen && /*#__PURE__*/React.createElement(Modal, {\n      actions: actions,\n      onClose: this.close,\n      heading: \"Modal Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Lorem, {\n      count: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 29\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/asirob/Code/atlasmicros/src/main/resources/static/react-atlaskit-example/src/components/SettingsModal.js"],"names":["React","Button","Modal","ModalTransition","Lorem","ExampleBasic","PureComponent","state","isOpen","open","setState","close","secondaryAction","target","console","log","innerText","render","actions","text","onClick"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,KAAP,IAAgBC,eAAhB,QAAuC,wBAAvC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AAKA,eAAe,MAAMC,YAAN,SAA2BL,KAAK,CAACM,aAAjC,CAA0D;AAAA;AAAA;AAAA,SACrEC,KADqE,GACtD;AAAEC,MAAAA,MAAM,EAAE;AAAV,KADsD;;AAAA,SAGrEC,IAHqE,GAG9D,MAAM,KAAKC,QAAL,CAAc;AAAEF,MAAAA,MAAM,EAAE;AAAV,KAAd,CAHwD;;AAAA,SAKrEG,KALqE,GAK7D,MAAM,KAAKD,QAAL,CAAc;AAAEF,MAAAA,MAAM,EAAE;AAAV,KAAd,CALuD;;AAAA,SAOrEI,eAPqE,GAOnD,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAqBC,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,SAAnB,CAP8B;AAAA;;AASrEC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAET,MAAAA;AAAF,QAAa,KAAKD,KAAxB;AACA,UAAMW,OAAO,GAAG,CACZ;AAAEC,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,OAAO,EAAE,KAAKT;AAA/B,KADY,EAEZ;AAAEQ,MAAAA,IAAI,EAAE,kBAAR;AAA4BC,MAAAA,OAAO,EAAE,KAAKR;AAA1C,KAFY,CAAhB;AAKA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKH,IAAtB;AAA4B,MAAA,UAAU,EAAC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAGI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,MAAM,iBACH,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAEU,OAAhB;AAAyB,MAAA,OAAO,EAAE,KAAKP,KAAvC;AAA8C,MAAA,OAAO,EAAC,aAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFR,CAHJ,CADJ;AAaH;;AA7BoE","sourcesContent":["import React from 'react';\nimport Button from '@atlaskit/button';\nimport Modal, { ModalTransition } from '@atlaskit/modal-dialog';\nimport Lorem from 'react-lorem-component';\n\ninterface State {\n    isOpen: boolean;\n}\nexport default class ExampleBasic extends React.PureComponent<{}, State> {\n    state: State = { isOpen: false };\n\n    open = () => this.setState({ isOpen: true });\n\n    close = () => this.setState({ isOpen: false });\n\n    secondaryAction = ({ target }: any) => console.log(target.innerText);\n\n    render() {\n        const { isOpen } = this.state;\n        const actions = [\n            { text: 'Close', onClick: this.close },\n            { text: 'Secondary Action', onClick: this.secondaryAction },\n        ];\n\n        return (\n            <div>\n                <Button onClick={this.open} appearance=\"primary\" >Open Modal</Button>\n\n                <ModalTransition>\n                    {isOpen && (\n                        <Modal actions={actions} onClose={this.close} heading=\"Modal Title\">\n                            <Lorem count={2} />\n                        </Modal>\n                    )}\n                </ModalTransition>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}